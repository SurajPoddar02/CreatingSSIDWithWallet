{"id":"3d34c246fe099ca738ff43c52ffc09b0","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/SSIDWithWallet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract SSIDWithWallet {\n    struct Identity {\n        uint256 id;\n        string name;\n        string email;\n        uint256 dob;\n        address wallet;\n        uint256[] certificationIDs;\n    }\n\n    struct Certification {\n        uint256 id;\n        string name;\n        uint256 issueDate;\n        bool verified;\n    }\n\n    mapping(address => Identity) private identities;\n    mapping(uint256 => Certification) private certifications;\n\n    event IdentityCreated(address indexed owner, uint256 id);\n    event CertificationIssued(uint256 indexed certificationID, uint256 indexed identityID);\n\n    function createIdentity(string memory name, string memory email, uint256 dob) public {\n        \n        Identity storage newIdentity = identities[msg.sender];\n        newIdentity.id = block.timestamp;\n        newIdentity.name = name;\n        newIdentity.email = email;\n        newIdentity.dob = dob;\n        newIdentity.wallet = address(new Wallet(msg.sender));\n\n        emit IdentityCreated(msg.sender, newIdentity.id);\n    }\n\n    function issueCertification(\n        uint256 identityID,\n        string memory name,\n        uint256 issueDate,\n        bool verified\n    ) public {\n        Identity storage identity = identities[msg.sender];\n        require(identity.id == identityID, \"Invalid Identity\");\n\n        uint256 certificationID = block.timestamp;\n        Certification storage certification = certifications[certificationID];\n        certification.id = certificationID;\n        certification.name = name;\n        certification.issueDate = issueDate;\n        certification.verified = verified;\n\n        identity.certificationIDs.push(certificationID);\n\n        emit CertificationIssued(certificationID, identityID);\n    }\n\n    function verifyCertification(uint256 certificationID) public view returns (bool) {\n        Certification memory certification = certifications[certificationID];\n        return certification.verified;\n    }\n\n    function getIdentity(uint256 providedId) public view returns (Identity memory) {\n        Identity memory storedIdentity = identities[msg.sender];\n        require(storedIdentity.id == providedId, \"Provided SSID does not match the stored SSID\");\n        return storedIdentity;\n    }\n}\n\ncontract Wallet {\n    using SafeERC20 for IERC20;\n\n    address private owner;\n\n    constructor(address _owner) {\n        owner = _owner;\n    }\n\n    function transfer(address to, uint256 amount, IERC20 token) external {\n        require(msg.sender == owner, \"Only owner can transfer\");\n        token.safeTransfer(to, amount);\n    }\n\n    function getOwner() external view returns (address) {\n        return owner;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"212:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":11,"name":"Transfer","nameLocation":"394:8:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:0","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:0","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:0","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":20,"name":"Approval","nameLocation":"625:8:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:0","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:0","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:0","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nameLocation":"939:7:0","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"1219:2:0","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1231:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"1565:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1580:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nameLocation":"2299:7:0","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nameLocation":"2316:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nameLocation":"2685:4:0","nodeType":"VariableDeclaration","scope":76,"src":"2677:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nameLocation":"2707:2:0","nodeType":"VariableDeclaration","scope":76,"src":"2699:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nameLocation":"2727:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2719:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":76,"src":"2758:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:0"},"scope":77,"src":"2646:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2564:0","usedErrors":[]}],"src":"106:2661:0"},"id":0},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[113]},"id":114,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"139:480:1","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":113,"linearizedBaseContracts":[113],"name":"IERC20Permit","nameLocation":"630:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"649:792:1","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:1","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"owner","nameLocation":"1479:5:1","nodeType":"VariableDeclaration","scope":98,"src":"1471:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"spender","nameLocation":"1502:7:1","nodeType":"VariableDeclaration","scope":98,"src":"1494:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"value","nameLocation":"1527:5:1","nodeType":"VariableDeclaration","scope":98,"src":"1519:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:1","nodeType":"VariableDeclaration","scope":98,"src":"1542:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"v","nameLocation":"1574:1:1","nodeType":"VariableDeclaration","scope":98,"src":"1568:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":90,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"r","nameLocation":"1593:1:1","nodeType":"VariableDeclaration","scope":98,"src":"1585:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"s","nameLocation":"1612:1:1","nodeType":"VariableDeclaration","scope":98,"src":"1604:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[],"src":"1628:0:1"},"scope":113,"src":"1446:183:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"1635:294:1","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":106,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"owner","nameLocation":"1958:5:1","nodeType":"VariableDeclaration","scope":106,"src":"1950:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"1988:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:1"},"scope":113,"src":"1934:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"2003:128:1","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":112,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:1","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2214:2:1"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":112,"src":"2240:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:1"},"scope":113,"src":"2189:60:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":114,"src":"620:1631:1","usedErrors":[]}],"src":"114:2138:1"},"id":1},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[724],"IERC20":[77],"IERC20Permit":[113],"SafeERC20":[394]},"id":395,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":115,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":395,"sourceUnit":78,"src":"140:23:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":395,"sourceUnit":114,"src":"164:46:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":395,"sourceUnit":725,"src":"211:36:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"249:457:2","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":394,"linearizedBaseContracts":[394],"name":"SafeERC20","nameLocation":"715:9:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":122,"libraryName":{"id":120,"name":"Address","nameLocations":["737:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"737:7:2"},"nodeType":"UsingForDirective","src":"731:26:2","typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":144,"nodeType":"Block","src":"865:103:2","statements":[{"expression":{"arguments":[{"id":133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"895:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"925:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:2","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":44,"src":"925:14:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:2","memberName":"selector","nodeType":"MemberAccess","src":"925:23:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":139,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"950:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"954:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":134,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":132,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"875:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"875:86:2"}]},"id":145,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:2","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"token","nameLocation":"801:5:2","nodeType":"VariableDeclaration","scope":145,"src":"794:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":124,"nodeType":"UserDefinedTypeName","pathNode":{"id":123,"name":"IERC20","nameLocations":["794:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"794:6:2"},"referencedDeclaration":77,"src":"794:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"to","nameLocation":"824:2:2","nodeType":"VariableDeclaration","scope":145,"src":"816:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"value","nameLocation":"844:5:2","nodeType":"VariableDeclaration","scope":145,"src":"836:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:2"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"865:0:2"},"scope":394,"src":"763:205:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":170,"nodeType":"Block","src":"1102:113:2","statements":[{"expression":{"arguments":[{"id":158,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1132:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":161,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1162:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:2","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":76,"src":"1162:18:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:2","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":164,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1191:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1197:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1201:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":159,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":157,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1112:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"ExpressionStatement","src":"1112:96:2"}]},"id":171,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:2","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"token","nameLocation":"1016:5:2","nodeType":"VariableDeclaration","scope":171,"src":"1009:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":147,"nodeType":"UserDefinedTypeName","pathNode":{"id":146,"name":"IERC20","nameLocations":["1009:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1009:6:2"},"referencedDeclaration":77,"src":"1009:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"from","nameLocation":"1039:4:2","nodeType":"VariableDeclaration","scope":171,"src":"1031:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"to","nameLocation":"1061:2:2","nodeType":"VariableDeclaration","scope":171,"src":"1053:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"value","nameLocation":"1081:5:2","nodeType":"VariableDeclaration","scope":171,"src":"1073:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:2"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"1102:0:2"},"scope":394,"src":"974:241:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":214,"nodeType":"Block","src":"1581:497:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"1830:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":191,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}],"id":190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:2","typeDescriptions":{}}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1877:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":187,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1846:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:2","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"1846:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"1808:163:2"},{"expression":{"arguments":[{"id":203,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2001:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2031:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2031:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:2","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":209,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"2055:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2064:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":204,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":202,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1981:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"1981:90:2"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1221:249:2","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:2","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"token","nameLocation":"1512:5:2","nodeType":"VariableDeclaration","scope":215,"src":"1505:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":174,"nodeType":"UserDefinedTypeName","pathNode":{"id":173,"name":"IERC20","nameLocations":["1505:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1505:6:2"},"referencedDeclaration":77,"src":"1505:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"spender","nameLocation":"1535:7:2","nodeType":"VariableDeclaration","scope":215,"src":"1527:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"value","nameLocation":"1560:5:2","nodeType":"VariableDeclaration","scope":215,"src":"1552:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:2"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"1581:0:2"},"scope":394,"src":"1475:603:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"2200:194:2","statements":[{"assignments":[226],"declarations":[{"constant":false,"id":226,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:2","nodeType":"VariableDeclaration","scope":250,"src":"2210:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":237,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":231,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}],"id":230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:2","typeDescriptions":{}}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":233,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2264:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":227,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2233:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:2","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"2233:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"2275:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:2"},{"expression":{"arguments":[{"id":239,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2310:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":242,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2340:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2340:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:2","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":245,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2364:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":246,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2373:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":240,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":238,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2290:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"ExpressionStatement","src":"2290:97:2"}]},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:2","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"token","nameLocation":"2131:5:2","nodeType":"VariableDeclaration","scope":251,"src":"2124:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":217,"nodeType":"UserDefinedTypeName","pathNode":{"id":216,"name":"IERC20","nameLocations":["2124:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2124:6:2"},"referencedDeclaration":77,"src":"2124:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"spender","nameLocation":"2154:7:2","nodeType":"VariableDeclaration","scope":251,"src":"2146:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"value","nameLocation":"2179:5:2","nodeType":"VariableDeclaration","scope":251,"src":"2171:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"2200:0:2"},"scope":394,"src":"2084:310:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"2516:370:2","statements":[{"id":297,"nodeType":"UncheckedBlock","src":"2526:354:2","statements":[{"assignments":[262],"declarations":[{"constant":false,"id":262,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:2","nodeType":"VariableDeclaration","scope":297,"src":"2550:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":271,"initialValue":{"arguments":[{"arguments":[{"id":267,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$394","typeString":"library SafeERC20"}],"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:2","typeDescriptions":{}}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":269,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2604:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":263,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2573:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:2","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":54,"src":"2573:15:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":273,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"2634:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2650:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"2626:75:2"},{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:2","nodeType":"VariableDeclaration","scope":297,"src":"2715:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":284,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":281,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"2738:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2753:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:2"},{"expression":{"arguments":[{"id":286,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2792:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":289,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2822:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:2","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":64,"src":"2822:13:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:2","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":292,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2846:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":293,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2855:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":287,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:2","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":285,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2772:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"2772:97:2"}]}]},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:2","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"token","nameLocation":"2447:5:2","nodeType":"VariableDeclaration","scope":299,"src":"2440:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":253,"nodeType":"UserDefinedTypeName","pathNode":{"id":252,"name":"IERC20","nameLocations":["2440:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2440:6:2"},"referencedDeclaration":77,"src":"2440:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"spender","nameLocation":"2470:7:2","nodeType":"VariableDeclaration","scope":299,"src":"2462:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"value","nameLocation":"2495:5:2","nodeType":"VariableDeclaration","scope":299,"src":"2487:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:2"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"2516:0:2"},"scope":394,"src":"2400:486:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":354,"nodeType":"Block","src":"3107:257:2","statements":[{"assignments":[320],"declarations":[{"constant":false,"id":320,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:2","nodeType":"VariableDeclaration","scope":354,"src":"3117:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":325,"initialValue":{"arguments":[{"id":323,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3152:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":321,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3139:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:2","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":106,"src":"3139:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:2"},{"expression":{"arguments":[{"id":329,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3181:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":330,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3188:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3197:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":332,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"3204:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":333,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"3214:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":334,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"3217:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":335,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3220:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":326,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3168:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:2","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":98,"src":"3168:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"3168:54:2"},{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:2","nodeType":"VariableDeclaration","scope":354,"src":"3232:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":344,"initialValue":{"arguments":[{"id":342,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":340,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3253:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:2","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":106,"src":"3253:12:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":346,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"3290:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"3304:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"ExpressionStatement","src":"3282:75:2"}]},"id":355,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:2","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"token","nameLocation":"2934:5:2","nodeType":"VariableDeclaration","scope":355,"src":"2921:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"},"typeName":{"id":301,"nodeType":"UserDefinedTypeName","pathNode":{"id":300,"name":"IERC20Permit","nameLocations":["2921:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"2921:12:2"},"referencedDeclaration":113,"src":"2921:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$113","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"owner","nameLocation":"2957:5:2","nodeType":"VariableDeclaration","scope":355,"src":"2949:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"spender","nameLocation":"2980:7:2","nodeType":"VariableDeclaration","scope":355,"src":"2972:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"value","nameLocation":"3005:5:2","nodeType":"VariableDeclaration","scope":355,"src":"2997:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:2","nodeType":"VariableDeclaration","scope":355,"src":"3020:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"v","nameLocation":"3052:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3046:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":311,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"r","nameLocation":"3071:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3063:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"s","nameLocation":"3090:1:2","nodeType":"VariableDeclaration","scope":355,"src":"3082:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:2"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"3107:0:2"},"scope":394,"src":"2892:472:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":392,"nodeType":"Block","src":"3817:636:2","statements":[{"assignments":[365],"declarations":[{"constant":false,"id":365,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:2","nodeType":"VariableDeclaration","scope":392,"src":"4166:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":364,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":374,"initialValue":{"arguments":[{"id":371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4220:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":368,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4200:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:2","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:2","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":484,"src":"4192:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":375,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4275:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:2","memberName":"length","nodeType":"MemberAccess","src":"4275:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":391,"nodeType":"IfStatement","src":"4271:176:2","trueBody":{"id":390,"nodeType":"Block","src":"4298:149:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":382,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4370:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:2","typeDescriptions":{}}}],"id":385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":380,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:2","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:2","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"4351:85:2"}]}}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"3370:372:2","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":393,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:2","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"token","nameLocation":"3783:5:2","nodeType":"VariableDeclaration","scope":393,"src":"3776:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":358,"nodeType":"UserDefinedTypeName","pathNode":{"id":357,"name":"IERC20","nameLocations":["3776:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3776:6:2"},"referencedDeclaration":77,"src":"3776:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"data","nameLocation":"3803:4:2","nodeType":"VariableDeclaration","scope":393,"src":"3790:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":360,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:2"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"3817:0:2"},"scope":394,"src":"3747:706:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":395,"src":"707:3748:2","usedErrors":[]}],"src":"115:4341:2"},"id":2},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[724]},"id":725,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":396,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"126:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":724,"linearizedBaseContracts":[724],"name":"Address","nameLocation":"202:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":411,"nodeType":"Block","src":"1241:254:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":405,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1465:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:3","memberName":"code","nodeType":"MemberAccess","src":"1465:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:3","memberName":"length","nodeType":"MemberAccess","src":"1465:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":404,"id":410,"nodeType":"Return","src":"1458:30:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"216:954:3","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":412,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"1203:7:3","nodeType":"VariableDeclaration","scope":412,"src":"1195:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"1235:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":402,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:3"},"scope":724,"src":"1175:320:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"2483:241:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":423,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$724","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$724","typeString":"library Address"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:3","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:3","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2526:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"2493:73:3"},{"assignments":[432,null],"declarations":[{"constant":false,"id":432,"mutability":"mutable","name":"success","nameLocation":"2583:7:3","nodeType":"VariableDeclaration","scope":445,"src":"2578:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":431,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":439,"initialValue":{"arguments":[{"hexValue":"","id":437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":433,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2596:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:3","memberName":"call","nodeType":"MemberAccess","src":"2596:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2618:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:3"},{"expression":{"arguments":[{"id":441,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2647:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"2639:78:3"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"1501:906:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":446,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:3","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:3","nodeType":"VariableDeclaration","scope":446,"src":"2431:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"amount","nameLocation":"2466:6:3","nodeType":"VariableDeclaration","scope":446,"src":"2458:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"2483:0:3"},"scope":724,"src":"2412:312:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":463,"nodeType":"Block","src":"3555:96:3","statements":[{"expression":{"arguments":[{"id":457,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"3594:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":458,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"3602:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":456,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[504,548],"referencedDeclaration":548,"src":"3572:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":455,"id":462,"nodeType":"Return","src":"3565:79:3"}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"2730:731:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:3","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"target","nameLocation":"3496:6:3","nodeType":"VariableDeclaration","scope":464,"src":"3488:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"data","nameLocation":"3517:4:3","nodeType":"VariableDeclaration","scope":464,"src":"3504:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:3"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":464,"src":"3541:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:3"},"scope":724,"src":"3466:185:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":483,"nodeType":"Block","src":"4020:76:3","statements":[{"expression":{"arguments":[{"id":477,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4059:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4067:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":480,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"4076:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":476,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[504,548],"referencedDeclaration":548,"src":"4037:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":475,"id":482,"nodeType":"Return","src":"4030:59:3"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"3657:211:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":484,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:3","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"target","nameLocation":"3912:6:3","nodeType":"VariableDeclaration","scope":484,"src":"3904:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"data","nameLocation":"3941:4:3","nodeType":"VariableDeclaration","scope":484,"src":"3928:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":468,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:3","nodeType":"VariableDeclaration","scope":484,"src":"3955:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:3"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":484,"src":"4006:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:3"},"scope":724,"src":"3873:223:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"4601:111:3","statements":[{"expression":{"arguments":[{"id":497,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4640:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":498,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4648:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4654:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":496,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[504,548],"referencedDeclaration":548,"src":"4618:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":495,"id":502,"nodeType":"Return","src":"4611:94:3"}]},"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"4102:351:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:3","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"target","nameLocation":"4506:6:3","nodeType":"VariableDeclaration","scope":504,"src":"4498:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"data","nameLocation":"4535:4:3","nodeType":"VariableDeclaration","scope":504,"src":"4522:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":488,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"value","nameLocation":"4557:5:3","nodeType":"VariableDeclaration","scope":504,"src":"4549:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:3"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"4587:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":493,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:3"},"scope":724,"src":"4458:254:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":547,"nodeType":"Block","src":"5139:267:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":521,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$724","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$724","typeString":"library Address"}],"id":520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:3","typeDescriptions":{}}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:3","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"5182:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"5149:81:3"},{"assignments":[530,532],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"success","nameLocation":"5246:7:3","nodeType":"VariableDeclaration","scope":547,"src":"5241:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:3","nodeType":"VariableDeclaration","scope":547,"src":"5255:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":531,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":539,"initialValue":{"arguments":[{"id":537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"5308:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":533,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5282:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:3","memberName":"call","nodeType":"MemberAccess","src":"5282:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"5301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:3"},{"expression":{"arguments":[{"id":541,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5357:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":542,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5365:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":543,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"5374:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":544,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5386:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":540,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5330:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":517,"id":546,"nodeType":"Return","src":"5323:76:3"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"4718:237:3","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":548,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:3","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"target","nameLocation":"5008:6:3","nodeType":"VariableDeclaration","scope":548,"src":"5000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"data","nameLocation":"5037:4:3","nodeType":"VariableDeclaration","scope":548,"src":"5024:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":508,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"value","nameLocation":"5059:5:3","nodeType":"VariableDeclaration","scope":548,"src":"5051:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:3","nodeType":"VariableDeclaration","scope":548,"src":"5074:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":512,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":548,"src":"5125:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:3"},"scope":724,"src":"4960:446:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":564,"nodeType":"Block","src":"5683:97:3","statements":[{"expression":{"arguments":[{"id":559,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"5719:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"5727:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":558,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[565,594],"referencedDeclaration":594,"src":"5700:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":557,"id":563,"nodeType":"Return","src":"5693:80:3"}]},"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"5412:166:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":565,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:3","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"target","nameLocation":"5619:6:3","nodeType":"VariableDeclaration","scope":565,"src":"5611:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"data","nameLocation":"5640:4:3","nodeType":"VariableDeclaration","scope":565,"src":"5627:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":552,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:3"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"5669:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":555,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:3"},"scope":724,"src":"5583:197:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"6122:168:3","statements":[{"assignments":[578,580],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"success","nameLocation":"6138:7:3","nodeType":"VariableDeclaration","scope":593,"src":"6133:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:3","nodeType":"VariableDeclaration","scope":593,"src":"6147:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":579,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":585,"initialValue":{"arguments":[{"id":583,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"6192:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":581,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6174:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:3","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:3"},{"expression":{"arguments":[{"id":587,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6241:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"6249:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":589,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6258:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":590,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6270:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":586,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"6214:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":576,"id":592,"nodeType":"Return","src":"6207:76:3"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"5786:173:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:3","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"target","nameLocation":"6009:6:3","nodeType":"VariableDeclaration","scope":594,"src":"6001:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"data","nameLocation":"6038:4:3","nodeType":"VariableDeclaration","scope":594,"src":"6025:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":569,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:3","nodeType":"VariableDeclaration","scope":594,"src":"6052:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":571,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:3"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"6108:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":574,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:3"},"scope":724,"src":"5964:326:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"6566:101:3","statements":[{"expression":{"arguments":[{"id":605,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"6604:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"6612:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":604,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[611,640],"referencedDeclaration":640,"src":"6583:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":603,"id":609,"nodeType":"Return","src":"6576:84:3"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"6296:168:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":611,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:3","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"target","nameLocation":"6507:6:3","nodeType":"VariableDeclaration","scope":611,"src":"6499:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"data","nameLocation":"6528:4:3","nodeType":"VariableDeclaration","scope":611,"src":"6515:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":598,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:3"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"6552:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":601,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:3"},"scope":724,"src":"6469:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":639,"nodeType":"Block","src":"7008:170:3","statements":[{"assignments":[624,626],"declarations":[{"constant":false,"id":624,"mutability":"mutable","name":"success","nameLocation":"7024:7:3","nodeType":"VariableDeclaration","scope":639,"src":"7019:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":623,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:3","nodeType":"VariableDeclaration","scope":639,"src":"7033:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":625,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":631,"initialValue":{"arguments":[{"id":629,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"7080:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":627,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"7060:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:3"},{"expression":{"arguments":[{"id":633,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"7129:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":635,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"7146:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":636,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"7158:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":632,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"7102:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":622,"id":638,"nodeType":"Return","src":"7095:76:3"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"6673:175:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":640,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:3","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"target","nameLocation":"6900:6:3","nodeType":"VariableDeclaration","scope":640,"src":"6892:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"data","nameLocation":"6929:4:3","nodeType":"VariableDeclaration","scope":640,"src":"6916:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:3","nodeType":"VariableDeclaration","scope":640,"src":"6943:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":617,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:3"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":640,"src":"6994:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":620,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:3"},"scope":724,"src":"6853:325:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":678,"nodeType":"Block","src":"7660:434:3","statements":[{"condition":{"id":654,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7674:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":676,"nodeType":"Block","src":"8030:58:3","statements":[{"expression":{"arguments":[{"id":672,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"8052:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":673,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"8064:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":671,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8044:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"ExpressionStatement","src":"8044:33:3"}]},"id":677,"nodeType":"IfStatement","src":"7670:418:3","trueBody":{"id":670,"nodeType":"Block","src":"7683:341:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":655,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"7701:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:3","memberName":"length","nodeType":"MemberAccess","src":"7701:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":667,"nodeType":"IfStatement","src":"7697:286:3","trueBody":{"id":666,"nodeType":"Block","src":"7725:258:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":661,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"7927:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":660,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7916:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"7908:60:3"}]}},{"expression":{"id":668,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"8003:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":653,"id":669,"nodeType":"Return","src":"7996:17:3"}]}}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"7184:277:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":679,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"target","nameLocation":"7519:6:3","nodeType":"VariableDeclaration","scope":679,"src":"7511:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"success","nameLocation":"7540:7:3","nodeType":"VariableDeclaration","scope":679,"src":"7535:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":644,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:3","nodeType":"VariableDeclaration","scope":679,"src":"7557:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":646,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:3","nodeType":"VariableDeclaration","scope":679,"src":"7590:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":648,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"7646:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":651,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:3"},"scope":724,"src":"7466:628:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":702,"nodeType":"Block","src":"8475:135:3","statements":[{"condition":{"id":691,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8489:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":700,"nodeType":"Block","src":"8546:58:3","statements":[{"expression":{"arguments":[{"id":696,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"8568:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":697,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"8580:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":695,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8560:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"8560:33:3"}]},"id":701,"nodeType":"IfStatement","src":"8485:119:3","trueBody":{"id":694,"nodeType":"Block","src":"8498:42:3","statements":[{"expression":{"id":692,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"8519:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":690,"id":693,"nodeType":"Return","src":"8512:17:3"}]}}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"8100:210:3","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":703,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:3","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"success","nameLocation":"8355:7:3","nodeType":"VariableDeclaration","scope":703,"src":"8350:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:3","nodeType":"VariableDeclaration","scope":703,"src":"8372:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:3","nodeType":"VariableDeclaration","scope":703,"src":"8405:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":685,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:3"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"8461:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":688,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:3"},"scope":724,"src":"8315:295:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"8699:457:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":710,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"8775:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:3","memberName":"length","nodeType":"MemberAccess","src":"8775:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":720,"nodeType":"Block","src":"9105:45:3","statements":[{"expression":{"arguments":[{"id":717,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9126:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":716,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"9119:20:3"}]},"id":721,"nodeType":"IfStatement","src":"8771:379:3","trueBody":{"id":715,"nodeType":"Block","src":"8798:301:3","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:3","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:3","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:3"},"nodeType":"YulFunctionCall","src":"8997:17:3"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:3","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:3","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:3"},"nodeType":"YulFunctionCall","src":"9038:19:3"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:3"},"nodeType":"YulFunctionCall","src":"9031:44:3"},"nodeType":"YulExpressionStatement","src":"9031:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":705,"isOffset":false,"isSlot":false,"src":"9003:10:3","valueSize":1},{"declaration":705,"isOffset":false,"isSlot":false,"src":"9046:10:3","valueSize":1}],"id":714,"nodeType":"InlineAssembly","src":"8947:142:3"}]}}]},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:3","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:3","nodeType":"VariableDeclaration","scope":723,"src":"8633:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":704,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:3","nodeType":"VariableDeclaration","scope":723,"src":"8658:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":706,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:3"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"8699:0:3"},"scope":724,"src":"8616:540:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":725,"src":"194:8964:3","usedErrors":[]}],"src":"101:9058:3"},"id":3},"contracts/SSIDWithWallet.sol":{"ast":{"absolutePath":"contracts/SSIDWithWallet.sol","exportedSymbols":{"Address":[724],"IERC20":[77],"IERC20Permit":[113],"SSIDWithWallet":[960],"SafeERC20":[394],"Wallet":[1011]},"id":1012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":726,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":727,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1012,"sourceUnit":78,"src":"57:56:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":728,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1012,"sourceUnit":395,"src":"114:65:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SSIDWithWallet","contractDependencies":[1011],"contractKind":"contract","fullyImplemented":true,"id":960,"linearizedBaseContracts":[960],"name":"SSIDWithWallet","nameLocation":"190:14:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SSIDWithWallet.Identity","id":742,"members":[{"constant":false,"id":730,"mutability":"mutable","name":"id","nameLocation":"245:2:4","nodeType":"VariableDeclaration","scope":742,"src":"237:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"237:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"name","nameLocation":"264:4:4","nodeType":"VariableDeclaration","scope":742,"src":"257:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":731,"name":"string","nodeType":"ElementaryTypeName","src":"257:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"email","nameLocation":"285:5:4","nodeType":"VariableDeclaration","scope":742,"src":"278:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":733,"name":"string","nodeType":"ElementaryTypeName","src":"278:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"dob","nameLocation":"308:3:4","nodeType":"VariableDeclaration","scope":742,"src":"300:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"300:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"wallet","nameLocation":"329:6:4","nodeType":"VariableDeclaration","scope":742,"src":"321:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"321:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"certificationIDs","nameLocation":"355:16:4","nodeType":"VariableDeclaration","scope":742,"src":"345:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":740,"nodeType":"ArrayTypeName","src":"345:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"Identity","nameLocation":"218:8:4","nodeType":"StructDefinition","scope":960,"src":"211:167:4","visibility":"public"},{"canonicalName":"SSIDWithWallet.Certification","id":751,"members":[{"constant":false,"id":744,"mutability":"mutable","name":"id","nameLocation":"423:2:4","nodeType":"VariableDeclaration","scope":751,"src":"415:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"name","nameLocation":"442:4:4","nodeType":"VariableDeclaration","scope":751,"src":"435:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"435:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"issueDate","nameLocation":"464:9:4","nodeType":"VariableDeclaration","scope":751,"src":"456:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"verified","nameLocation":"488:8:4","nodeType":"VariableDeclaration","scope":751,"src":"483:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":749,"name":"bool","nodeType":"ElementaryTypeName","src":"483:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Certification","nameLocation":"391:13:4","nodeType":"StructDefinition","scope":960,"src":"384:119:4","visibility":"public"},{"constant":false,"id":756,"mutability":"mutable","name":"identities","nameLocation":"546:10:4","nodeType":"VariableDeclaration","scope":960,"src":"509:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Identity_$742_storage_$","typeString":"mapping(address => struct SSIDWithWallet.Identity)"},"typeName":{"id":755,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"509:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Identity_$742_storage_$","typeString":"mapping(address => struct SSIDWithWallet.Identity)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":754,"nodeType":"UserDefinedTypeName","pathNode":{"id":753,"name":"Identity","nameLocations":["528:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":742,"src":"528:8:4"},"referencedDeclaration":742,"src":"528:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity"}}},"visibility":"private"},{"constant":false,"id":761,"mutability":"mutable","name":"certifications","nameLocation":"604:14:4","nodeType":"VariableDeclaration","scope":960,"src":"562:56:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certification_$751_storage_$","typeString":"mapping(uint256 => struct SSIDWithWallet.Certification)"},"typeName":{"id":760,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"562:33:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certification_$751_storage_$","typeString":"mapping(uint256 => struct SSIDWithWallet.Certification)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":759,"nodeType":"UserDefinedTypeName","pathNode":{"id":758,"name":"Certification","nameLocations":["581:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":751,"src":"581:13:4"},"referencedDeclaration":751,"src":"581:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"e8d47b56e8cdfa95f871b19d4f50a857217c44a95502b0811a350fec1500dd67","id":767,"name":"IdentityCreated","nameLocation":"631:15:4","nodeType":"EventDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"663:5:4","nodeType":"VariableDeclaration","scope":767,"src":"647:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"678:2:4","nodeType":"VariableDeclaration","scope":767,"src":"670:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:35:4"},"src":"625:57:4"},{"anonymous":false,"eventSelector":"ab19da658c28f4ed25fc505084caa0491e995cc05e8f0972e1a239620dfaafba","id":773,"name":"CertificationIssued","nameLocation":"693:19:4","nodeType":"EventDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"indexed":true,"mutability":"mutable","name":"certificationID","nameLocation":"729:15:4","nodeType":"VariableDeclaration","scope":773,"src":"713:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"indexed":true,"mutability":"mutable","name":"identityID","nameLocation":"762:10:4","nodeType":"VariableDeclaration","scope":773,"src":"746:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"712:61:4"},"src":"687:87:4"},{"body":{"id":836,"nodeType":"Block","src":"865:341:4","statements":[{"assignments":[784],"declarations":[{"constant":false,"id":784,"mutability":"mutable","name":"newIdentity","nameLocation":"901:11:4","nodeType":"VariableDeclaration","scope":836,"src":"884:28:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity"},"typeName":{"id":783,"nodeType":"UserDefinedTypeName","pathNode":{"id":782,"name":"Identity","nameLocations":["884:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":742,"src":"884:8:4"},"referencedDeclaration":742,"src":"884:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity"}},"visibility":"internal"}],"id":789,"initialValue":{"baseExpression":{"id":785,"name":"identities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"915:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Identity_$742_storage_$","typeString":"mapping(address => struct SSIDWithWallet.Identity storage ref)"}},"id":788,"indexExpression":{"expression":{"id":786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"926:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"930:6:4","memberName":"sender","nodeType":"MemberAccess","src":"926:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"915:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage","typeString":"struct SSIDWithWallet.Identity storage ref"}},"nodeType":"VariableDeclarationStatement","src":"884:53:4"},{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":790,"name":"newIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"947:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"959:2:4","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":730,"src":"947:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":793,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"964:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"964:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"947:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"nodeType":"ExpressionStatement","src":"947:32:4"},{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":797,"name":"newIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"989:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1001:4:4","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":732,"src":"989:16:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":800,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"1008:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"989:23:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":802,"nodeType":"ExpressionStatement","src":"989:23:4"},{"expression":{"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":803,"name":"newIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1022:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1034:5:4","memberName":"email","nodeType":"MemberAccess","referencedDeclaration":734,"src":"1022:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":806,"name":"email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1042:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1022:25:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":808,"nodeType":"ExpressionStatement","src":"1022:25:4"},{"expression":{"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":809,"name":"newIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1057:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1069:3:4","memberName":"dob","nodeType":"MemberAccess","referencedDeclaration":736,"src":"1057:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":812,"name":"dob","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1075:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1057:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ExpressionStatement","src":"1057:21:4"},{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":815,"name":"newIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1088:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1100:6:4","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":738,"src":"1088:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":823,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1128:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1132:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1128:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1117:10:4","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Wallet_$1011_$","typeString":"function (address) returns (contract Wallet)"},"typeName":{"id":821,"nodeType":"UserDefinedTypeName","pathNode":{"id":820,"name":"Wallet","nameLocations":["1121:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1011,"src":"1121:6:4"},"referencedDeclaration":1011,"src":"1121:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$1011","typeString":"contract Wallet"}}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$1011","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$1011","typeString":"contract Wallet"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1109:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"1109:7:4","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1088:52:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":828,"nodeType":"ExpressionStatement","src":"1088:52:4"},{"eventCall":{"arguments":[{"expression":{"id":830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1172:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1172:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":832,"name":"newIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1184:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1196:2:4","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":730,"src":"1184:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":829,"name":"IdentityCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"1156:15:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1156:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"EmitStatement","src":"1151:48:4"}]},"functionSelector":"584f09b0","id":837,"implemented":true,"kind":"function","modifiers":[],"name":"createIdentity","nameLocation":"789:14:4","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"name","nameLocation":"818:4:4","nodeType":"VariableDeclaration","scope":837,"src":"804:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":774,"name":"string","nodeType":"ElementaryTypeName","src":"804:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"email","nameLocation":"838:5:4","nodeType":"VariableDeclaration","scope":837,"src":"824:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":776,"name":"string","nodeType":"ElementaryTypeName","src":"824:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"dob","nameLocation":"853:3:4","nodeType":"VariableDeclaration","scope":837,"src":"845:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"803:54:4"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"865:0:4"},"scope":960,"src":"780:426:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":913,"nodeType":"Block","src":"1359:551:4","statements":[{"assignments":[850],"declarations":[{"constant":false,"id":850,"mutability":"mutable","name":"identity","nameLocation":"1386:8:4","nodeType":"VariableDeclaration","scope":913,"src":"1369:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity"},"typeName":{"id":849,"nodeType":"UserDefinedTypeName","pathNode":{"id":848,"name":"Identity","nameLocations":["1369:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":742,"src":"1369:8:4"},"referencedDeclaration":742,"src":"1369:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity"}},"visibility":"internal"}],"id":855,"initialValue":{"baseExpression":{"id":851,"name":"identities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"1397:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Identity_$742_storage_$","typeString":"mapping(address => struct SSIDWithWallet.Identity storage ref)"}},"id":854,"indexExpression":{"expression":{"id":852,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1408:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1412:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1408:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1397:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage","typeString":"struct SSIDWithWallet.Identity storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1369:50:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":857,"name":"identity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"1437:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1446:2:4","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":730,"src":"1437:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":859,"name":"identityID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"1452:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1437:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204964656e74697479","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1464:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1","typeString":"literal_string \"Invalid Identity\""},"value":"Invalid Identity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1","typeString":"literal_string \"Invalid Identity\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1429:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"ExpressionStatement","src":"1429:54:4"},{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"certificationID","nameLocation":"1502:15:4","nodeType":"VariableDeclaration","scope":913,"src":"1494:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":868,"initialValue":{"expression":{"id":866,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1520:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1526:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"1520:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1494:41:4"},{"assignments":[871],"declarations":[{"constant":false,"id":871,"mutability":"mutable","name":"certification","nameLocation":"1567:13:4","nodeType":"VariableDeclaration","scope":913,"src":"1545:35:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification"},"typeName":{"id":870,"nodeType":"UserDefinedTypeName","pathNode":{"id":869,"name":"Certification","nameLocations":["1545:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":751,"src":"1545:13:4"},"referencedDeclaration":751,"src":"1545:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification"}},"visibility":"internal"}],"id":875,"initialValue":{"baseExpression":{"id":872,"name":"certifications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"1583:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certification_$751_storage_$","typeString":"mapping(uint256 => struct SSIDWithWallet.Certification storage ref)"}},"id":874,"indexExpression":{"id":873,"name":"certificationID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1598:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1583:31:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage","typeString":"struct SSIDWithWallet.Certification storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1545:69:4"},{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":876,"name":"certification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1624:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification storage pointer"}},"id":878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1638:2:4","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":744,"src":"1624:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":879,"name":"certificationID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1643:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":881,"nodeType":"ExpressionStatement","src":"1624:34:4"},{"expression":{"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":882,"name":"certification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1668:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification storage pointer"}},"id":884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1682:4:4","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":746,"src":"1668:18:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":885,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1689:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1668:25:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":887,"nodeType":"ExpressionStatement","src":"1668:25:4"},{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":888,"name":"certification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1703:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification storage pointer"}},"id":890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1717:9:4","memberName":"issueDate","nodeType":"MemberAccess","referencedDeclaration":748,"src":"1703:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":891,"name":"issueDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"1729:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1703:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":893,"nodeType":"ExpressionStatement","src":"1703:35:4"},{"expression":{"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":894,"name":"certification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1748:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification storage pointer"}},"id":896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1762:8:4","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":750,"src":"1748:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":897,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1773:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1748:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":899,"nodeType":"ExpressionStatement","src":"1748:33:4"},{"expression":{"arguments":[{"id":905,"name":"certificationID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1823:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":900,"name":"identity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"1792:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity storage pointer"}},"id":903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1801:16:4","memberName":"certificationIDs","nodeType":"MemberAccess","referencedDeclaration":741,"src":"1792:25:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:4:4","memberName":"push","nodeType":"MemberAccess","src":"1792:30:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"ExpressionStatement","src":"1792:47:4"},{"eventCall":{"arguments":[{"id":909,"name":"certificationID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"1875:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":910,"name":"identityID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"1892:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":908,"name":"CertificationIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"1855:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"EmitStatement","src":"1850:53:4"}]},"functionSelector":"8ef761eb","id":914,"implemented":true,"kind":"function","modifiers":[],"name":"issueCertification","nameLocation":"1221:18:4","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"identityID","nameLocation":"1257:10:4","nodeType":"VariableDeclaration","scope":914,"src":"1249:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"name","nameLocation":"1291:4:4","nodeType":"VariableDeclaration","scope":914,"src":"1277:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":840,"name":"string","nodeType":"ElementaryTypeName","src":"1277:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"issueDate","nameLocation":"1313:9:4","nodeType":"VariableDeclaration","scope":914,"src":"1305:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"verified","nameLocation":"1337:8:4","nodeType":"VariableDeclaration","scope":914,"src":"1332:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":844,"name":"bool","nodeType":"ElementaryTypeName","src":"1332:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1239:112:4"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"1359:0:4"},"scope":960,"src":"1212:698:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":931,"nodeType":"Block","src":"1997:124:4","statements":[{"assignments":[923],"declarations":[{"constant":false,"id":923,"mutability":"mutable","name":"certification","nameLocation":"2028:13:4","nodeType":"VariableDeclaration","scope":931,"src":"2007:34:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_memory_ptr","typeString":"struct SSIDWithWallet.Certification"},"typeName":{"id":922,"nodeType":"UserDefinedTypeName","pathNode":{"id":921,"name":"Certification","nameLocations":["2007:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":751,"src":"2007:13:4"},"referencedDeclaration":751,"src":"2007:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage_ptr","typeString":"struct SSIDWithWallet.Certification"}},"visibility":"internal"}],"id":927,"initialValue":{"baseExpression":{"id":924,"name":"certifications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"2044:14:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certification_$751_storage_$","typeString":"mapping(uint256 => struct SSIDWithWallet.Certification storage ref)"}},"id":926,"indexExpression":{"id":925,"name":"certificationID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2059:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2044:31:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_storage","typeString":"struct SSIDWithWallet.Certification storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2007:68:4"},{"expression":{"expression":{"id":928,"name":"certification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"2092:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Certification_$751_memory_ptr","typeString":"struct SSIDWithWallet.Certification memory"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2106:8:4","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":750,"src":"2092:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":920,"id":930,"nodeType":"Return","src":"2085:29:4"}]},"functionSelector":"9f06c395","id":932,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCertification","nameLocation":"1925:19:4","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"certificationID","nameLocation":"1953:15:4","nodeType":"VariableDeclaration","scope":932,"src":"1945:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1944:25:4"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"1991:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":918,"name":"bool","nodeType":"ElementaryTypeName","src":"1991:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1990:6:4"},"scope":960,"src":"1916:205:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":958,"nodeType":"Block","src":"2206:201:4","statements":[{"assignments":[942],"declarations":[{"constant":false,"id":942,"mutability":"mutable","name":"storedIdentity","nameLocation":"2232:14:4","nodeType":"VariableDeclaration","scope":958,"src":"2216:30:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_memory_ptr","typeString":"struct SSIDWithWallet.Identity"},"typeName":{"id":941,"nodeType":"UserDefinedTypeName","pathNode":{"id":940,"name":"Identity","nameLocations":["2216:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":742,"src":"2216:8:4"},"referencedDeclaration":742,"src":"2216:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity"}},"visibility":"internal"}],"id":947,"initialValue":{"baseExpression":{"id":943,"name":"identities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2249:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Identity_$742_storage_$","typeString":"mapping(address => struct SSIDWithWallet.Identity storage ref)"}},"id":946,"indexExpression":{"expression":{"id":944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2260:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2264:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2260:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2249:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage","typeString":"struct SSIDWithWallet.Identity storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2216:55:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":949,"name":"storedIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"2289:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_memory_ptr","typeString":"struct SSIDWithWallet.Identity memory"}},"id":950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2304:2:4","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":730,"src":"2289:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":951,"name":"providedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"2310:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f7669646564205353494420646f6573206e6f74206d61746368207468652073746f7265642053534944","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2322:46:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d","typeString":"literal_string \"Provided SSID does not match the stored SSID\""},"value":"Provided SSID does not match the stored SSID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d","typeString":"literal_string \"Provided SSID does not match the stored SSID\""}],"id":948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2281:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:88:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"2281:88:4"},{"expression":{"id":956,"name":"storedIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"2386:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_memory_ptr","typeString":"struct SSIDWithWallet.Identity memory"}},"functionReturnParameters":939,"id":957,"nodeType":"Return","src":"2379:21:4"}]},"functionSelector":"85e3f058","id":959,"implemented":true,"kind":"function","modifiers":[],"name":"getIdentity","nameLocation":"2136:11:4","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"providedId","nameLocation":"2156:10:4","nodeType":"VariableDeclaration","scope":959,"src":"2148:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:20:4"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"2189:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_memory_ptr","typeString":"struct SSIDWithWallet.Identity"},"typeName":{"id":937,"nodeType":"UserDefinedTypeName","pathNode":{"id":936,"name":"Identity","nameLocations":["2189:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":742,"src":"2189:8:4"},"referencedDeclaration":742,"src":"2189:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_Identity_$742_storage_ptr","typeString":"struct SSIDWithWallet.Identity"}},"visibility":"internal"}],"src":"2188:17:4"},"scope":960,"src":"2127:280:4","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1012,"src":"181:2228:4","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"Wallet","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1011,"linearizedBaseContracts":[1011],"name":"Wallet","nameLocation":"2420:6:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":964,"libraryName":{"id":961,"name":"SafeERC20","nameLocations":["2439:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":394,"src":"2439:9:4"},"nodeType":"UsingForDirective","src":"2433:27:4","typeName":{"id":963,"nodeType":"UserDefinedTypeName","pathNode":{"id":962,"name":"IERC20","nameLocations":["2453:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2453:6:4"},"referencedDeclaration":77,"src":"2453:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}}},{"constant":false,"id":966,"mutability":"mutable","name":"owner","nameLocation":"2482:5:4","nodeType":"VariableDeclaration","scope":1011,"src":"2466:21:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":975,"nodeType":"Block","src":"2522:31:4","statements":[{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":971,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2532:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":972,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"2540:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2532:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":974,"nodeType":"ExpressionStatement","src":"2532:14:4"}]},"id":976,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"_owner","nameLocation":"2514:6:4","nodeType":"VariableDeclaration","scope":976,"src":"2506:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2505:16:4"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"2522:0:4"},"scope":1011,"src":"2494:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1001,"nodeType":"Block","src":"2628:112:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2646:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2650:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2646:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2660:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2646:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e207472616e73666572","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33","typeString":"literal_string \"Only owner can transfer\""},"value":"Only owner can transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33","typeString":"literal_string \"Only owner can transfer\""}],"id":986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2638:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2638:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"2638:55:4"},{"expression":{"arguments":[{"id":997,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"2722:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2726:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":994,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2703:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2709:12:4","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":145,"src":"2703:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$","typeString":"function (contract IERC20,address,uint256)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2703:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"ExpressionStatement","src":"2703:30:4"}]},"functionSelector":"dbba0f01","id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2568:8:4","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"to","nameLocation":"2585:2:4","nodeType":"VariableDeclaration","scope":1002,"src":"2577:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"amount","nameLocation":"2597:6:4","nodeType":"VariableDeclaration","scope":1002,"src":"2589:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"token","nameLocation":"2612:5:4","nodeType":"VariableDeclaration","scope":1002,"src":"2605:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"},"typeName":{"id":982,"nodeType":"UserDefinedTypeName","pathNode":{"id":981,"name":"IERC20","nameLocations":["2605:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2605:6:4"},"referencedDeclaration":77,"src":"2605:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2576:42:4"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"2628:0:4"},"scope":1011,"src":"2559:181:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1009,"nodeType":"Block","src":"2798:29:4","statements":[{"expression":{"id":1007,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2815:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1006,"id":1008,"nodeType":"Return","src":"2808:12:4"}]},"functionSelector":"893d20e8","id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"getOwner","nameLocation":"2755:8:4","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"2763:2:4"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"2789:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"2789:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2788:9:4"},"scope":1011,"src":"2746:81:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1012,"src":"2411:418:4","usedErrors":[]}],"src":"32:2798:4"},"id":4}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094b437a7cf33b6b74cd00203af6bc6e7cde6c48729c18f140d4da14bd665747a64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB4 CALLDATACOPY 0xA7 0xCF CALLER 0xB6 0xB7 0x4C 0xD0 MUL SUB 0xAF PUSH12 0xC6E7CDE6C48729C18F140D4D LOG1 0x4B 0xD6 PUSH6 0x747A64736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"707:3748:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094b437a7cf33b6b74cd00203af6bc6e7cde6c48729c18f140d4da14bd665747a64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB4 CALLDATACOPY 0xA7 0xCF CALLER 0xB6 0xB7 0x4C 0xD0 MUL SUB 0xAF PUSH12 0xC6E7CDE6C48729C18F140D4D LOG1 0x4B 0xD6 PUSH6 0x747A64736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"707:3748:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e1776e2faafc18623cd62aec6db8f0a5b799b967f1dbd956b971b4d39b19b4164736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E OR PUSH23 0xE2FAAFC18623CD62AEC6DB8F0A5B799B967F1DBD956B97 SHL 0x4D CODECOPY 0xB1 SWAP12 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e1776e2faafc18623cd62aec6db8f0a5b799b967f1dbd956b971b4d39b19b4164736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E OR PUSH23 0xE2FAAFC18623CD62AEC6DB8F0A5B799B967F1DBD956B97 SHL 0x4D CODECOPY 0xB1 SWAP12 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:8964:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SSIDWithWallet.sol":{"SSIDWithWallet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"certificationID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"identityID","type":"uint256"}],"name":"CertificationIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"IdentityCreated","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"uint256","name":"dob","type":"uint256"}],"name":"createIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"providedId","type":"uint256"}],"name":"getIdentity","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"uint256","name":"dob","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256[]","name":"certificationIDs","type":"uint256[]"}],"internalType":"struct SSIDWithWallet.Identity","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"identityID","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"issueDate","type":"uint256"},{"internalType":"bool","name":"verified","type":"bool"}],"name":"issueCertification","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"certificationID","type":"uint256"}],"name":"verifyCertification","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611cf9806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000525760003560e01c8063584f09b0146200005757806385e3f05814620000775780638ef761eb14620000ad5780639f06c39514620000cd575b600080fd5b6200007560048036038101906200006f919062000944565b62000103565b005b6200009560048036038101906200008f9190620009de565b62000254565b604051620000a4919062000c4f565b60405180910390f35b620000cb6004803603810190620000c5919062000cb0565b620004f5565b005b620000eb6004803603810190620000e59190620009de565b62000640565b604051620000fa919062000d52565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090504281600001819055508381600101908162000161919062000fa5565b508281600201908162000175919062000fa5565b50818160030181905550336040516200018e9062000739565b6200019a91906200109d565b604051809103906000f080158015620001b7573d6000803e3d6000fd5b508160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fe8d47b56e8cdfa95f871b19d4f50a857217c44a95502b0811a350fec1500dd678260000154604051620002469190620010cb565b60405180910390a250505050565b6200025e62000747565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052908160008201548152602001600182018054620002c59062000d9e565b80601f0160208091040260200160405190810160405280929190818152602001828054620002f39062000d9e565b8015620003445780601f10620003185761010080835404028352916020019162000344565b820191906000526020600020905b8154815290600101906020018083116200032657829003601f168201915b505050505081526020016002820180546200035f9062000d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546200038d9062000d9e565b8015620003de5780601f10620003b257610100808354040283529160200191620003de565b820191906000526020600020905b815481529060010190602001808311620003c057829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054806020026020016040519081016040528092919081815260200182805480156200049857602002820191906000526020600020905b81548152602001906001019080831162000483575b505050505081525050905082816000015114620004ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e3906200116f565b60405180910390fd5b80915050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508481600001541462000580576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200057790620011e1565b60405180910390fd5b6000429050600060016000838152602001908152602001600020905081816000018190555085816001019081620005b8919062000fa5565b50848160020181905550838160030160006101000a81548160ff0219169083151502179055508260050182908060018154018082558091505060019003906000526020600020016000909190919091505586827fab19da658c28f4ed25fc505084caa0491e995cc05e8f0972e1a239620dfaafba60405160405180910390a350505050505050565b60008060016000848152602001908152602001600020604051806080016040529081600082015481526020016001820180546200067d9062000d9e565b80601f0160208091040260200160405190810160405280929190818152602001828054620006ab9062000d9e565b8015620006fc5780601f10620006d057610100808354040283529160200191620006fc565b820191906000526020600020905b815481529060010190602001808311620006de57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060600151915050919050565b610ac0806200120483390190565b6040518060c0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620007fc82620007b1565b810181811067ffffffffffffffff821117156200081e576200081d620007c2565b5b80604052505050565b60006200083362000793565b9050620008418282620007f1565b919050565b600067ffffffffffffffff821115620008645762000863620007c2565b5b6200086f82620007b1565b9050602081019050919050565b82818337600083830152505050565b6000620008a26200089c8462000846565b62000827565b905082815260208101848484011115620008c157620008c0620007ac565b5b620008ce8482856200087c565b509392505050565b600082601f830112620008ee57620008ed620007a7565b5b8135620009008482602086016200088b565b91505092915050565b6000819050919050565b6200091e8162000909565b81146200092a57600080fd5b50565b6000813590506200093e8162000913565b92915050565b60008060006060848603121562000960576200095f6200079d565b5b600084013567ffffffffffffffff811115620009815762000980620007a2565b5b6200098f86828701620008d6565b935050602084013567ffffffffffffffff811115620009b357620009b2620007a2565b5b620009c186828701620008d6565b9250506040620009d4868287016200092d565b9150509250925092565b600060208284031215620009f757620009f66200079d565b5b600062000a07848285016200092d565b91505092915050565b62000a1b8162000909565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000a5d57808201518184015260208101905062000a40565b60008484015250505050565b600062000a768262000a21565b62000a82818562000a2c565b935062000a9481856020860162000a3d565b62000a9f81620007b1565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000ad78262000aaa565b9050919050565b62000ae98162000aca565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062000b29838362000a10565b60208301905092915050565b6000602082019050919050565b600062000b4f8262000aef565b62000b5b818562000afa565b935062000b688362000b0b565b8060005b8381101562000b9f57815162000b83888262000b1b565b975062000b908362000b35565b92505060018101905062000b6c565b5085935050505092915050565b600060c08301600083015162000bc6600086018262000a10565b506020830151848203602086015262000be0828262000a69565b9150506040830151848203604086015262000bfc828262000a69565b915050606083015162000c13606086018262000a10565b50608083015162000c28608086018262000ade565b5060a083015184820360a086015262000c42828262000b42565b9150508091505092915050565b6000602082019050818103600083015262000c6b818462000bac565b905092915050565b60008115159050919050565b62000c8a8162000c73565b811462000c9657600080fd5b50565b60008135905062000caa8162000c7f565b92915050565b6000806000806080858703121562000ccd5762000ccc6200079d565b5b600062000cdd878288016200092d565b945050602085013567ffffffffffffffff81111562000d015762000d00620007a2565b5b62000d0f87828801620008d6565b935050604062000d22878288016200092d565b925050606062000d358782880162000c99565b91505092959194509250565b62000d4c8162000c73565b82525050565b600060208201905062000d69600083018462000d41565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000db757607f821691505b60208210810362000dcd5762000dcc62000d6f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000e377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000df8565b62000e43868362000df8565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000e8662000e8062000e7a8462000909565b62000e5b565b62000909565b9050919050565b6000819050919050565b62000ea28362000e65565b62000eba62000eb18262000e8d565b84845462000e05565b825550505050565b600090565b62000ed162000ec2565b62000ede81848462000e97565b505050565b5b8181101562000f065762000efa60008262000ec7565b60018101905062000ee4565b5050565b601f82111562000f555762000f1f8162000dd3565b62000f2a8462000de8565b8101602085101562000f3a578190505b62000f5262000f498562000de8565b83018262000ee3565b50505b505050565b600082821c905092915050565b600062000f7a6000198460080262000f5a565b1980831691505092915050565b600062000f95838362000f67565b9150826002028217905092915050565b62000fb08262000a21565b67ffffffffffffffff81111562000fcc5762000fcb620007c2565b5b62000fd8825462000d9e565b62000fe582828562000f0a565b600060209050601f8311600181146200101d576000841562001008578287015190505b62001014858262000f87565b86555062001084565b601f1984166200102d8662000dd3565b60005b82811015620010575784890151825560018201915060208501945060208101905062001030565b8683101562001077578489015162001073601f89168262000f67565b8355505b6001600288020188555050505b505050505050565b620010978162000aca565b82525050565b6000602082019050620010b460008301846200108c565b92915050565b620010c58162000909565b82525050565b6000602082019050620010e26000830184620010ba565b92915050565b600082825260208201905092915050565b7f50726f7669646564205353494420646f6573206e6f74206d617463682074686560008201527f2073746f72656420535349440000000000000000000000000000000000000000602082015250565b600062001157602c83620010e8565b91506200116482620010f9565b604082019050919050565b600060208201905081810360008301526200118a8162001148565b9050919050565b7f496e76616c6964204964656e7469747900000000000000000000000000000000600082015250565b6000620011c9601083620010e8565b9150620011d68262001191565b602082019050919050565b60006020820190508181036000830152620011fc81620011ba565b905091905056fe608060405234801561001057600080fd5b50604051610ac0380380610ac0833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6109a9806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063dbba0f0114610059575b600080fd5b610043610075565b60405161005091906104b7565b60405180910390f35b610073600480360381019061006e9190610577565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610627565b60405180910390fd5b61015783838373ffffffffffffffffffffffffffffffffffffffff1661015c9092919063ffffffff16565b505050565b6101dd8363a9059cbb60e01b848460405160240161017b929190610656565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506101e2565b505050565b6000610244826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166102a99092919063ffffffff16565b90506000815111156102a4578080602001905181019061026491906106b7565b6102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610756565b60405180910390fd5b5b505050565b60606102b884846000856102c1565b90509392505050565b606082471015610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd906107e8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161032f9190610879565b60006040518083038185875af1925050503d806000811461036c576040519150601f19603f3d011682016040523d82523d6000602084013e610371565b606091505b50915091506103828783838761038e565b92505050949350505050565b606083156103f05760008351036103e8576103a885610403565b6103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de906108dc565b60405180910390fd5b5b8290506103fb565b6103fa8383610426565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156104395781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d9190610951565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a182610476565b9050919050565b6104b181610496565b82525050565b60006020820190506104cc60008301846104a8565b92915050565b600080fd5b6104e081610496565b81146104eb57600080fd5b50565b6000813590506104fd816104d7565b92915050565b6000819050919050565b61051681610503565b811461052157600080fd5b50565b6000813590506105338161050d565b92915050565b600061054482610496565b9050919050565b61055481610539565b811461055f57600080fd5b50565b6000813590506105718161054b565b92915050565b6000806000606084860312156105905761058f6104d2565b5b600061059e868287016104ee565b93505060206105af86828701610524565b92505060406105c086828701610562565b9150509250925092565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572000000000000000000600082015250565b60006106116017836105ca565b915061061c826105db565b602082019050919050565b6000602082019050818103600083015261064081610604565b9050919050565b61065081610503565b82525050565b600060408201905061066b60008301856104a8565b6106786020830184610647565b9392505050565b60008115159050919050565b6106948161067f565b811461069f57600080fd5b50565b6000815190506106b18161068b565b92915050565b6000602082840312156106cd576106cc6104d2565b5b60006106db848285016106a2565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610740602a836105ca565b915061074b826106e4565b604082019050919050565b6000602082019050818103600083015261076f81610733565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006107d26026836105ca565b91506107dd82610776565b604082019050919050565b60006020820190508181036000830152610801816107c5565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561083c578082015181840152602081019050610821565b60008484015250505050565b600061085382610808565b61085d8185610813565b935061086d81856020860161081e565b80840191505092915050565b60006108858284610848565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006108c6601d836105ca565b91506108d182610890565b602082019050919050565b600060208201905081810360008301526108f5816108b9565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610923826108fc565b61092d81856105ca565b935061093d81856020860161081e565b61094681610907565b840191505092915050565b6000602082019050818103600083015261096b8184610918565b90509291505056fea264697066735822122035f92815476344f4f490bc949c278dd3a5817452e439ae86b15c8e442a276abc64736f6c63430008120033a2646970667358221220db2b7cbf30ffddb940e0d63ed165fb726ca3ff29661ea5537c74297aa9220ffa64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x52 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x584F09B0 EQ PUSH3 0x57 JUMPI DUP1 PUSH4 0x85E3F058 EQ PUSH3 0x77 JUMPI DUP1 PUSH4 0x8EF761EB EQ PUSH3 0xAD JUMPI DUP1 PUSH4 0x9F06C395 EQ PUSH3 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6F SWAP2 SWAP1 PUSH3 0x944 JUMP JUMPDEST PUSH3 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x9DE JUMP JUMPDEST PUSH3 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0xCB0 JUMP JUMPDEST PUSH3 0x4F5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xE5 SWAP2 SWAP1 PUSH3 0x9DE JUMP JUMPDEST PUSH3 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFA SWAP2 SWAP1 PUSH3 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP TIMESTAMP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH3 0x161 SWAP2 SWAP1 PUSH3 0xFA5 JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH3 0x175 SWAP2 SWAP1 PUSH3 0xFA5 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x40 MLOAD PUSH3 0x18E SWAP1 PUSH3 0x739 JUMP JUMPDEST PUSH3 0x19A SWAP2 SWAP1 PUSH3 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D47B56E8CDFA95F871B19D4F50A857217C44A95502B0811A350FEC1500DD67 DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x246 SWAP2 SWAP1 PUSH3 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH3 0x25E PUSH3 0x747 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH3 0x2C5 SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x2F3 SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x344 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x318 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x344 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x326 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH3 0x35F SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x38D SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x3C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x498 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x483 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD MLOAD EQ PUSH3 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E3 SWAP1 PUSH3 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD SLOAD EQ PUSH3 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x577 SWAP1 PUSH3 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH3 0x5B8 SWAP2 SWAP1 PUSH3 0xFA5 JUMP JUMPDEST POP DUP5 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP7 DUP3 PUSH32 0xAB19DA658C28F4ED25FC505084CAA0491E995CC05E8F0972E1A239620DFAAFBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH3 0x67D SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x6AB SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x6FC JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x6FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC0 DUP1 PUSH3 0x1204 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x7FC DUP3 PUSH3 0x7B1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x81E JUMPI PUSH3 0x81D PUSH3 0x7C2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x833 PUSH3 0x793 JUMP JUMPDEST SWAP1 POP PUSH3 0x841 DUP3 DUP3 PUSH3 0x7F1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x864 JUMPI PUSH3 0x863 PUSH3 0x7C2 JUMP JUMPDEST JUMPDEST PUSH3 0x86F DUP3 PUSH3 0x7B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8A2 PUSH3 0x89C DUP5 PUSH3 0x846 JUMP JUMPDEST PUSH3 0x827 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x8C1 JUMPI PUSH3 0x8C0 PUSH3 0x7AC JUMP JUMPDEST JUMPDEST PUSH3 0x8CE DUP5 DUP3 DUP6 PUSH3 0x87C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8EE JUMPI PUSH3 0x8ED PUSH3 0x7A7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x900 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x88B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x91E DUP2 PUSH3 0x909 JUMP JUMPDEST DUP2 EQ PUSH3 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x93E DUP2 PUSH3 0x913 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x960 JUMPI PUSH3 0x95F PUSH3 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x981 JUMPI PUSH3 0x980 PUSH3 0x7A2 JUMP JUMPDEST JUMPDEST PUSH3 0x98F DUP7 DUP3 DUP8 ADD PUSH3 0x8D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x9B3 JUMPI PUSH3 0x9B2 PUSH3 0x7A2 JUMP JUMPDEST JUMPDEST PUSH3 0x9C1 DUP7 DUP3 DUP8 ADD PUSH3 0x8D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x9D4 DUP7 DUP3 DUP8 ADD PUSH3 0x92D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x9F7 JUMPI PUSH3 0x9F6 PUSH3 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xA07 DUP5 DUP3 DUP6 ADD PUSH3 0x92D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA1B DUP2 PUSH3 0x909 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xA5D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA40 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA76 DUP3 PUSH3 0xA21 JUMP JUMPDEST PUSH3 0xA82 DUP2 DUP6 PUSH3 0xA2C JUMP JUMPDEST SWAP4 POP PUSH3 0xA94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xA3D JUMP JUMPDEST PUSH3 0xA9F DUP2 PUSH3 0x7B1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAD7 DUP3 PUSH3 0xAAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAE9 DUP2 PUSH3 0xACA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB29 DUP4 DUP4 PUSH3 0xA10 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB4F DUP3 PUSH3 0xAEF JUMP JUMPDEST PUSH3 0xB5B DUP2 DUP6 PUSH3 0xAFA JUMP JUMPDEST SWAP4 POP PUSH3 0xB68 DUP4 PUSH3 0xB0B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB9F JUMPI DUP2 MLOAD PUSH3 0xB83 DUP9 DUP3 PUSH3 0xB1B JUMP JUMPDEST SWAP8 POP PUSH3 0xB90 DUP4 PUSH3 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xB6C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH3 0xBC6 PUSH1 0x0 DUP7 ADD DUP3 PUSH3 0xA10 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH3 0xBE0 DUP3 DUP3 PUSH3 0xA69 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH3 0xBFC DUP3 DUP3 PUSH3 0xA69 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH3 0xC13 PUSH1 0x60 DUP7 ADD DUP3 PUSH3 0xA10 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH3 0xC28 PUSH1 0x80 DUP7 ADD DUP3 PUSH3 0xADE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH3 0xC42 DUP3 DUP3 PUSH3 0xB42 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC6B DUP2 DUP5 PUSH3 0xBAC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC8A DUP2 PUSH3 0xC73 JUMP JUMPDEST DUP2 EQ PUSH3 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xCAA DUP2 PUSH3 0xC7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xCCD JUMPI PUSH3 0xCCC PUSH3 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xCDD DUP8 DUP3 DUP9 ADD PUSH3 0x92D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xD01 JUMPI PUSH3 0xD00 PUSH3 0x7A2 JUMP JUMPDEST JUMPDEST PUSH3 0xD0F DUP8 DUP3 DUP9 ADD PUSH3 0x8D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0xD22 DUP8 DUP3 DUP9 ADD PUSH3 0x92D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0xD35 DUP8 DUP3 DUP9 ADD PUSH3 0xC99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0xD4C DUP2 PUSH3 0xC73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD69 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xDB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xDCD JUMPI PUSH3 0xDCC PUSH3 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xE37 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xDF8 JUMP JUMPDEST PUSH3 0xE43 DUP7 DUP4 PUSH3 0xDF8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE86 PUSH3 0xE80 PUSH3 0xE7A DUP5 PUSH3 0x909 JUMP JUMPDEST PUSH3 0xE5B JUMP JUMPDEST PUSH3 0x909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xEA2 DUP4 PUSH3 0xE65 JUMP JUMPDEST PUSH3 0xEBA PUSH3 0xEB1 DUP3 PUSH3 0xE8D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xE05 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xED1 PUSH3 0xEC2 JUMP JUMPDEST PUSH3 0xEDE DUP2 DUP5 DUP5 PUSH3 0xE97 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xF06 JUMPI PUSH3 0xEFA PUSH1 0x0 DUP3 PUSH3 0xEC7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xEE4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xF55 JUMPI PUSH3 0xF1F DUP2 PUSH3 0xDD3 JUMP JUMPDEST PUSH3 0xF2A DUP5 PUSH3 0xDE8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xF3A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xF52 PUSH3 0xF49 DUP6 PUSH3 0xDE8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xEE3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF7A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xF5A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF95 DUP4 DUP4 PUSH3 0xF67 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xFB0 DUP3 PUSH3 0xA21 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xFCC JUMPI PUSH3 0xFCB PUSH3 0x7C2 JUMP JUMPDEST JUMPDEST PUSH3 0xFD8 DUP3 SLOAD PUSH3 0xD9E JUMP JUMPDEST PUSH3 0xFE5 DUP3 DUP3 DUP6 PUSH3 0xF0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x101D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1008 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x1014 DUP6 DUP3 PUSH3 0xF87 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1084 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x102D DUP7 PUSH3 0xDD3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1057 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1030 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1077 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1073 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xF67 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1097 DUP2 PUSH3 0xACA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x10B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x108C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x10C5 DUP2 PUSH3 0x909 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x10E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x10BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F7669646564205353494420646F6573206E6F74206D6174636820746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2073746F72656420535349440000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1157 PUSH1 0x2C DUP4 PUSH3 0x10E8 JUMP JUMPDEST SWAP2 POP PUSH3 0x1164 DUP3 PUSH3 0x10F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x118A DUP2 PUSH3 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204964656E7469747900000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11C9 PUSH1 0x10 DUP4 PUSH3 0x10E8 JUMP JUMPDEST SWAP2 POP PUSH3 0x11D6 DUP3 PUSH3 0x1191 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x11FC DUP2 PUSH3 0x11BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAC0 CODESIZE SUB DUP1 PUSH2 0xAC0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A9 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDBBA0F01 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x157 DUP4 DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17B SWAP3 SWAP2 SWAP1 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2A4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A SWAP1 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x371 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x382 DUP8 DUP4 DUP4 DUP8 PUSH2 0x38E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x3E8 JUMPI PUSH2 0x3A8 DUP6 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x3FA DUP4 DUP4 PUSH2 0x426 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x439 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP3 PUSH2 0x476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B1 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E0 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP2 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FD DUP2 PUSH2 0x4D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP2 EQ PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x533 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x544 DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x539 JUMP JUMPDEST DUP2 EQ PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x571 DUP2 PUSH2 0x54B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59E DUP7 DUP3 DUP8 ADD PUSH2 0x4EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5AF DUP7 DUP3 DUP8 ADD PUSH2 0x524 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5C0 DUP7 DUP3 DUP8 ADD PUSH2 0x562 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x611 PUSH1 0x17 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x61C DUP3 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x640 DUP2 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x650 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x66B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x678 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B1 DUP2 PUSH2 0x68B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP5 DUP3 DUP6 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 PUSH1 0x2A DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x74B DUP3 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x76F DUP2 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH1 0x26 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP3 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x801 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x853 DUP3 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x85D DUP2 DUP6 PUSH2 0x813 JUMP JUMPDEST SWAP4 POP PUSH2 0x86D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP3 DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH1 0x1D DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x8D1 DUP3 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F5 DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x923 DUP3 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x92D DUP2 DUP6 PUSH2 0x5CA JUMP JUMPDEST SWAP4 POP PUSH2 0x93D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST PUSH2 0x946 DUP2 PUSH2 0x907 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96B DUP2 DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xF9 0x28 ISZERO SELFBALANCE PUSH4 0x44F4F490 0xBC SWAP5 SWAP13 0x27 DUP14 0xD3 0xA5 DUP2 PUSH21 0x52E439AE86B15C8E442A276ABC64736F6C63430008 SLT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0x2B PUSH29 0xBF30FFDDB940E0D63ED165FB726CA3FF29661EA5537C74297AA9220FFA PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"181:2228:4:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@createIdentity_837":{"entryPoint":259,"id":837,"parameterSlots":3,"returnSlots":0},"@getIdentity_959":{"entryPoint":596,"id":959,"parameterSlots":1,"returnSlots":1},"@issueCertification_914":{"entryPoint":1269,"id":914,"parameterSlots":4,"returnSlots":0},"@verifyCertification_932":{"entryPoint":1600,"id":932,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2187,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":3225,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":2262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2349,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":2372,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":2526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_bool":{"entryPoint":3248,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":2843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":2782,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3393,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":2665,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d_to_t_string_memory_ptr_fromStack":{"entryPoint":4424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1_to_t_string_memory_ptr_fromStack":{"entryPoint":4538,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Identity_$742_memory_ptr_to_t_struct$_Identity_$742_memory_ptr_fromStack":{"entryPoint":2988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":2576,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4282,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4253,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3410,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4463,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4577,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Identity_$742_memory_ptr__to_t_struct$_Identity_$742_memory_ptr__fromStack_reversed":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4299,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2087,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1939,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2118,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2827,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3539,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2799,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2593,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2869,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2810,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":2604,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4328,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3850,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2762,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3187,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2730,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2313,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3811,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":3685,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4005,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2172,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2621,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3560,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3486,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3975,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2033,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3675,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3943,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":3439,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1986,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3725,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1959,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1964,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1954,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1949,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1969,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3576,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3930,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3783,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d":{"entryPoint":4345,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1":{"entryPoint":4497,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3589,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3735,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3199,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2323,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3778,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18374:5","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:5","statements":[{"nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:5"},"nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:5"},"nodeType":"YulFunctionCall","src":"187:12:5"},"nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:5"},"nodeType":"YulFunctionCall","src":"310:12:5"},"nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nodeType":"YulBlock","src":"423:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:5"},"nodeType":"YulFunctionCall","src":"433:12:5"},"nodeType":"YulExpressionStatement","src":"433:12:5"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:5"},{"body":{"nodeType":"YulBlock","src":"546:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:5"},"nodeType":"YulFunctionCall","src":"556:12:5"},"nodeType":"YulExpressionStatement","src":"556:12:5"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:5"},{"body":{"nodeType":"YulBlock","src":"628:54:5","statements":[{"nodeType":"YulAssignment","src":"638:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:5"},"nodeType":"YulFunctionCall","src":"652:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:5"},"nodeType":"YulFunctionCall","src":"668:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:5"},"nodeType":"YulFunctionCall","src":"648:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:5","type":""}],"src":"580:102:5"},{"body":{"nodeType":"YulBlock","src":"716:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:5"},"nodeType":"YulFunctionCall","src":"726:88:5"},"nodeType":"YulExpressionStatement","src":"726:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:5"},"nodeType":"YulFunctionCall","src":"823:15:5"},"nodeType":"YulExpressionStatement","src":"823:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:5"},"nodeType":"YulFunctionCall","src":"847:15:5"},"nodeType":"YulExpressionStatement","src":"847:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:5"},{"body":{"nodeType":"YulBlock","src":"917:238:5","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:5"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:5"},"nodeType":"YulFunctionCall","src":"957:27:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:5"},"nodeType":"YulFunctionCall","src":"945:40:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:5"},"nodeType":"YulFunctionCall","src":"1098:18:5"},"nodeType":"YulExpressionStatement","src":"1098:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:5"},"nodeType":"YulFunctionCall","src":"1036:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:5"},"nodeType":"YulFunctionCall","src":"1072:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:5"},"nodeType":"YulFunctionCall","src":"1033:62:5"},"nodeType":"YulIf","src":"1030:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:5"},"nodeType":"YulFunctionCall","src":"1127:22:5"},"nodeType":"YulExpressionStatement","src":"1127:22:5"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:5","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:5","type":""}],"src":"874:281:5"},{"body":{"nodeType":"YulBlock","src":"1202:88:5","statements":[{"nodeType":"YulAssignment","src":"1212:30:5","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:5"},"nodeType":"YulFunctionCall","src":"1222:20:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:5"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:5"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:5"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:5"},"nodeType":"YulFunctionCall","src":"1251:33:5"},"nodeType":"YulExpressionStatement","src":"1251:33:5"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:5","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:5","type":""}],"src":"1161:129:5"},{"body":{"nodeType":"YulBlock","src":"1363:241:5","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:5"},"nodeType":"YulFunctionCall","src":"1470:18:5"},"nodeType":"YulExpressionStatement","src":"1470:18:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:5"},"nodeType":"YulFunctionCall","src":"1437:30:5"},"nodeType":"YulIf","src":"1434:56:5"},{"nodeType":"YulAssignment","src":"1500:37:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:5"},"nodeType":"YulFunctionCall","src":"1508:29:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:5"}]},{"nodeType":"YulAssignment","src":"1574:23:5","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:5"},"nodeType":"YulFunctionCall","src":"1582:15:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:5"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:5","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:5","type":""}],"src":"1296:308:5"},{"body":{"nodeType":"YulBlock","src":"1674:82:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:5"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:5"},"nodeType":"YulFunctionCall","src":"1684:30:5"},"nodeType":"YulExpressionStatement","src":"1684:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:5"},"nodeType":"YulFunctionCall","src":"1730:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:5"},"nodeType":"YulFunctionCall","src":"1723:27:5"},"nodeType":"YulExpressionStatement","src":"1723:27:5"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:5","type":""}],"src":"1610:146:5"},{"body":{"nodeType":"YulBlock","src":"1846:341:5","statements":[{"nodeType":"YulAssignment","src":"1856:75:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:5"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:5"},"nodeType":"YulFunctionCall","src":"1881:49:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:5"},"nodeType":"YulFunctionCall","src":"1865:66:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:5"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:5"},"nodeType":"YulFunctionCall","src":"1940:21:5"},"nodeType":"YulExpressionStatement","src":"1940:21:5"},{"nodeType":"YulVariableDeclaration","src":"1970:27:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:5"},"nodeType":"YulFunctionCall","src":"1981:16:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:5"},"nodeType":"YulFunctionCall","src":"2037:79:5"},"nodeType":"YulExpressionStatement","src":"2037:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:5"},"nodeType":"YulFunctionCall","src":"2012:16:5"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:5"},"nodeType":"YulFunctionCall","src":"2009:25:5"},"nodeType":"YulIf","src":"2006:112:5"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:5"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:5"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:5"},"nodeType":"YulFunctionCall","src":"2127:54:5"},"nodeType":"YulExpressionStatement","src":"2127:54:5"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:5","type":""}],"src":"1762:425:5"},{"body":{"nodeType":"YulBlock","src":"2269:278:5","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:5"},"nodeType":"YulFunctionCall","src":"2320:79:5"},"nodeType":"YulExpressionStatement","src":"2320:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:5"},"nodeType":"YulFunctionCall","src":"2293:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:5"},"nodeType":"YulFunctionCall","src":"2289:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:5"},"nodeType":"YulFunctionCall","src":"2282:35:5"},"nodeType":"YulIf","src":"2279:122:5"},{"nodeType":"YulVariableDeclaration","src":"2410:34:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:5"},"nodeType":"YulFunctionCall","src":"2424:20:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:5","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:5"},"nodeType":"YulFunctionCall","src":"2510:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:5"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:5"},"nodeType":"YulFunctionCall","src":"2462:79:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:5"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:5","type":""}],"src":"2207:340:5"},{"body":{"nodeType":"YulBlock","src":"2598:32:5","statements":[{"nodeType":"YulAssignment","src":"2608:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"2619:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2608:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2580:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2590:7:5","type":""}],"src":"2553:77:5"},{"body":{"nodeType":"YulBlock","src":"2679:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"2736:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2745:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2748:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2738:6:5"},"nodeType":"YulFunctionCall","src":"2738:12:5"},"nodeType":"YulExpressionStatement","src":"2738:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2702:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2727:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2709:17:5"},"nodeType":"YulFunctionCall","src":"2709:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2699:2:5"},"nodeType":"YulFunctionCall","src":"2699:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2692:6:5"},"nodeType":"YulFunctionCall","src":"2692:43:5"},"nodeType":"YulIf","src":"2689:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2672:5:5","type":""}],"src":"2636:122:5"},{"body":{"nodeType":"YulBlock","src":"2816:87:5","statements":[{"nodeType":"YulAssignment","src":"2826:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2848:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2835:12:5"},"nodeType":"YulFunctionCall","src":"2835:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2891:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2864:26:5"},"nodeType":"YulFunctionCall","src":"2864:33:5"},"nodeType":"YulExpressionStatement","src":"2864:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2794:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"2802:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:5","type":""}],"src":"2764:139:5"},{"body":{"nodeType":"YulBlock","src":"3029:859:5","statements":[{"body":{"nodeType":"YulBlock","src":"3075:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3077:77:5"},"nodeType":"YulFunctionCall","src":"3077:79:5"},"nodeType":"YulExpressionStatement","src":"3077:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3050:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"3059:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3046:3:5"},"nodeType":"YulFunctionCall","src":"3046:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"3071:2:5","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3042:3:5"},"nodeType":"YulFunctionCall","src":"3042:32:5"},"nodeType":"YulIf","src":"3039:119:5"},{"nodeType":"YulBlock","src":"3168:287:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3183:45:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3214:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3225:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3210:3:5"},"nodeType":"YulFunctionCall","src":"3210:17:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3197:12:5"},"nodeType":"YulFunctionCall","src":"3197:31:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3187:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"3275:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3277:77:5"},"nodeType":"YulFunctionCall","src":"3277:79:5"},"nodeType":"YulExpressionStatement","src":"3277:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3247:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3255:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3244:2:5"},"nodeType":"YulFunctionCall","src":"3244:30:5"},"nodeType":"YulIf","src":"3241:117:5"},{"nodeType":"YulAssignment","src":"3372:73:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3417:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"3428:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3413:3:5"},"nodeType":"YulFunctionCall","src":"3413:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3437:7:5"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3382:30:5"},"nodeType":"YulFunctionCall","src":"3382:63:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3372:6:5"}]}]},{"nodeType":"YulBlock","src":"3465:288:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3480:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3511:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3522:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3507:3:5"},"nodeType":"YulFunctionCall","src":"3507:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3494:12:5"},"nodeType":"YulFunctionCall","src":"3494:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3484:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"3573:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3575:77:5"},"nodeType":"YulFunctionCall","src":"3575:79:5"},"nodeType":"YulExpressionStatement","src":"3575:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3545:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3553:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3542:2:5"},"nodeType":"YulFunctionCall","src":"3542:30:5"},"nodeType":"YulIf","src":"3539:117:5"},{"nodeType":"YulAssignment","src":"3670:73:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3715:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"3726:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3711:3:5"},"nodeType":"YulFunctionCall","src":"3711:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3735:7:5"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3680:30:5"},"nodeType":"YulFunctionCall","src":"3680:63:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3670:6:5"}]}]},{"nodeType":"YulBlock","src":"3763:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3778:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"3792:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3782:6:5","type":""}]},{"nodeType":"YulAssignment","src":"3808:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"3854:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:5"},"nodeType":"YulFunctionCall","src":"3839:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3863:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3818:20:5"},"nodeType":"YulFunctionCall","src":"3818:53:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3808:6:5"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2983:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2994:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3006:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3014:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3022:6:5","type":""}],"src":"2909:979:5"},{"body":{"nodeType":"YulBlock","src":"3960:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"4006:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4008:77:5"},"nodeType":"YulFunctionCall","src":"4008:79:5"},"nodeType":"YulExpressionStatement","src":"4008:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3981:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"3990:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3977:3:5"},"nodeType":"YulFunctionCall","src":"3977:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4002:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3973:3:5"},"nodeType":"YulFunctionCall","src":"3973:32:5"},"nodeType":"YulIf","src":"3970:119:5"},{"nodeType":"YulBlock","src":"4099:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4114:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4128:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4118:6:5","type":""}]},{"nodeType":"YulAssignment","src":"4143:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4178:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4189:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4174:3:5"},"nodeType":"YulFunctionCall","src":"4174:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4198:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4153:20:5"},"nodeType":"YulFunctionCall","src":"4153:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4143:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:5","type":""}],"src":"3894:329:5"},{"body":{"nodeType":"YulBlock","src":"4284:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4301:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4324:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4306:17:5"},"nodeType":"YulFunctionCall","src":"4306:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4294:6:5"},"nodeType":"YulFunctionCall","src":"4294:37:5"},"nodeType":"YulExpressionStatement","src":"4294:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4272:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4279:3:5","type":""}],"src":"4229:108:5"},{"body":{"nodeType":"YulBlock","src":"4402:40:5","statements":[{"nodeType":"YulAssignment","src":"4413:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4429:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4423:5:5"},"nodeType":"YulFunctionCall","src":"4423:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4413:6:5"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4385:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4395:6:5","type":""}],"src":"4343:99:5"},{"body":{"nodeType":"YulBlock","src":"4534:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4551:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"4556:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4544:6:5"},"nodeType":"YulFunctionCall","src":"4544:19:5"},"nodeType":"YulExpressionStatement","src":"4544:19:5"},{"nodeType":"YulAssignment","src":"4572:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4591:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"4596:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4587:3:5"},"nodeType":"YulFunctionCall","src":"4587:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4572:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4506:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"4511:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4522:11:5","type":""}],"src":"4448:159:5"},{"body":{"nodeType":"YulBlock","src":"4675:184:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4685:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4694:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4689:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"4754:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4779:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"4784:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4775:3:5"},"nodeType":"YulFunctionCall","src":"4775:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4798:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"4803:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4794:3:5"},"nodeType":"YulFunctionCall","src":"4794:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4788:5:5"},"nodeType":"YulFunctionCall","src":"4788:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4768:6:5"},"nodeType":"YulFunctionCall","src":"4768:39:5"},"nodeType":"YulExpressionStatement","src":"4768:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4715:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"4718:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4712:2:5"},"nodeType":"YulFunctionCall","src":"4712:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4726:19:5","statements":[{"nodeType":"YulAssignment","src":"4728:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4737:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"4740:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4733:3:5"},"nodeType":"YulFunctionCall","src":"4733:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4728:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"4708:3:5","statements":[]},"src":"4704:113:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4837:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"4842:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4833:3:5"},"nodeType":"YulFunctionCall","src":"4833:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"4851:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4826:6:5"},"nodeType":"YulFunctionCall","src":"4826:27:5"},"nodeType":"YulExpressionStatement","src":"4826:27:5"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4657:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4662:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"4667:6:5","type":""}],"src":"4613:246:5"},{"body":{"nodeType":"YulBlock","src":"4947:275:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4957:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5004:5:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4971:32:5"},"nodeType":"YulFunctionCall","src":"4971:39:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4961:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5019:68:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5075:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"5080:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5026:48:5"},"nodeType":"YulFunctionCall","src":"5026:61:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5019:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5135:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5142:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:5"},"nodeType":"YulFunctionCall","src":"5131:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"5149:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"5154:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5096:34:5"},"nodeType":"YulFunctionCall","src":"5096:65:5"},"nodeType":"YulExpressionStatement","src":"5096:65:5"},{"nodeType":"YulAssignment","src":"5170:46:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5181:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5208:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5186:21:5"},"nodeType":"YulFunctionCall","src":"5186:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5177:3:5"},"nodeType":"YulFunctionCall","src":"5177:39:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5170:3:5"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4928:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4935:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4943:3:5","type":""}],"src":"4865:357:5"},{"body":{"nodeType":"YulBlock","src":"5273:81:5","statements":[{"nodeType":"YulAssignment","src":"5283:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5298:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5305:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5294:3:5"},"nodeType":"YulFunctionCall","src":"5294:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5283:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5255:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5265:7:5","type":""}],"src":"5228:126:5"},{"body":{"nodeType":"YulBlock","src":"5405:51:5","statements":[{"nodeType":"YulAssignment","src":"5415:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5444:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5426:17:5"},"nodeType":"YulFunctionCall","src":"5426:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5415:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5387:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5397:7:5","type":""}],"src":"5360:96:5"},{"body":{"nodeType":"YulBlock","src":"5517:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5534:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5557:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5539:17:5"},"nodeType":"YulFunctionCall","src":"5539:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5527:6:5"},"nodeType":"YulFunctionCall","src":"5527:37:5"},"nodeType":"YulExpressionStatement","src":"5527:37:5"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5505:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5512:3:5","type":""}],"src":"5462:108:5"},{"body":{"nodeType":"YulBlock","src":"5650:40:5","statements":[{"nodeType":"YulAssignment","src":"5661:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5677:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5671:5:5"},"nodeType":"YulFunctionCall","src":"5671:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5661:6:5"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5633:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5643:6:5","type":""}],"src":"5576:114:5"},{"body":{"nodeType":"YulBlock","src":"5797:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5814:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"5819:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5807:6:5"},"nodeType":"YulFunctionCall","src":"5807:19:5"},"nodeType":"YulExpressionStatement","src":"5807:19:5"},{"nodeType":"YulAssignment","src":"5835:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5854:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5859:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5850:3:5"},"nodeType":"YulFunctionCall","src":"5850:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5835:11:5"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5769:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"5774:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5785:11:5","type":""}],"src":"5696:174:5"},{"body":{"nodeType":"YulBlock","src":"5948:60:5","statements":[{"nodeType":"YulAssignment","src":"5958:11:5","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5966:3:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5958:4:5"}]},{"nodeType":"YulAssignment","src":"5979:22:5","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5991:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5996:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5987:3:5"},"nodeType":"YulFunctionCall","src":"5987:14:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5979:4:5"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5935:3:5","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5943:4:5","type":""}],"src":"5876:132:5"},{"body":{"nodeType":"YulBlock","src":"6094:99:5","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6138:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"6146:3:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6104:33:5"},"nodeType":"YulFunctionCall","src":"6104:46:5"},"nodeType":"YulExpressionStatement","src":"6104:46:5"},{"nodeType":"YulAssignment","src":"6159:28:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6177:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"6182:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6173:3:5"},"nodeType":"YulFunctionCall","src":"6173:14:5"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6159:10:5"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6067:6:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6075:3:5","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6083:10:5","type":""}],"src":"6014:179:5"},{"body":{"nodeType":"YulBlock","src":"6274:38:5","statements":[{"nodeType":"YulAssignment","src":"6284:22:5","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6296:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"6301:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6292:3:5"},"nodeType":"YulFunctionCall","src":"6292:14:5"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"6284:4:5"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6261:3:5","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"6269:4:5","type":""}],"src":"6199:113:5"},{"body":{"nodeType":"YulBlock","src":"6462:598:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6472:68:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6534:5:5"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6486:47:5"},"nodeType":"YulFunctionCall","src":"6486:54:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6476:6:5","type":""}]},{"nodeType":"YulAssignment","src":"6549:83:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6620:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"6625:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6556:63:5"},"nodeType":"YulFunctionCall","src":"6556:76:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6549:3:5"}]},{"nodeType":"YulVariableDeclaration","src":"6641:71:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6706:5:5"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6656:49:5"},"nodeType":"YulFunctionCall","src":"6656:56:5"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6645:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6721:21:5","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6735:7:5"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6725:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6811:224:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6825:34:5","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6852:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6846:5:5"},"nodeType":"YulFunctionCall","src":"6846:13:5"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6829:13:5","type":""}]},{"nodeType":"YulAssignment","src":"6872:70:5","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6923:13:5"},{"name":"pos","nodeType":"YulIdentifier","src":"6938:3:5"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6879:43:5"},"nodeType":"YulFunctionCall","src":"6879:63:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6872:3:5"}]},{"nodeType":"YulAssignment","src":"6955:70:5","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7018:6:5"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6965:52:5"},"nodeType":"YulFunctionCall","src":"6965:60:5"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6955:6:5"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6773:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"6776:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6770:2:5"},"nodeType":"YulFunctionCall","src":"6770:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6784:18:5","statements":[{"nodeType":"YulAssignment","src":"6786:14:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6795:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"6798:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6791:3:5"},"nodeType":"YulFunctionCall","src":"6791:9:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6786:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"6755:14:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6757:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"6766:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6761:1:5","type":""}]}]},"src":"6751:284:5"},{"nodeType":"YulAssignment","src":"7044:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"7051:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7044:3:5"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6441:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6448:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6457:3:5","type":""}],"src":"6348:712:5"},{"body":{"nodeType":"YulBlock","src":"7262:1362:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7272:26:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7288:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"7293:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7284:3:5"},"nodeType":"YulFunctionCall","src":"7284:14:5"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"7276:4:5","type":""}]},{"nodeType":"YulBlock","src":"7308:162:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7341:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7371:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7378:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:5"},"nodeType":"YulFunctionCall","src":"7367:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7361:5:5"},"nodeType":"YulFunctionCall","src":"7361:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7345:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7431:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7449:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"7454:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7445:3:5"},"nodeType":"YulFunctionCall","src":"7445:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7397:33:5"},"nodeType":"YulFunctionCall","src":"7397:63:5"},"nodeType":"YulExpressionStatement","src":"7397:63:5"}]},{"nodeType":"YulBlock","src":"7480:235:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7515:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7545:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7552:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7541:3:5"},"nodeType":"YulFunctionCall","src":"7541:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7535:5:5"},"nodeType":"YulFunctionCall","src":"7535:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7519:12:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7583:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"7588:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7579:3:5"},"nodeType":"YulFunctionCall","src":"7579:14:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7599:4:5"},{"name":"pos","nodeType":"YulIdentifier","src":"7605:3:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7595:3:5"},"nodeType":"YulFunctionCall","src":"7595:14:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7572:6:5"},"nodeType":"YulFunctionCall","src":"7572:38:5"},"nodeType":"YulExpressionStatement","src":"7572:38:5"},{"nodeType":"YulAssignment","src":"7623:81:5","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7685:12:5"},{"name":"tail","nodeType":"YulIdentifier","src":"7699:4:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7631:53:5"},"nodeType":"YulFunctionCall","src":"7631:73:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7623:4:5"}]}]},{"nodeType":"YulBlock","src":"7725:236:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7761:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7791:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7798:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7787:3:5"},"nodeType":"YulFunctionCall","src":"7787:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7781:5:5"},"nodeType":"YulFunctionCall","src":"7781:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7765:12:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7829:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"7834:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7825:3:5"},"nodeType":"YulFunctionCall","src":"7825:14:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7845:4:5"},{"name":"pos","nodeType":"YulIdentifier","src":"7851:3:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7841:3:5"},"nodeType":"YulFunctionCall","src":"7841:14:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7818:6:5"},"nodeType":"YulFunctionCall","src":"7818:38:5"},"nodeType":"YulExpressionStatement","src":"7818:38:5"},{"nodeType":"YulAssignment","src":"7869:81:5","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7931:12:5"},{"name":"tail","nodeType":"YulIdentifier","src":"7945:4:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7877:53:5"},"nodeType":"YulFunctionCall","src":"7877:73:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7869:4:5"}]}]},{"nodeType":"YulBlock","src":"7971:163:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8005:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8035:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8042:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8031:3:5"},"nodeType":"YulFunctionCall","src":"8031:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8025:5:5"},"nodeType":"YulFunctionCall","src":"8025:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8009:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8095:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8113:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8118:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8109:3:5"},"nodeType":"YulFunctionCall","src":"8109:14:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8061:33:5"},"nodeType":"YulFunctionCall","src":"8061:63:5"},"nodeType":"YulExpressionStatement","src":"8061:63:5"}]},{"nodeType":"YulBlock","src":"8144:166:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8181:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8211:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8218:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8207:3:5"},"nodeType":"YulFunctionCall","src":"8207:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8201:5:5"},"nodeType":"YulFunctionCall","src":"8201:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8185:12:5","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8271:12:5"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8289:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8294:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8285:3:5"},"nodeType":"YulFunctionCall","src":"8285:14:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"8237:33:5"},"nodeType":"YulFunctionCall","src":"8237:63:5"},"nodeType":"YulExpressionStatement","src":"8237:63:5"}]},{"nodeType":"YulBlock","src":"8320:277:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8367:43:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8397:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8404:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8393:3:5"},"nodeType":"YulFunctionCall","src":"8393:16:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8387:5:5"},"nodeType":"YulFunctionCall","src":"8387:23:5"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8371:12:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8435:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8440:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8431:3:5"},"nodeType":"YulFunctionCall","src":"8431:14:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8451:4:5"},{"name":"pos","nodeType":"YulIdentifier","src":"8457:3:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8447:3:5"},"nodeType":"YulFunctionCall","src":"8447:14:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8424:6:5"},"nodeType":"YulFunctionCall","src":"8424:38:5"},"nodeType":"YulExpressionStatement","src":"8424:38:5"},{"nodeType":"YulAssignment","src":"8475:111:5","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8567:12:5"},{"name":"tail","nodeType":"YulIdentifier","src":"8581:4:5"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8483:83:5"},"nodeType":"YulFunctionCall","src":"8483:103:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8475:4:5"}]}]},{"nodeType":"YulAssignment","src":"8607:11:5","value":{"name":"tail","nodeType":"YulIdentifier","src":"8614:4:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8607:3:5"}]}]},"name":"abi_encode_t_struct$_Identity_$742_memory_ptr_to_t_struct$_Identity_$742_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7241:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7248:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7257:3:5","type":""}],"src":"7138:1486:5"},{"body":{"nodeType":"YulBlock","src":"8778:225:5","statements":[{"nodeType":"YulAssignment","src":"8788:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8800:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8811:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8796:3:5"},"nodeType":"YulFunctionCall","src":"8796:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8788:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8835:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8846:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8831:3:5"},"nodeType":"YulFunctionCall","src":"8831:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8854:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8850:3:5"},"nodeType":"YulFunctionCall","src":"8850:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8824:6:5"},"nodeType":"YulFunctionCall","src":"8824:47:5"},"nodeType":"YulExpressionStatement","src":"8824:47:5"},{"nodeType":"YulAssignment","src":"8880:116:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8982:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"8991:4:5"}],"functionName":{"name":"abi_encode_t_struct$_Identity_$742_memory_ptr_to_t_struct$_Identity_$742_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8888:93:5"},"nodeType":"YulFunctionCall","src":"8888:108:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8880:4:5"}]}]},"name":"abi_encode_tuple_t_struct$_Identity_$742_memory_ptr__to_t_struct$_Identity_$742_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8750:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8762:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8773:4:5","type":""}],"src":"8630:373:5"},{"body":{"nodeType":"YulBlock","src":"9051:48:5","statements":[{"nodeType":"YulAssignment","src":"9061:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9086:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9079:6:5"},"nodeType":"YulFunctionCall","src":"9079:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9072:6:5"},"nodeType":"YulFunctionCall","src":"9072:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9061:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9033:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9043:7:5","type":""}],"src":"9009:90:5"},{"body":{"nodeType":"YulBlock","src":"9145:76:5","statements":[{"body":{"nodeType":"YulBlock","src":"9199:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9208:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9211:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9201:6:5"},"nodeType":"YulFunctionCall","src":"9201:12:5"},"nodeType":"YulExpressionStatement","src":"9201:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9168:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9190:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9175:14:5"},"nodeType":"YulFunctionCall","src":"9175:21:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9165:2:5"},"nodeType":"YulFunctionCall","src":"9165:32:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9158:6:5"},"nodeType":"YulFunctionCall","src":"9158:40:5"},"nodeType":"YulIf","src":"9155:60:5"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9138:5:5","type":""}],"src":"9105:116:5"},{"body":{"nodeType":"YulBlock","src":"9276:84:5","statements":[{"nodeType":"YulAssignment","src":"9286:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9308:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9295:12:5"},"nodeType":"YulFunctionCall","src":"9295:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9286:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9348:5:5"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9324:23:5"},"nodeType":"YulFunctionCall","src":"9324:30:5"},"nodeType":"YulExpressionStatement","src":"9324:30:5"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9254:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"9262:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9270:5:5","type":""}],"src":"9227:133:5"},{"body":{"nodeType":"YulBlock","src":"9490:815:5","statements":[{"body":{"nodeType":"YulBlock","src":"9537:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9539:77:5"},"nodeType":"YulFunctionCall","src":"9539:79:5"},"nodeType":"YulExpressionStatement","src":"9539:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9511:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"9520:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9507:3:5"},"nodeType":"YulFunctionCall","src":"9507:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"9532:3:5","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9503:3:5"},"nodeType":"YulFunctionCall","src":"9503:33:5"},"nodeType":"YulIf","src":"9500:120:5"},{"nodeType":"YulBlock","src":"9630:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9645:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9659:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9649:6:5","type":""}]},{"nodeType":"YulAssignment","src":"9674:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9709:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9720:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9705:3:5"},"nodeType":"YulFunctionCall","src":"9705:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9729:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9684:20:5"},"nodeType":"YulFunctionCall","src":"9684:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9674:6:5"}]}]},{"nodeType":"YulBlock","src":"9757:288:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9772:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9803:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9814:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9799:3:5"},"nodeType":"YulFunctionCall","src":"9799:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9786:12:5"},"nodeType":"YulFunctionCall","src":"9786:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9776:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"9865:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9867:77:5"},"nodeType":"YulFunctionCall","src":"9867:79:5"},"nodeType":"YulExpressionStatement","src":"9867:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9837:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"9845:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9834:2:5"},"nodeType":"YulFunctionCall","src":"9834:30:5"},"nodeType":"YulIf","src":"9831:117:5"},{"nodeType":"YulAssignment","src":"9962:73:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10007:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10018:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10003:3:5"},"nodeType":"YulFunctionCall","src":"10003:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10027:7:5"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9972:30:5"},"nodeType":"YulFunctionCall","src":"9972:63:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9962:6:5"}]}]},{"nodeType":"YulBlock","src":"10055:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10070:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10084:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10074:6:5","type":""}]},{"nodeType":"YulAssignment","src":"10100:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10135:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10146:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10131:3:5"},"nodeType":"YulFunctionCall","src":"10131:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10155:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10110:20:5"},"nodeType":"YulFunctionCall","src":"10110:53:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10100:6:5"}]}]},{"nodeType":"YulBlock","src":"10183:115:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10198:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10212:2:5","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10202:6:5","type":""}]},{"nodeType":"YulAssignment","src":"10228:60:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10260:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10271:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10256:3:5"},"nodeType":"YulFunctionCall","src":"10256:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10280:7:5"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10238:17:5"},"nodeType":"YulFunctionCall","src":"10238:50:5"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10228:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9436:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9447:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9459:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9467:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9475:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9483:6:5","type":""}],"src":"9366:939:5"},{"body":{"nodeType":"YulBlock","src":"10370:50:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10387:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10407:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10392:14:5"},"nodeType":"YulFunctionCall","src":"10392:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10380:6:5"},"nodeType":"YulFunctionCall","src":"10380:34:5"},"nodeType":"YulExpressionStatement","src":"10380:34:5"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10358:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10365:3:5","type":""}],"src":"10311:109:5"},{"body":{"nodeType":"YulBlock","src":"10518:118:5","statements":[{"nodeType":"YulAssignment","src":"10528:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10540:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10551:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10536:3:5"},"nodeType":"YulFunctionCall","src":"10536:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10528:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10602:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10615:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10626:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10611:3:5"},"nodeType":"YulFunctionCall","src":"10611:17:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"10564:37:5"},"nodeType":"YulFunctionCall","src":"10564:65:5"},"nodeType":"YulExpressionStatement","src":"10564:65:5"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10490:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10502:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10513:4:5","type":""}],"src":"10426:210:5"},{"body":{"nodeType":"YulBlock","src":"10670:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10687:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10690:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10680:6:5"},"nodeType":"YulFunctionCall","src":"10680:88:5"},"nodeType":"YulExpressionStatement","src":"10680:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10784:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10787:4:5","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10777:6:5"},"nodeType":"YulFunctionCall","src":"10777:15:5"},"nodeType":"YulExpressionStatement","src":"10777:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10808:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10811:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10801:6:5"},"nodeType":"YulFunctionCall","src":"10801:15:5"},"nodeType":"YulExpressionStatement","src":"10801:15:5"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10642:180:5"},{"body":{"nodeType":"YulBlock","src":"10879:269:5","statements":[{"nodeType":"YulAssignment","src":"10889:22:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10903:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"10909:1:5","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10899:3:5"},"nodeType":"YulFunctionCall","src":"10899:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10889:6:5"}]},{"nodeType":"YulVariableDeclaration","src":"10920:38:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10950:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"10956:1:5","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10946:3:5"},"nodeType":"YulFunctionCall","src":"10946:12:5"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10924:18:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"10997:51:5","statements":[{"nodeType":"YulAssignment","src":"11011:27:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11025:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"11033:4:5","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11021:3:5"},"nodeType":"YulFunctionCall","src":"11021:17:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11011:6:5"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10977:18:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10970:6:5"},"nodeType":"YulFunctionCall","src":"10970:26:5"},"nodeType":"YulIf","src":"10967:81:5"},{"body":{"nodeType":"YulBlock","src":"11100:42:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11114:16:5"},"nodeType":"YulFunctionCall","src":"11114:18:5"},"nodeType":"YulExpressionStatement","src":"11114:18:5"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11064:18:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11087:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"11095:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11084:2:5"},"nodeType":"YulFunctionCall","src":"11084:14:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11061:2:5"},"nodeType":"YulFunctionCall","src":"11061:38:5"},"nodeType":"YulIf","src":"11058:84:5"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10863:4:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10872:6:5","type":""}],"src":"10828:320:5"},{"body":{"nodeType":"YulBlock","src":"11208:87:5","statements":[{"nodeType":"YulAssignment","src":"11218:11:5","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11226:3:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11218:4:5"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11246:1:5","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11249:3:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11239:6:5"},"nodeType":"YulFunctionCall","src":"11239:14:5"},"nodeType":"YulExpressionStatement","src":"11239:14:5"},{"nodeType":"YulAssignment","src":"11262:26:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11280:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11283:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11270:9:5"},"nodeType":"YulFunctionCall","src":"11270:18:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11262:4:5"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11195:3:5","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11203:4:5","type":""}],"src":"11154:141:5"},{"body":{"nodeType":"YulBlock","src":"11345:49:5","statements":[{"nodeType":"YulAssignment","src":"11355:33:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11373:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"11380:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11369:3:5"},"nodeType":"YulFunctionCall","src":"11369:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"11385:2:5","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11365:3:5"},"nodeType":"YulFunctionCall","src":"11365:23:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11355:6:5"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11328:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11338:6:5","type":""}],"src":"11301:93:5"},{"body":{"nodeType":"YulBlock","src":"11453:54:5","statements":[{"nodeType":"YulAssignment","src":"11463:37:5","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11488:4:5"},{"name":"value","nodeType":"YulIdentifier","src":"11494:5:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11484:3:5"},"nodeType":"YulFunctionCall","src":"11484:16:5"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11463:8:5"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11428:4:5","type":""},{"name":"value","nodeType":"YulTypedName","src":"11434:5:5","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11444:8:5","type":""}],"src":"11400:107:5"},{"body":{"nodeType":"YulBlock","src":"11589:317:5","statements":[{"nodeType":"YulVariableDeclaration","src":"11599:35:5","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"11620:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"11632:1:5","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11616:3:5"},"nodeType":"YulFunctionCall","src":"11616:18:5"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"11603:9:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11643:109:5","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"11674:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11685:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11655:18:5"},"nodeType":"YulFunctionCall","src":"11655:97:5"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"11647:4:5","type":""}]},{"nodeType":"YulAssignment","src":"11761:51:5","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"11792:9:5"},{"name":"toInsert","nodeType":"YulIdentifier","src":"11803:8:5"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11773:18:5"},"nodeType":"YulFunctionCall","src":"11773:39:5"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"11761:8:5"}]},{"nodeType":"YulAssignment","src":"11821:30:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11834:5:5"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"11845:4:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11841:3:5"},"nodeType":"YulFunctionCall","src":"11841:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11830:3:5"},"nodeType":"YulFunctionCall","src":"11830:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11821:5:5"}]},{"nodeType":"YulAssignment","src":"11860:40:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11873:5:5"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"11884:8:5"},{"name":"mask","nodeType":"YulIdentifier","src":"11894:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11880:3:5"},"nodeType":"YulFunctionCall","src":"11880:19:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11870:2:5"},"nodeType":"YulFunctionCall","src":"11870:30:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11860:6:5"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11550:5:5","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"11557:10:5","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"11569:8:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11582:6:5","type":""}],"src":"11513:393:5"},{"body":{"nodeType":"YulBlock","src":"11944:28:5","statements":[{"nodeType":"YulAssignment","src":"11954:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"11961:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11954:3:5"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11930:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11940:3:5","type":""}],"src":"11912:60:5"},{"body":{"nodeType":"YulBlock","src":"12038:82:5","statements":[{"nodeType":"YulAssignment","src":"12048:66:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12106:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12088:17:5"},"nodeType":"YulFunctionCall","src":"12088:24:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12079:8:5"},"nodeType":"YulFunctionCall","src":"12079:34:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12061:17:5"},"nodeType":"YulFunctionCall","src":"12061:53:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12048:9:5"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12018:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12028:9:5","type":""}],"src":"11978:142:5"},{"body":{"nodeType":"YulBlock","src":"12173:28:5","statements":[{"nodeType":"YulAssignment","src":"12183:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"12190:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12183:3:5"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12159:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12169:3:5","type":""}],"src":"12126:75:5"},{"body":{"nodeType":"YulBlock","src":"12283:193:5","statements":[{"nodeType":"YulVariableDeclaration","src":"12293:63:5","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"12348:7:5"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12317:30:5"},"nodeType":"YulFunctionCall","src":"12317:39:5"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"12297:16:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12372:4:5"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12412:4:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12406:5:5"},"nodeType":"YulFunctionCall","src":"12406:11:5"},{"name":"offset","nodeType":"YulIdentifier","src":"12419:6:5"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"12451:16:5"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"12427:23:5"},"nodeType":"YulFunctionCall","src":"12427:41:5"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"12378:27:5"},"nodeType":"YulFunctionCall","src":"12378:91:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12365:6:5"},"nodeType":"YulFunctionCall","src":"12365:105:5"},"nodeType":"YulExpressionStatement","src":"12365:105:5"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12260:4:5","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12266:6:5","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"12274:7:5","type":""}],"src":"12207:269:5"},{"body":{"nodeType":"YulBlock","src":"12531:24:5","statements":[{"nodeType":"YulAssignment","src":"12541:8:5","value":{"kind":"number","nodeType":"YulLiteral","src":"12548:1:5","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12541:3:5"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12527:3:5","type":""}],"src":"12482:73:5"},{"body":{"nodeType":"YulBlock","src":"12614:136:5","statements":[{"nodeType":"YulVariableDeclaration","src":"12624:46:5","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"12638:30:5"},"nodeType":"YulFunctionCall","src":"12638:32:5"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"12628:6:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12723:4:5"},{"name":"offset","nodeType":"YulIdentifier","src":"12729:6:5"},{"name":"zero_0","nodeType":"YulIdentifier","src":"12737:6:5"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12679:43:5"},"nodeType":"YulFunctionCall","src":"12679:65:5"},"nodeType":"YulExpressionStatement","src":"12679:65:5"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12600:4:5","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12606:6:5","type":""}],"src":"12561:189:5"},{"body":{"nodeType":"YulBlock","src":"12806:136:5","statements":[{"body":{"nodeType":"YulBlock","src":"12873:63:5","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12917:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"12924:1:5","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"12887:29:5"},"nodeType":"YulFunctionCall","src":"12887:39:5"},"nodeType":"YulExpressionStatement","src":"12887:39:5"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12826:5:5"},{"name":"end","nodeType":"YulIdentifier","src":"12833:3:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12823:2:5"},"nodeType":"YulFunctionCall","src":"12823:14:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12838:26:5","statements":[{"nodeType":"YulAssignment","src":"12840:22:5","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"12853:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"12860:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12849:3:5"},"nodeType":"YulFunctionCall","src":"12849:13:5"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"12840:5:5"}]}]},"pre":{"nodeType":"YulBlock","src":"12820:2:5","statements":[]},"src":"12816:120:5"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"12794:5:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"12801:3:5","type":""}],"src":"12756:186:5"},{"body":{"nodeType":"YulBlock","src":"13027:464:5","statements":[{"body":{"nodeType":"YulBlock","src":"13053:431:5","statements":[{"nodeType":"YulVariableDeclaration","src":"13067:54:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13115:5:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"13083:31:5"},"nodeType":"YulFunctionCall","src":"13083:38:5"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"13071:8:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13134:63:5","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13157:8:5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13185:10:5"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13167:17:5"},"nodeType":"YulFunctionCall","src":"13167:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13153:3:5"},"nodeType":"YulFunctionCall","src":"13153:44:5"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13138:11:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"13354:27:5","statements":[{"nodeType":"YulAssignment","src":"13356:23:5","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"13371:8:5"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13356:11:5"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13338:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"13350:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13335:2:5"},"nodeType":"YulFunctionCall","src":"13335:18:5"},"nodeType":"YulIf","src":"13332:49:5"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13423:11:5"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13440:8:5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13468:3:5"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13450:17:5"},"nodeType":"YulFunctionCall","src":"13450:22:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13436:3:5"},"nodeType":"YulFunctionCall","src":"13436:37:5"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"13394:28:5"},"nodeType":"YulFunctionCall","src":"13394:80:5"},"nodeType":"YulExpressionStatement","src":"13394:80:5"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13044:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"13049:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13041:2:5"},"nodeType":"YulFunctionCall","src":"13041:11:5"},"nodeType":"YulIf","src":"13038:446:5"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13003:5:5","type":""},{"name":"len","nodeType":"YulTypedName","src":"13010:3:5","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13015:10:5","type":""}],"src":"12948:543:5"},{"body":{"nodeType":"YulBlock","src":"13560:54:5","statements":[{"nodeType":"YulAssignment","src":"13570:37:5","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"13595:4:5"},{"name":"value","nodeType":"YulIdentifier","src":"13601:5:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13591:3:5"},"nodeType":"YulFunctionCall","src":"13591:16:5"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13570:8:5"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"13535:4:5","type":""},{"name":"value","nodeType":"YulTypedName","src":"13541:5:5","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13551:8:5","type":""}],"src":"13497:117:5"},{"body":{"nodeType":"YulBlock","src":"13671:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"13681:68:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13730:1:5","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"13733:5:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13726:3:5"},"nodeType":"YulFunctionCall","src":"13726:13:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13745:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13741:3:5"},"nodeType":"YulFunctionCall","src":"13741:6:5"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"13697:28:5"},"nodeType":"YulFunctionCall","src":"13697:51:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13693:3:5"},"nodeType":"YulFunctionCall","src":"13693:56:5"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"13685:4:5","type":""}]},{"nodeType":"YulAssignment","src":"13758:25:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13772:4:5"},{"name":"mask","nodeType":"YulIdentifier","src":"13778:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13768:3:5"},"nodeType":"YulFunctionCall","src":"13768:15:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13758:6:5"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13648:4:5","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"13654:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13664:6:5","type":""}],"src":"13620:169:5"},{"body":{"nodeType":"YulBlock","src":"13875:214:5","statements":[{"nodeType":"YulAssignment","src":"14008:37:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14035:4:5"},{"name":"len","nodeType":"YulIdentifier","src":"14041:3:5"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"14016:18:5"},"nodeType":"YulFunctionCall","src":"14016:29:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14008:4:5"}]},{"nodeType":"YulAssignment","src":"14054:29:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14065:4:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14075:1:5","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"14078:3:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14071:3:5"},"nodeType":"YulFunctionCall","src":"14071:11:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14062:2:5"},"nodeType":"YulFunctionCall","src":"14062:21:5"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14054:4:5"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13856:4:5","type":""},{"name":"len","nodeType":"YulTypedName","src":"13862:3:5","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"13870:4:5","type":""}],"src":"13794:295:5"},{"body":{"nodeType":"YulBlock","src":"14186:1303:5","statements":[{"nodeType":"YulVariableDeclaration","src":"14197:51:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14244:3:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14211:32:5"},"nodeType":"YulFunctionCall","src":"14211:37:5"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14201:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"14333:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14335:16:5"},"nodeType":"YulFunctionCall","src":"14335:18:5"},"nodeType":"YulExpressionStatement","src":"14335:18:5"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14305:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14313:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14302:2:5"},"nodeType":"YulFunctionCall","src":"14302:30:5"},"nodeType":"YulIf","src":"14299:56:5"},{"nodeType":"YulVariableDeclaration","src":"14365:52:5","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14411:4:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14405:5:5"},"nodeType":"YulFunctionCall","src":"14405:11:5"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14379:25:5"},"nodeType":"YulFunctionCall","src":"14379:38:5"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"14369:6:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14510:4:5"},{"name":"oldLen","nodeType":"YulIdentifier","src":"14516:6:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"14524:6:5"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"14464:45:5"},"nodeType":"YulFunctionCall","src":"14464:67:5"},"nodeType":"YulExpressionStatement","src":"14464:67:5"},{"nodeType":"YulVariableDeclaration","src":"14541:18:5","value":{"kind":"number","nodeType":"YulLiteral","src":"14558:1:5","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14545:9:5","type":""}]},{"nodeType":"YulAssignment","src":"14569:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"14582:4:5","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14569:9:5"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14633:611:5","statements":[{"nodeType":"YulVariableDeclaration","src":"14647:37:5","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14666:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14678:4:5","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14674:3:5"},"nodeType":"YulFunctionCall","src":"14674:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14662:3:5"},"nodeType":"YulFunctionCall","src":"14662:22:5"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14651:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14698:51:5","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14744:4:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"14712:31:5"},"nodeType":"YulFunctionCall","src":"14712:37:5"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"14702:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14762:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"14771:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14766:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"14830:163:5","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14855:6:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14873:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14878:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14869:3:5"},"nodeType":"YulFunctionCall","src":"14869:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14863:5:5"},"nodeType":"YulFunctionCall","src":"14863:26:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14848:6:5"},"nodeType":"YulFunctionCall","src":"14848:42:5"},"nodeType":"YulExpressionStatement","src":"14848:42:5"},{"nodeType":"YulAssignment","src":"14907:24:5","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14921:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14929:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14917:3:5"},"nodeType":"YulFunctionCall","src":"14917:14:5"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14907:6:5"}]},{"nodeType":"YulAssignment","src":"14948:31:5","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14965:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"14976:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14961:3:5"},"nodeType":"YulFunctionCall","src":"14961:18:5"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14948:9:5"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14796:1:5"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"14799:7:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14793:2:5"},"nodeType":"YulFunctionCall","src":"14793:14:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14808:21:5","statements":[{"nodeType":"YulAssignment","src":"14810:17:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14819:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"14822:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14815:3:5"},"nodeType":"YulFunctionCall","src":"14815:12:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14810:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"14789:3:5","statements":[]},"src":"14785:208:5"},{"body":{"nodeType":"YulBlock","src":"15029:156:5","statements":[{"nodeType":"YulVariableDeclaration","src":"15047:43:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15074:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15079:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15070:3:5"},"nodeType":"YulFunctionCall","src":"15070:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15064:5:5"},"nodeType":"YulFunctionCall","src":"15064:26:5"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15051:9:5","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15114:6:5"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15141:9:5"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15156:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"15164:4:5","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15152:3:5"},"nodeType":"YulFunctionCall","src":"15152:17:5"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"15122:18:5"},"nodeType":"YulFunctionCall","src":"15122:48:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15107:6:5"},"nodeType":"YulFunctionCall","src":"15107:64:5"},"nodeType":"YulExpressionStatement","src":"15107:64:5"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15012:7:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"15021:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15009:2:5"},"nodeType":"YulFunctionCall","src":"15009:19:5"},"nodeType":"YulIf","src":"15006:179:5"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15205:4:5"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15219:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"15227:1:5","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15215:3:5"},"nodeType":"YulFunctionCall","src":"15215:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"15231:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15211:3:5"},"nodeType":"YulFunctionCall","src":"15211:22:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15198:6:5"},"nodeType":"YulFunctionCall","src":"15198:36:5"},"nodeType":"YulExpressionStatement","src":"15198:36:5"}]},"nodeType":"YulCase","src":"14626:618:5","value":{"kind":"number","nodeType":"YulLiteral","src":"14631:1:5","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15261:222:5","statements":[{"nodeType":"YulVariableDeclaration","src":"15275:14:5","value":{"kind":"number","nodeType":"YulLiteral","src":"15288:1:5","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15279:5:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"15312:67:5","statements":[{"nodeType":"YulAssignment","src":"15330:35:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15349:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15354:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15345:3:5"},"nodeType":"YulFunctionCall","src":"15345:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15339:5:5"},"nodeType":"YulFunctionCall","src":"15339:26:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15330:5:5"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"15305:6:5"},"nodeType":"YulIf","src":"15302:77:5"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15399:4:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15458:5:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"15465:6:5"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15405:52:5"},"nodeType":"YulFunctionCall","src":"15405:67:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15392:6:5"},"nodeType":"YulFunctionCall","src":"15392:81:5"},"nodeType":"YulExpressionStatement","src":"15392:81:5"}]},"nodeType":"YulCase","src":"15253:230:5","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14606:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14614:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14603:2:5"},"nodeType":"YulFunctionCall","src":"14603:14:5"},"nodeType":"YulSwitch","src":"14596:887:5"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14175:4:5","type":""},{"name":"src","nodeType":"YulTypedName","src":"14181:3:5","type":""}],"src":"14094:1395:5"},{"body":{"nodeType":"YulBlock","src":"15560:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15577:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15600:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15582:17:5"},"nodeType":"YulFunctionCall","src":"15582:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15570:6:5"},"nodeType":"YulFunctionCall","src":"15570:37:5"},"nodeType":"YulExpressionStatement","src":"15570:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15548:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15555:3:5","type":""}],"src":"15495:118:5"},{"body":{"nodeType":"YulBlock","src":"15717:124:5","statements":[{"nodeType":"YulAssignment","src":"15727:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15739:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"15750:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15735:3:5"},"nodeType":"YulFunctionCall","src":"15735:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15727:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15807:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15820:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"15831:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15816:3:5"},"nodeType":"YulFunctionCall","src":"15816:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15763:43:5"},"nodeType":"YulFunctionCall","src":"15763:71:5"},"nodeType":"YulExpressionStatement","src":"15763:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15689:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15701:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15712:4:5","type":""}],"src":"15619:222:5"},{"body":{"nodeType":"YulBlock","src":"15912:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15929:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15952:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15934:17:5"},"nodeType":"YulFunctionCall","src":"15934:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15922:6:5"},"nodeType":"YulFunctionCall","src":"15922:37:5"},"nodeType":"YulExpressionStatement","src":"15922:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15900:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15907:3:5","type":""}],"src":"15847:118:5"},{"body":{"nodeType":"YulBlock","src":"16069:124:5","statements":[{"nodeType":"YulAssignment","src":"16079:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16091:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16102:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16087:3:5"},"nodeType":"YulFunctionCall","src":"16087:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16079:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16159:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16172:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16183:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16168:3:5"},"nodeType":"YulFunctionCall","src":"16168:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16115:43:5"},"nodeType":"YulFunctionCall","src":"16115:71:5"},"nodeType":"YulExpressionStatement","src":"16115:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16041:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16053:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16064:4:5","type":""}],"src":"15971:222:5"},{"body":{"nodeType":"YulBlock","src":"16295:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16312:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"16317:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16305:6:5"},"nodeType":"YulFunctionCall","src":"16305:19:5"},"nodeType":"YulExpressionStatement","src":"16305:19:5"},{"nodeType":"YulAssignment","src":"16333:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16352:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"16357:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16348:3:5"},"nodeType":"YulFunctionCall","src":"16348:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16333:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16267:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"16272:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16283:11:5","type":""}],"src":"16199:169:5"},{"body":{"nodeType":"YulBlock","src":"16480:125:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16502:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16510:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16498:3:5"},"nodeType":"YulFunctionCall","src":"16498:14:5"},{"hexValue":"50726f7669646564205353494420646f6573206e6f74206d6174636820746865","kind":"string","nodeType":"YulLiteral","src":"16514:34:5","type":"","value":"Provided SSID does not match the"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16491:6:5"},"nodeType":"YulFunctionCall","src":"16491:58:5"},"nodeType":"YulExpressionStatement","src":"16491:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16570:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16578:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16566:3:5"},"nodeType":"YulFunctionCall","src":"16566:15:5"},{"hexValue":"2073746f7265642053534944","kind":"string","nodeType":"YulLiteral","src":"16583:14:5","type":"","value":" stored SSID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16559:6:5"},"nodeType":"YulFunctionCall","src":"16559:39:5"},"nodeType":"YulExpressionStatement","src":"16559:39:5"}]},"name":"store_literal_in_memory_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16472:6:5","type":""}],"src":"16374:231:5"},{"body":{"nodeType":"YulBlock","src":"16757:220:5","statements":[{"nodeType":"YulAssignment","src":"16767:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16833:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"16838:2:5","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16774:58:5"},"nodeType":"YulFunctionCall","src":"16774:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16767:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16939:3:5"}],"functionName":{"name":"store_literal_in_memory_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d","nodeType":"YulIdentifier","src":"16850:88:5"},"nodeType":"YulFunctionCall","src":"16850:93:5"},"nodeType":"YulExpressionStatement","src":"16850:93:5"},{"nodeType":"YulAssignment","src":"16952:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16963:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"16968:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16959:3:5"},"nodeType":"YulFunctionCall","src":"16959:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16952:3:5"}]}]},"name":"abi_encode_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16745:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16753:3:5","type":""}],"src":"16611:366:5"},{"body":{"nodeType":"YulBlock","src":"17154:248:5","statements":[{"nodeType":"YulAssignment","src":"17164:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17176:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"17187:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17172:3:5"},"nodeType":"YulFunctionCall","src":"17172:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17164:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17211:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"17222:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17207:3:5"},"nodeType":"YulFunctionCall","src":"17207:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17230:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"17236:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17226:3:5"},"nodeType":"YulFunctionCall","src":"17226:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17200:6:5"},"nodeType":"YulFunctionCall","src":"17200:47:5"},"nodeType":"YulExpressionStatement","src":"17200:47:5"},{"nodeType":"YulAssignment","src":"17256:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17390:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17264:124:5"},"nodeType":"YulFunctionCall","src":"17264:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17256:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17134:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17149:4:5","type":""}],"src":"16983:419:5"},{"body":{"nodeType":"YulBlock","src":"17514:60:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17536:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"17544:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17532:3:5"},"nodeType":"YulFunctionCall","src":"17532:14:5"},{"hexValue":"496e76616c6964204964656e74697479","kind":"string","nodeType":"YulLiteral","src":"17548:18:5","type":"","value":"Invalid Identity"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17525:6:5"},"nodeType":"YulFunctionCall","src":"17525:42:5"},"nodeType":"YulExpressionStatement","src":"17525:42:5"}]},"name":"store_literal_in_memory_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17506:6:5","type":""}],"src":"17408:166:5"},{"body":{"nodeType":"YulBlock","src":"17726:220:5","statements":[{"nodeType":"YulAssignment","src":"17736:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17802:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17807:2:5","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17743:58:5"},"nodeType":"YulFunctionCall","src":"17743:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17736:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17908:3:5"}],"functionName":{"name":"store_literal_in_memory_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1","nodeType":"YulIdentifier","src":"17819:88:5"},"nodeType":"YulFunctionCall","src":"17819:93:5"},"nodeType":"YulExpressionStatement","src":"17819:93:5"},{"nodeType":"YulAssignment","src":"17921:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17932:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"17937:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17928:3:5"},"nodeType":"YulFunctionCall","src":"17928:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17921:3:5"}]}]},"name":"abi_encode_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17714:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17722:3:5","type":""}],"src":"17580:366:5"},{"body":{"nodeType":"YulBlock","src":"18123:248:5","statements":[{"nodeType":"YulAssignment","src":"18133:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18145:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18156:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18141:3:5"},"nodeType":"YulFunctionCall","src":"18141:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18133:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18180:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18191:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18176:3:5"},"nodeType":"YulFunctionCall","src":"18176:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18199:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"18205:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18195:3:5"},"nodeType":"YulFunctionCall","src":"18195:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18169:6:5"},"nodeType":"YulFunctionCall","src":"18169:47:5"},"nodeType":"YulExpressionStatement","src":"18169:47:5"},{"nodeType":"YulAssignment","src":"18225:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18359:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18233:124:5"},"nodeType":"YulFunctionCall","src":"18233:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18225:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18103:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18118:4:5","type":""}],"src":"17952:419:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct SSIDWithWallet.Identity -> struct SSIDWithWallet.Identity\n    function abi_encode_t_struct$_Identity_$742_memory_ptr_to_t_struct$_Identity_$742_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // email\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // dob\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // wallet\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // certificationIDs\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Identity_$742_memory_ptr__to_t_struct$_Identity_$742_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Identity_$742_memory_ptr_to_t_struct$_Identity_$742_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Provided SSID does not match the\")\n\n        mstore(add(memPtr, 32), \" stored SSID\")\n\n    }\n\n    function abi_encode_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_22439e793ece07bbd243d477067eb58276241567d414f2604a5c98234b04725d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Identity\")\n\n    }\n\n    function abi_encode_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3915ac9b067414582fbd51e5e2fa4653ae1ae34ea6e4b1fbe1d612bf90c41df1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060043610620000525760003560e01c8063584f09b0146200005757806385e3f05814620000775780638ef761eb14620000ad5780639f06c39514620000cd575b600080fd5b6200007560048036038101906200006f919062000944565b62000103565b005b6200009560048036038101906200008f9190620009de565b62000254565b604051620000a4919062000c4f565b60405180910390f35b620000cb6004803603810190620000c5919062000cb0565b620004f5565b005b620000eb6004803603810190620000e59190620009de565b62000640565b604051620000fa919062000d52565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090504281600001819055508381600101908162000161919062000fa5565b508281600201908162000175919062000fa5565b50818160030181905550336040516200018e9062000739565b6200019a91906200109d565b604051809103906000f080158015620001b7573d6000803e3d6000fd5b508160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fe8d47b56e8cdfa95f871b19d4f50a857217c44a95502b0811a350fec1500dd678260000154604051620002469190620010cb565b60405180910390a250505050565b6200025e62000747565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052908160008201548152602001600182018054620002c59062000d9e565b80601f0160208091040260200160405190810160405280929190818152602001828054620002f39062000d9e565b8015620003445780601f10620003185761010080835404028352916020019162000344565b820191906000526020600020905b8154815290600101906020018083116200032657829003601f168201915b505050505081526020016002820180546200035f9062000d9e565b80601f01602080910402602001604051908101604052809291908181526020018280546200038d9062000d9e565b8015620003de5780601f10620003b257610100808354040283529160200191620003de565b820191906000526020600020905b815481529060010190602001808311620003c057829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054806020026020016040519081016040528092919081815260200182805480156200049857602002820191906000526020600020905b81548152602001906001019080831162000483575b505050505081525050905082816000015114620004ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e3906200116f565b60405180910390fd5b80915050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508481600001541462000580576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200057790620011e1565b60405180910390fd5b6000429050600060016000838152602001908152602001600020905081816000018190555085816001019081620005b8919062000fa5565b50848160020181905550838160030160006101000a81548160ff0219169083151502179055508260050182908060018154018082558091505060019003906000526020600020016000909190919091505586827fab19da658c28f4ed25fc505084caa0491e995cc05e8f0972e1a239620dfaafba60405160405180910390a350505050505050565b60008060016000848152602001908152602001600020604051806080016040529081600082015481526020016001820180546200067d9062000d9e565b80601f0160208091040260200160405190810160405280929190818152602001828054620006ab9062000d9e565b8015620006fc5780601f10620006d057610100808354040283529160200191620006fc565b820191906000526020600020905b815481529060010190602001808311620006de57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff16151515158152505090508060600151915050919050565b610ac0806200120483390190565b6040518060c0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620007fc82620007b1565b810181811067ffffffffffffffff821117156200081e576200081d620007c2565b5b80604052505050565b60006200083362000793565b9050620008418282620007f1565b919050565b600067ffffffffffffffff821115620008645762000863620007c2565b5b6200086f82620007b1565b9050602081019050919050565b82818337600083830152505050565b6000620008a26200089c8462000846565b62000827565b905082815260208101848484011115620008c157620008c0620007ac565b5b620008ce8482856200087c565b509392505050565b600082601f830112620008ee57620008ed620007a7565b5b8135620009008482602086016200088b565b91505092915050565b6000819050919050565b6200091e8162000909565b81146200092a57600080fd5b50565b6000813590506200093e8162000913565b92915050565b60008060006060848603121562000960576200095f6200079d565b5b600084013567ffffffffffffffff811115620009815762000980620007a2565b5b6200098f86828701620008d6565b935050602084013567ffffffffffffffff811115620009b357620009b2620007a2565b5b620009c186828701620008d6565b9250506040620009d4868287016200092d565b9150509250925092565b600060208284031215620009f757620009f66200079d565b5b600062000a07848285016200092d565b91505092915050565b62000a1b8162000909565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000a5d57808201518184015260208101905062000a40565b60008484015250505050565b600062000a768262000a21565b62000a82818562000a2c565b935062000a9481856020860162000a3d565b62000a9f81620007b1565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000ad78262000aaa565b9050919050565b62000ae98162000aca565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062000b29838362000a10565b60208301905092915050565b6000602082019050919050565b600062000b4f8262000aef565b62000b5b818562000afa565b935062000b688362000b0b565b8060005b8381101562000b9f57815162000b83888262000b1b565b975062000b908362000b35565b92505060018101905062000b6c565b5085935050505092915050565b600060c08301600083015162000bc6600086018262000a10565b506020830151848203602086015262000be0828262000a69565b9150506040830151848203604086015262000bfc828262000a69565b915050606083015162000c13606086018262000a10565b50608083015162000c28608086018262000ade565b5060a083015184820360a086015262000c42828262000b42565b9150508091505092915050565b6000602082019050818103600083015262000c6b818462000bac565b905092915050565b60008115159050919050565b62000c8a8162000c73565b811462000c9657600080fd5b50565b60008135905062000caa8162000c7f565b92915050565b6000806000806080858703121562000ccd5762000ccc6200079d565b5b600062000cdd878288016200092d565b945050602085013567ffffffffffffffff81111562000d015762000d00620007a2565b5b62000d0f87828801620008d6565b935050604062000d22878288016200092d565b925050606062000d358782880162000c99565b91505092959194509250565b62000d4c8162000c73565b82525050565b600060208201905062000d69600083018462000d41565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000db757607f821691505b60208210810362000dcd5762000dcc62000d6f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000e377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000df8565b62000e43868362000df8565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000e8662000e8062000e7a8462000909565b62000e5b565b62000909565b9050919050565b6000819050919050565b62000ea28362000e65565b62000eba62000eb18262000e8d565b84845462000e05565b825550505050565b600090565b62000ed162000ec2565b62000ede81848462000e97565b505050565b5b8181101562000f065762000efa60008262000ec7565b60018101905062000ee4565b5050565b601f82111562000f555762000f1f8162000dd3565b62000f2a8462000de8565b8101602085101562000f3a578190505b62000f5262000f498562000de8565b83018262000ee3565b50505b505050565b600082821c905092915050565b600062000f7a6000198460080262000f5a565b1980831691505092915050565b600062000f95838362000f67565b9150826002028217905092915050565b62000fb08262000a21565b67ffffffffffffffff81111562000fcc5762000fcb620007c2565b5b62000fd8825462000d9e565b62000fe582828562000f0a565b600060209050601f8311600181146200101d576000841562001008578287015190505b62001014858262000f87565b86555062001084565b601f1984166200102d8662000dd3565b60005b82811015620010575784890151825560018201915060208501945060208101905062001030565b8683101562001077578489015162001073601f89168262000f67565b8355505b6001600288020188555050505b505050505050565b620010978162000aca565b82525050565b6000602082019050620010b460008301846200108c565b92915050565b620010c58162000909565b82525050565b6000602082019050620010e26000830184620010ba565b92915050565b600082825260208201905092915050565b7f50726f7669646564205353494420646f6573206e6f74206d617463682074686560008201527f2073746f72656420535349440000000000000000000000000000000000000000602082015250565b600062001157602c83620010e8565b91506200116482620010f9565b604082019050919050565b600060208201905081810360008301526200118a8162001148565b9050919050565b7f496e76616c6964204964656e7469747900000000000000000000000000000000600082015250565b6000620011c9601083620010e8565b9150620011d68262001191565b602082019050919050565b60006020820190508181036000830152620011fc81620011ba565b905091905056fe608060405234801561001057600080fd5b50604051610ac0380380610ac0833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6109a9806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063dbba0f0114610059575b600080fd5b610043610075565b60405161005091906104b7565b60405180910390f35b610073600480360381019061006e9190610577565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610627565b60405180910390fd5b61015783838373ffffffffffffffffffffffffffffffffffffffff1661015c9092919063ffffffff16565b505050565b6101dd8363a9059cbb60e01b848460405160240161017b929190610656565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506101e2565b505050565b6000610244826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166102a99092919063ffffffff16565b90506000815111156102a4578080602001905181019061026491906106b7565b6102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610756565b60405180910390fd5b5b505050565b60606102b884846000856102c1565b90509392505050565b606082471015610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd906107e8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161032f9190610879565b60006040518083038185875af1925050503d806000811461036c576040519150601f19603f3d011682016040523d82523d6000602084013e610371565b606091505b50915091506103828783838761038e565b92505050949350505050565b606083156103f05760008351036103e8576103a885610403565b6103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de906108dc565b60405180910390fd5b5b8290506103fb565b6103fa8383610426565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156104395781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d9190610951565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a182610476565b9050919050565b6104b181610496565b82525050565b60006020820190506104cc60008301846104a8565b92915050565b600080fd5b6104e081610496565b81146104eb57600080fd5b50565b6000813590506104fd816104d7565b92915050565b6000819050919050565b61051681610503565b811461052157600080fd5b50565b6000813590506105338161050d565b92915050565b600061054482610496565b9050919050565b61055481610539565b811461055f57600080fd5b50565b6000813590506105718161054b565b92915050565b6000806000606084860312156105905761058f6104d2565b5b600061059e868287016104ee565b93505060206105af86828701610524565b92505060406105c086828701610562565b9150509250925092565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572000000000000000000600082015250565b60006106116017836105ca565b915061061c826105db565b602082019050919050565b6000602082019050818103600083015261064081610604565b9050919050565b61065081610503565b82525050565b600060408201905061066b60008301856104a8565b6106786020830184610647565b9392505050565b60008115159050919050565b6106948161067f565b811461069f57600080fd5b50565b6000815190506106b18161068b565b92915050565b6000602082840312156106cd576106cc6104d2565b5b60006106db848285016106a2565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610740602a836105ca565b915061074b826106e4565b604082019050919050565b6000602082019050818103600083015261076f81610733565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006107d26026836105ca565b91506107dd82610776565b604082019050919050565b60006020820190508181036000830152610801816107c5565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561083c578082015181840152602081019050610821565b60008484015250505050565b600061085382610808565b61085d8185610813565b935061086d81856020860161081e565b80840191505092915050565b60006108858284610848565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006108c6601d836105ca565b91506108d182610890565b602082019050919050565b600060208201905081810360008301526108f5816108b9565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610923826108fc565b61092d81856105ca565b935061093d81856020860161081e565b61094681610907565b840191505092915050565b6000602082019050818103600083015261096b8184610918565b90509291505056fea264697066735822122035f92815476344f4f490bc949c278dd3a5817452e439ae86b15c8e442a276abc64736f6c63430008120033a2646970667358221220db2b7cbf30ffddb940e0d63ed165fb726ca3ff29661ea5537c74297aa9220ffa64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x52 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x584F09B0 EQ PUSH3 0x57 JUMPI DUP1 PUSH4 0x85E3F058 EQ PUSH3 0x77 JUMPI DUP1 PUSH4 0x8EF761EB EQ PUSH3 0xAD JUMPI DUP1 PUSH4 0x9F06C395 EQ PUSH3 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6F SWAP2 SWAP1 PUSH3 0x944 JUMP JUMPDEST PUSH3 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x9DE JUMP JUMPDEST PUSH3 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0xC4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0xCB0 JUMP JUMPDEST PUSH3 0x4F5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xE5 SWAP2 SWAP1 PUSH3 0x9DE JUMP JUMPDEST PUSH3 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xFA SWAP2 SWAP1 PUSH3 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP TIMESTAMP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH3 0x161 SWAP2 SWAP1 PUSH3 0xFA5 JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH3 0x175 SWAP2 SWAP1 PUSH3 0xFA5 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x40 MLOAD PUSH3 0x18E SWAP1 PUSH3 0x739 JUMP JUMPDEST PUSH3 0x19A SWAP2 SWAP1 PUSH3 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8D47B56E8CDFA95F871B19D4F50A857217C44A95502B0811A350FEC1500DD67 DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x246 SWAP2 SWAP1 PUSH3 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH3 0x25E PUSH3 0x747 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH3 0x2C5 SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x2F3 SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x344 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x318 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x344 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x326 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH3 0x35F SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x38D SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x3B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x3C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x498 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x483 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD MLOAD EQ PUSH3 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4E3 SWAP1 PUSH3 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD SLOAD EQ PUSH3 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x577 SWAP1 PUSH3 0x11E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH3 0x5B8 SWAP2 SWAP1 PUSH3 0xFA5 JUMP JUMPDEST POP DUP5 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP7 DUP3 PUSH32 0xAB19DA658C28F4ED25FC505084CAA0491E995CC05E8F0972E1A239620DFAAFBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH3 0x67D SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0x6AB SWAP1 PUSH3 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH3 0x6FC JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x6FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC0 DUP1 PUSH3 0x1204 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x7FC DUP3 PUSH3 0x7B1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x81E JUMPI PUSH3 0x81D PUSH3 0x7C2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x833 PUSH3 0x793 JUMP JUMPDEST SWAP1 POP PUSH3 0x841 DUP3 DUP3 PUSH3 0x7F1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x864 JUMPI PUSH3 0x863 PUSH3 0x7C2 JUMP JUMPDEST JUMPDEST PUSH3 0x86F DUP3 PUSH3 0x7B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8A2 PUSH3 0x89C DUP5 PUSH3 0x846 JUMP JUMPDEST PUSH3 0x827 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x8C1 JUMPI PUSH3 0x8C0 PUSH3 0x7AC JUMP JUMPDEST JUMPDEST PUSH3 0x8CE DUP5 DUP3 DUP6 PUSH3 0x87C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8EE JUMPI PUSH3 0x8ED PUSH3 0x7A7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH3 0x900 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x88B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x91E DUP2 PUSH3 0x909 JUMP JUMPDEST DUP2 EQ PUSH3 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x93E DUP2 PUSH3 0x913 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x960 JUMPI PUSH3 0x95F PUSH3 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x981 JUMPI PUSH3 0x980 PUSH3 0x7A2 JUMP JUMPDEST JUMPDEST PUSH3 0x98F DUP7 DUP3 DUP8 ADD PUSH3 0x8D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x9B3 JUMPI PUSH3 0x9B2 PUSH3 0x7A2 JUMP JUMPDEST JUMPDEST PUSH3 0x9C1 DUP7 DUP3 DUP8 ADD PUSH3 0x8D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x9D4 DUP7 DUP3 DUP8 ADD PUSH3 0x92D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x9F7 JUMPI PUSH3 0x9F6 PUSH3 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xA07 DUP5 DUP3 DUP6 ADD PUSH3 0x92D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA1B DUP2 PUSH3 0x909 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xA5D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA40 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA76 DUP3 PUSH3 0xA21 JUMP JUMPDEST PUSH3 0xA82 DUP2 DUP6 PUSH3 0xA2C JUMP JUMPDEST SWAP4 POP PUSH3 0xA94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xA3D JUMP JUMPDEST PUSH3 0xA9F DUP2 PUSH3 0x7B1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAD7 DUP3 PUSH3 0xAAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAE9 DUP2 PUSH3 0xACA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB29 DUP4 DUP4 PUSH3 0xA10 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB4F DUP3 PUSH3 0xAEF JUMP JUMPDEST PUSH3 0xB5B DUP2 DUP6 PUSH3 0xAFA JUMP JUMPDEST SWAP4 POP PUSH3 0xB68 DUP4 PUSH3 0xB0B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB9F JUMPI DUP2 MLOAD PUSH3 0xB83 DUP9 DUP3 PUSH3 0xB1B JUMP JUMPDEST SWAP8 POP PUSH3 0xB90 DUP4 PUSH3 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xB6C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH3 0xBC6 PUSH1 0x0 DUP7 ADD DUP3 PUSH3 0xA10 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH3 0xBE0 DUP3 DUP3 PUSH3 0xA69 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH3 0xBFC DUP3 DUP3 PUSH3 0xA69 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH3 0xC13 PUSH1 0x60 DUP7 ADD DUP3 PUSH3 0xA10 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH3 0xC28 PUSH1 0x80 DUP7 ADD DUP3 PUSH3 0xADE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH3 0xC42 DUP3 DUP3 PUSH3 0xB42 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC6B DUP2 DUP5 PUSH3 0xBAC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC8A DUP2 PUSH3 0xC73 JUMP JUMPDEST DUP2 EQ PUSH3 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0xCAA DUP2 PUSH3 0xC7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0xCCD JUMPI PUSH3 0xCCC PUSH3 0x79D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xCDD DUP8 DUP3 DUP9 ADD PUSH3 0x92D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xD01 JUMPI PUSH3 0xD00 PUSH3 0x7A2 JUMP JUMPDEST JUMPDEST PUSH3 0xD0F DUP8 DUP3 DUP9 ADD PUSH3 0x8D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0xD22 DUP8 DUP3 DUP9 ADD PUSH3 0x92D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0xD35 DUP8 DUP3 DUP9 ADD PUSH3 0xC99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0xD4C DUP2 PUSH3 0xC73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD69 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xD41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xDB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xDCD JUMPI PUSH3 0xDCC PUSH3 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xE37 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xDF8 JUMP JUMPDEST PUSH3 0xE43 DUP7 DUP4 PUSH3 0xDF8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE86 PUSH3 0xE80 PUSH3 0xE7A DUP5 PUSH3 0x909 JUMP JUMPDEST PUSH3 0xE5B JUMP JUMPDEST PUSH3 0x909 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xEA2 DUP4 PUSH3 0xE65 JUMP JUMPDEST PUSH3 0xEBA PUSH3 0xEB1 DUP3 PUSH3 0xE8D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xE05 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xED1 PUSH3 0xEC2 JUMP JUMPDEST PUSH3 0xEDE DUP2 DUP5 DUP5 PUSH3 0xE97 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xF06 JUMPI PUSH3 0xEFA PUSH1 0x0 DUP3 PUSH3 0xEC7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xEE4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xF55 JUMPI PUSH3 0xF1F DUP2 PUSH3 0xDD3 JUMP JUMPDEST PUSH3 0xF2A DUP5 PUSH3 0xDE8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xF3A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xF52 PUSH3 0xF49 DUP6 PUSH3 0xDE8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xEE3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF7A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xF5A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF95 DUP4 DUP4 PUSH3 0xF67 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xFB0 DUP3 PUSH3 0xA21 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xFCC JUMPI PUSH3 0xFCB PUSH3 0x7C2 JUMP JUMPDEST JUMPDEST PUSH3 0xFD8 DUP3 SLOAD PUSH3 0xD9E JUMP JUMPDEST PUSH3 0xFE5 DUP3 DUP3 DUP6 PUSH3 0xF0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x101D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1008 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x1014 DUP6 DUP3 PUSH3 0xF87 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x1084 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x102D DUP7 PUSH3 0xDD3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1057 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1030 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x1077 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x1073 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xF67 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x1097 DUP2 PUSH3 0xACA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x10B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x108C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x10C5 DUP2 PUSH3 0x909 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x10E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x10BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F7669646564205353494420646F6573206E6F74206D6174636820746865 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2073746F72656420535349440000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1157 PUSH1 0x2C DUP4 PUSH3 0x10E8 JUMP JUMPDEST SWAP2 POP PUSH3 0x1164 DUP3 PUSH3 0x10F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x118A DUP2 PUSH3 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204964656E7469747900000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11C9 PUSH1 0x10 DUP4 PUSH3 0x10E8 JUMP JUMPDEST SWAP2 POP PUSH3 0x11D6 DUP3 PUSH3 0x1191 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x11FC DUP2 PUSH3 0x11BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAC0 CODESIZE SUB DUP1 PUSH2 0xAC0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A9 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDBBA0F01 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x157 DUP4 DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17B SWAP3 SWAP2 SWAP1 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2A4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A SWAP1 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x371 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x382 DUP8 DUP4 DUP4 DUP8 PUSH2 0x38E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x3E8 JUMPI PUSH2 0x3A8 DUP6 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x3FA DUP4 DUP4 PUSH2 0x426 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x439 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP3 PUSH2 0x476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B1 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E0 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP2 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FD DUP2 PUSH2 0x4D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP2 EQ PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x533 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x544 DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x539 JUMP JUMPDEST DUP2 EQ PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x571 DUP2 PUSH2 0x54B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59E DUP7 DUP3 DUP8 ADD PUSH2 0x4EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5AF DUP7 DUP3 DUP8 ADD PUSH2 0x524 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5C0 DUP7 DUP3 DUP8 ADD PUSH2 0x562 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x611 PUSH1 0x17 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x61C DUP3 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x640 DUP2 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x650 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x66B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x678 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B1 DUP2 PUSH2 0x68B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP5 DUP3 DUP6 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 PUSH1 0x2A DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x74B DUP3 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x76F DUP2 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH1 0x26 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP3 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x801 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x853 DUP3 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x85D DUP2 DUP6 PUSH2 0x813 JUMP JUMPDEST SWAP4 POP PUSH2 0x86D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP3 DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH1 0x1D DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x8D1 DUP3 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F5 DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x923 DUP3 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x92D DUP2 DUP6 PUSH2 0x5CA JUMP JUMPDEST SWAP4 POP PUSH2 0x93D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST PUSH2 0x946 DUP2 PUSH2 0x907 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96B DUP2 DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xF9 0x28 ISZERO SELFBALANCE PUSH4 0x44F4F490 0xBC SWAP5 SWAP13 0x27 DUP14 0xD3 0xA5 DUP2 PUSH21 0x52E439AE86B15C8E442A276ABC64736F6C63430008 SLT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0x2B PUSH29 0xBF30FFDDB940E0D63ED165FB726CA3FF29661EA5537C74297AA9220FFA PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"181:2228:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2127:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1212:698;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1916:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;780:426;884:28;915:10;:22;926:10;915:22;;;;;;;;;;;;;;;884:53;;964:15;947:11;:14;;:32;;;;1008:4;989:11;:16;;:23;;;;;;:::i;:::-;;1042:5;1022:11;:17;;:25;;;;;;:::i;:::-;;1075:3;1057:11;:15;;:21;;;;1128:10;1117:22;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1088:11;:18;;;:52;;;;;;;;;;;;;;;;;;1172:10;1156:43;;;1184:11;:14;;;1156:43;;;;;;:::i;:::-;;;;;;;;865:341;780:426;;;:::o;2127:280::-;2189:15;;:::i;:::-;2216:30;2249:10;:22;2260:10;2249:22;;;;;;;;;;;;;;;2216:55;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:10;2289:14;:17;;;:31;2281:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2386:14;2379:21;;;2127:280;;;:::o;1212:698::-;1369:25;1397:10;:22;1408:10;1397:22;;;;;;;;;;;;;;;1369:50;;1452:10;1437:8;:11;;;:25;1429:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1494:23;1520:15;1494:41;;1545:35;1583:14;:31;1598:15;1583:31;;;;;;;;;;;1545:69;;1643:15;1624:13;:16;;:34;;;;1689:4;1668:13;:18;;:25;;;;;;:::i;:::-;;1729:9;1703:13;:23;;:35;;;;1773:8;1748:13;:22;;;:33;;;;;;;;;;;;;;;;;;1792:8;:25;;1823:15;1792:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1892:10;1875:15;1855:48;;;;;;;;;;1359:551;;;1212:698;;;;:::o;1916:205::-;1991:4;2007:34;2044:14;:31;2059:15;2044:31;;;;;;;;;;;2007:68;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2092:13;:22;;;2085:29;;;1916:205;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:77::-;2590:7;2619:5;2608:16;;2553:77;;;:::o;2636:122::-;2709:24;2727:5;2709:24;:::i;:::-;2702:5;2699:35;2689:63;;2748:1;2745;2738:12;2689:63;2636:122;:::o;2764:139::-;2810:5;2848:6;2835:20;2826:29;;2864:33;2891:5;2864:33;:::i;:::-;2764:139;;;;:::o;2909:979::-;3006:6;3014;3022;3071:2;3059:9;3050:7;3046:23;3042:32;3039:119;;;3077:79;;:::i;:::-;3039:119;3225:1;3214:9;3210:17;3197:31;3255:18;3247:6;3244:30;3241:117;;;3277:79;;:::i;:::-;3241:117;3382:63;3437:7;3428:6;3417:9;3413:22;3382:63;:::i;:::-;3372:73;;3168:287;3522:2;3511:9;3507:18;3494:32;3553:18;3545:6;3542:30;3539:117;;;3575:79;;:::i;:::-;3539:117;3680:63;3735:7;3726:6;3715:9;3711:22;3680:63;:::i;:::-;3670:73;;3465:288;3792:2;3818:53;3863:7;3854:6;3843:9;3839:22;3818:53;:::i;:::-;3808:63;;3763:118;2909:979;;;;;:::o;3894:329::-;3953:6;4002:2;3990:9;3981:7;3977:23;3973:32;3970:119;;;4008:79;;:::i;:::-;3970:119;4128:1;4153:53;4198:7;4189:6;4178:9;4174:22;4153:53;:::i;:::-;4143:63;;4099:117;3894:329;;;;:::o;4229:108::-;4306:24;4324:5;4306:24;:::i;:::-;4301:3;4294:37;4229:108;;:::o;4343:99::-;4395:6;4429:5;4423:12;4413:22;;4343:99;;;:::o;4448:159::-;4522:11;4556:6;4551:3;4544:19;4596:4;4591:3;4587:14;4572:29;;4448:159;;;;:::o;4613:246::-;4694:1;4704:113;4718:6;4715:1;4712:13;4704:113;;;4803:1;4798:3;4794:11;4788:18;4784:1;4779:3;4775:11;4768:39;4740:2;4737:1;4733:10;4728:15;;4704:113;;;4851:1;4842:6;4837:3;4833:16;4826:27;4675:184;4613:246;;;:::o;4865:357::-;4943:3;4971:39;5004:5;4971:39;:::i;:::-;5026:61;5080:6;5075:3;5026:61;:::i;:::-;5019:68;;5096:65;5154:6;5149:3;5142:4;5135:5;5131:16;5096:65;:::i;:::-;5186:29;5208:6;5186:29;:::i;:::-;5181:3;5177:39;5170:46;;4947:275;4865:357;;;;:::o;5228:126::-;5265:7;5305:42;5298:5;5294:54;5283:65;;5228:126;;;:::o;5360:96::-;5397:7;5426:24;5444:5;5426:24;:::i;:::-;5415:35;;5360:96;;;:::o;5462:108::-;5539:24;5557:5;5539:24;:::i;:::-;5534:3;5527:37;5462:108;;:::o;5576:114::-;5643:6;5677:5;5671:12;5661:22;;5576:114;;;:::o;5696:174::-;5785:11;5819:6;5814:3;5807:19;5859:4;5854:3;5850:14;5835:29;;5696:174;;;;:::o;5876:132::-;5943:4;5966:3;5958:11;;5996:4;5991:3;5987:14;5979:22;;5876:132;;;:::o;6014:179::-;6083:10;6104:46;6146:3;6138:6;6104:46;:::i;:::-;6182:4;6177:3;6173:14;6159:28;;6014:179;;;;:::o;6199:113::-;6269:4;6301;6296:3;6292:14;6284:22;;6199:113;;;:::o;6348:712::-;6457:3;6486:54;6534:5;6486:54;:::i;:::-;6556:76;6625:6;6620:3;6556:76;:::i;:::-;6549:83;;6656:56;6706:5;6656:56;:::i;:::-;6735:7;6766:1;6751:284;6776:6;6773:1;6770:13;6751:284;;;6852:6;6846:13;6879:63;6938:3;6923:13;6879:63;:::i;:::-;6872:70;;6965:60;7018:6;6965:60;:::i;:::-;6955:70;;6811:224;6798:1;6795;6791:9;6786:14;;6751:284;;;6755:14;7051:3;7044:10;;6462:598;;;6348:712;;;;:::o;7138:1486::-;7257:3;7293:4;7288:3;7284:14;7378:4;7371:5;7367:16;7361:23;7397:63;7454:4;7449:3;7445:14;7431:12;7397:63;:::i;:::-;7308:162;7552:4;7545:5;7541:16;7535:23;7605:3;7599:4;7595:14;7588:4;7583:3;7579:14;7572:38;7631:73;7699:4;7685:12;7631:73;:::i;:::-;7623:81;;7480:235;7798:4;7791:5;7787:16;7781:23;7851:3;7845:4;7841:14;7834:4;7829:3;7825:14;7818:38;7877:73;7945:4;7931:12;7877:73;:::i;:::-;7869:81;;7725:236;8042:4;8035:5;8031:16;8025:23;8061:63;8118:4;8113:3;8109:14;8095:12;8061:63;:::i;:::-;7971:163;8218:4;8211:5;8207:16;8201:23;8237:63;8294:4;8289:3;8285:14;8271:12;8237:63;:::i;:::-;8144:166;8404:4;8397:5;8393:16;8387:23;8457:3;8451:4;8447:14;8440:4;8435:3;8431:14;8424:38;8483:103;8581:4;8567:12;8483:103;:::i;:::-;8475:111;;8320:277;8614:4;8607:11;;7262:1362;7138:1486;;;;:::o;8630:373::-;8773:4;8811:2;8800:9;8796:18;8788:26;;8860:9;8854:4;8850:20;8846:1;8835:9;8831:17;8824:47;8888:108;8991:4;8982:6;8888:108;:::i;:::-;8880:116;;8630:373;;;;:::o;9009:90::-;9043:7;9086:5;9079:13;9072:21;9061:32;;9009:90;;;:::o;9105:116::-;9175:21;9190:5;9175:21;:::i;:::-;9168:5;9165:32;9155:60;;9211:1;9208;9201:12;9155:60;9105:116;:::o;9227:133::-;9270:5;9308:6;9295:20;9286:29;;9324:30;9348:5;9324:30;:::i;:::-;9227:133;;;;:::o;9366:939::-;9459:6;9467;9475;9483;9532:3;9520:9;9511:7;9507:23;9503:33;9500:120;;;9539:79;;:::i;:::-;9500:120;9659:1;9684:53;9729:7;9720:6;9709:9;9705:22;9684:53;:::i;:::-;9674:63;;9630:117;9814:2;9803:9;9799:18;9786:32;9845:18;9837:6;9834:30;9831:117;;;9867:79;;:::i;:::-;9831:117;9972:63;10027:7;10018:6;10007:9;10003:22;9972:63;:::i;:::-;9962:73;;9757:288;10084:2;10110:53;10155:7;10146:6;10135:9;10131:22;10110:53;:::i;:::-;10100:63;;10055:118;10212:2;10238:50;10280:7;10271:6;10260:9;10256:22;10238:50;:::i;:::-;10228:60;;10183:115;9366:939;;;;;;;:::o;10311:109::-;10392:21;10407:5;10392:21;:::i;:::-;10387:3;10380:34;10311:109;;:::o;10426:210::-;10513:4;10551:2;10540:9;10536:18;10528:26;;10564:65;10626:1;10615:9;10611:17;10602:6;10564:65;:::i;:::-;10426:210;;;;:::o;10642:180::-;10690:77;10687:1;10680:88;10787:4;10784:1;10777:15;10811:4;10808:1;10801:15;10828:320;10872:6;10909:1;10903:4;10899:12;10889:22;;10956:1;10950:4;10946:12;10977:18;10967:81;;11033:4;11025:6;11021:17;11011:27;;10967:81;11095:2;11087:6;11084:14;11064:18;11061:38;11058:84;;11114:18;;:::i;:::-;11058:84;10879:269;10828:320;;;:::o;11154:141::-;11203:4;11226:3;11218:11;;11249:3;11246:1;11239:14;11283:4;11280:1;11270:18;11262:26;;11154:141;;;:::o;11301:93::-;11338:6;11385:2;11380;11373:5;11369:14;11365:23;11355:33;;11301:93;;;:::o;11400:107::-;11444:8;11494:5;11488:4;11484:16;11463:37;;11400:107;;;;:::o;11513:393::-;11582:6;11632:1;11620:10;11616:18;11655:97;11685:66;11674:9;11655:97;:::i;:::-;11773:39;11803:8;11792:9;11773:39;:::i;:::-;11761:51;;11845:4;11841:9;11834:5;11830:21;11821:30;;11894:4;11884:8;11880:19;11873:5;11870:30;11860:40;;11589:317;;11513:393;;;;;:::o;11912:60::-;11940:3;11961:5;11954:12;;11912:60;;;:::o;11978:142::-;12028:9;12061:53;12079:34;12088:24;12106:5;12088:24;:::i;:::-;12079:34;:::i;:::-;12061:53;:::i;:::-;12048:66;;11978:142;;;:::o;12126:75::-;12169:3;12190:5;12183:12;;12126:75;;;:::o;12207:269::-;12317:39;12348:7;12317:39;:::i;:::-;12378:91;12427:41;12451:16;12427:41;:::i;:::-;12419:6;12412:4;12406:11;12378:91;:::i;:::-;12372:4;12365:105;12283:193;12207:269;;;:::o;12482:73::-;12527:3;12482:73;:::o;12561:189::-;12638:32;;:::i;:::-;12679:65;12737:6;12729;12723:4;12679:65;:::i;:::-;12614:136;12561:189;;:::o;12756:186::-;12816:120;12833:3;12826:5;12823:14;12816:120;;;12887:39;12924:1;12917:5;12887:39;:::i;:::-;12860:1;12853:5;12849:13;12840:22;;12816:120;;;12756:186;;:::o;12948:543::-;13049:2;13044:3;13041:11;13038:446;;;13083:38;13115:5;13083:38;:::i;:::-;13167:29;13185:10;13167:29;:::i;:::-;13157:8;13153:44;13350:2;13338:10;13335:18;13332:49;;;13371:8;13356:23;;13332:49;13394:80;13450:22;13468:3;13450:22;:::i;:::-;13440:8;13436:37;13423:11;13394:80;:::i;:::-;13053:431;;13038:446;12948:543;;;:::o;13497:117::-;13551:8;13601:5;13595:4;13591:16;13570:37;;13497:117;;;;:::o;13620:169::-;13664:6;13697:51;13745:1;13741:6;13733:5;13730:1;13726:13;13697:51;:::i;:::-;13693:56;13778:4;13772;13768:15;13758:25;;13671:118;13620:169;;;;:::o;13794:295::-;13870:4;14016:29;14041:3;14035:4;14016:29;:::i;:::-;14008:37;;14078:3;14075:1;14071:11;14065:4;14062:21;14054:29;;13794:295;;;;:::o;14094:1395::-;14211:37;14244:3;14211:37;:::i;:::-;14313:18;14305:6;14302:30;14299:56;;;14335:18;;:::i;:::-;14299:56;14379:38;14411:4;14405:11;14379:38;:::i;:::-;14464:67;14524:6;14516;14510:4;14464:67;:::i;:::-;14558:1;14582:4;14569:17;;14614:2;14606:6;14603:14;14631:1;14626:618;;;;15288:1;15305:6;15302:77;;;15354:9;15349:3;15345:19;15339:26;15330:35;;15302:77;15405:67;15465:6;15458:5;15405:67;:::i;:::-;15399:4;15392:81;15261:222;14596:887;;14626:618;14678:4;14674:9;14666:6;14662:22;14712:37;14744:4;14712:37;:::i;:::-;14771:1;14785:208;14799:7;14796:1;14793:14;14785:208;;;14878:9;14873:3;14869:19;14863:26;14855:6;14848:42;14929:1;14921:6;14917:14;14907:24;;14976:2;14965:9;14961:18;14948:31;;14822:4;14819:1;14815:12;14810:17;;14785:208;;;15021:6;15012:7;15009:19;15006:179;;;15079:9;15074:3;15070:19;15064:26;15122:48;15164:4;15156:6;15152:17;15141:9;15122:48;:::i;:::-;15114:6;15107:64;15029:156;15006:179;15231:1;15227;15219:6;15215:14;15211:22;15205:4;15198:36;14633:611;;;14596:887;;14186:1303;;;14094:1395;;:::o;15495:118::-;15582:24;15600:5;15582:24;:::i;:::-;15577:3;15570:37;15495:118;;:::o;15619:222::-;15712:4;15750:2;15739:9;15735:18;15727:26;;15763:71;15831:1;15820:9;15816:17;15807:6;15763:71;:::i;:::-;15619:222;;;;:::o;15847:118::-;15934:24;15952:5;15934:24;:::i;:::-;15929:3;15922:37;15847:118;;:::o;15971:222::-;16064:4;16102:2;16091:9;16087:18;16079:26;;16115:71;16183:1;16172:9;16168:17;16159:6;16115:71;:::i;:::-;15971:222;;;;:::o;16199:169::-;16283:11;16317:6;16312:3;16305:19;16357:4;16352:3;16348:14;16333:29;;16199:169;;;;:::o;16374:231::-;16514:34;16510:1;16502:6;16498:14;16491:58;16583:14;16578:2;16570:6;16566:15;16559:39;16374:231;:::o;16611:366::-;16753:3;16774:67;16838:2;16833:3;16774:67;:::i;:::-;16767:74;;16850:93;16939:3;16850:93;:::i;:::-;16968:2;16963:3;16959:12;16952:19;;16611:366;;;:::o;16983:419::-;17149:4;17187:2;17176:9;17172:18;17164:26;;17236:9;17230:4;17226:20;17222:1;17211:9;17207:17;17200:47;17264:131;17390:4;17264:131;:::i;:::-;17256:139;;16983:419;;;:::o;17408:166::-;17548:18;17544:1;17536:6;17532:14;17525:42;17408:166;:::o;17580:366::-;17722:3;17743:67;17807:2;17802:3;17743:67;:::i;:::-;17736:74;;17819:93;17908:3;17819:93;:::i;:::-;17937:2;17932:3;17928:12;17921:19;;17580:366;;;:::o;17952:419::-;18118:4;18156:2;18145:9;18141:18;18133:26;;18205:9;18199:4;18195:20;18191:1;18180:9;18176:17;18169:47;18233:131;18359:4;18233:131;:::i;:::-;18225:139;;17952:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1483400","executionCost":"1548","totalCost":"1484948"},"external":{"createIdentity(string,string,uint256)":"infinite","getIdentity(uint256)":"infinite","issueCertification(uint256,string,uint256,bool)":"infinite","verifyCertification(uint256)":"infinite"}},"methodIdentifiers":{"createIdentity(string,string,uint256)":"584f09b0","getIdentity(uint256)":"85e3f058","issueCertification(uint256,string,uint256,bool)":"8ef761eb","verifyCertification(uint256)":"9f06c395"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"certificationID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"identityID\",\"type\":\"uint256\"}],\"name\":\"CertificationIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"IdentityCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dob\",\"type\":\"uint256\"}],\"name\":\"createIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"providedId\",\"type\":\"uint256\"}],\"name\":\"getIdentity\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dob\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"certificationIDs\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SSIDWithWallet.Identity\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"identityID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"issueCertification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"certificationID\",\"type\":\"uint256\"}],\"name\":\"verifyCertification\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SSIDWithWallet.sol\":\"SSIDWithWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/SSIDWithWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract SSIDWithWallet {\\n    struct Identity {\\n        uint256 id;\\n        string name;\\n        string email;\\n        uint256 dob;\\n        address wallet;\\n        uint256[] certificationIDs;\\n    }\\n\\n    struct Certification {\\n        uint256 id;\\n        string name;\\n        uint256 issueDate;\\n        bool verified;\\n    }\\n\\n    mapping(address => Identity) private identities;\\n    mapping(uint256 => Certification) private certifications;\\n\\n    event IdentityCreated(address indexed owner, uint256 id);\\n    event CertificationIssued(uint256 indexed certificationID, uint256 indexed identityID);\\n\\n    function createIdentity(string memory name, string memory email, uint256 dob) public {\\n        \\n        Identity storage newIdentity = identities[msg.sender];\\n        newIdentity.id = block.timestamp;\\n        newIdentity.name = name;\\n        newIdentity.email = email;\\n        newIdentity.dob = dob;\\n        newIdentity.wallet = address(new Wallet(msg.sender));\\n\\n        emit IdentityCreated(msg.sender, newIdentity.id);\\n    }\\n\\n    function issueCertification(\\n        uint256 identityID,\\n        string memory name,\\n        uint256 issueDate,\\n        bool verified\\n    ) public {\\n        Identity storage identity = identities[msg.sender];\\n        require(identity.id == identityID, \\\"Invalid Identity\\\");\\n\\n        uint256 certificationID = block.timestamp;\\n        Certification storage certification = certifications[certificationID];\\n        certification.id = certificationID;\\n        certification.name = name;\\n        certification.issueDate = issueDate;\\n        certification.verified = verified;\\n\\n        identity.certificationIDs.push(certificationID);\\n\\n        emit CertificationIssued(certificationID, identityID);\\n    }\\n\\n    function verifyCertification(uint256 certificationID) public view returns (bool) {\\n        Certification memory certification = certifications[certificationID];\\n        return certification.verified;\\n    }\\n\\n    function getIdentity(uint256 providedId) public view returns (Identity memory) {\\n        Identity memory storedIdentity = identities[msg.sender];\\n        require(storedIdentity.id == providedId, \\\"Provided SSID does not match the stored SSID\\\");\\n        return storedIdentity;\\n    }\\n}\\n\\ncontract Wallet {\\n    using SafeERC20 for IERC20;\\n\\n    address private owner;\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n    }\\n\\n    function transfer(address to, uint256 amount, IERC20 token) external {\\n        require(msg.sender == owner, \\\"Only owner can transfer\\\");\\n        token.safeTransfer(to, amount);\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return owner;\\n    }\\n}\\n\",\"keccak256\":\"0xff849fa7722716d0ccd881d062bea717c750c9097fb1ba24f1b3ca0769aa89f7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":756,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"identities","offset":0,"slot":"0","type":"t_mapping(t_address,t_struct(Identity)742_storage)"},{"astId":761,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"certifications","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_struct(Certification)751_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_struct(Identity)742_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct SSIDWithWallet.Identity)","numberOfBytes":"32","value":"t_struct(Identity)742_storage"},"t_mapping(t_uint256,t_struct(Certification)751_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SSIDWithWallet.Certification)","numberOfBytes":"32","value":"t_struct(Certification)751_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Certification)751_storage":{"encoding":"inplace","label":"struct SSIDWithWallet.Certification","members":[{"astId":744,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":746,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":748,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"issueDate","offset":0,"slot":"2","type":"t_uint256"},{"astId":750,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"verified","offset":0,"slot":"3","type":"t_bool"}],"numberOfBytes":"128"},"t_struct(Identity)742_storage":{"encoding":"inplace","label":"struct SSIDWithWallet.Identity","members":[{"astId":730,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":732,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":734,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"email","offset":0,"slot":"2","type":"t_string_storage"},{"astId":736,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"dob","offset":0,"slot":"3","type":"t_uint256"},{"astId":738,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"wallet","offset":0,"slot":"4","type":"t_address"},{"astId":741,"contract":"contracts/SSIDWithWallet.sol:SSIDWithWallet","label":"certificationIDs","offset":0,"slot":"5","type":"t_array(t_uint256)dyn_storage"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}},"Wallet":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_976":{"entryPoint":null,"id":976,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":198,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":219,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":157,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":125,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":120,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":175,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:5","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:5","statements":[{"nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:5"},"nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:5"},"nodeType":"YulFunctionCall","src":"187:12:5"},"nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:5"},"nodeType":"YulFunctionCall","src":"310:12:5"},"nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nodeType":"YulBlock","src":"379:81:5","statements":[{"nodeType":"YulAssignment","src":"389:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:5"},"nodeType":"YulFunctionCall","src":"400:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:5","type":""}],"src":"334:126:5"},{"body":{"nodeType":"YulBlock","src":"511:51:5","statements":[{"nodeType":"YulAssignment","src":"521:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:5"},"nodeType":"YulFunctionCall","src":"532:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:5","type":""}],"src":"466:96:5"},{"body":{"nodeType":"YulBlock","src":"611:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:5"},"nodeType":"YulFunctionCall","src":"670:12:5"},"nodeType":"YulExpressionStatement","src":"670:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:5"},"nodeType":"YulFunctionCall","src":"641:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:5"},"nodeType":"YulFunctionCall","src":"631:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:5"},"nodeType":"YulFunctionCall","src":"624:43:5"},"nodeType":"YulIf","src":"621:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:5","type":""}],"src":"568:122:5"},{"body":{"nodeType":"YulBlock","src":"759:80:5","statements":[{"nodeType":"YulAssignment","src":"769:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:5"},"nodeType":"YulFunctionCall","src":"778:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:5"},"nodeType":"YulFunctionCall","src":"800:33:5"},"nodeType":"YulExpressionStatement","src":"800:33:5"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:5","type":""}],"src":"696:143:5"},{"body":{"nodeType":"YulBlock","src":"922:274:5","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:5"},"nodeType":"YulFunctionCall","src":"970:79:5"},"nodeType":"YulExpressionStatement","src":"970:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:5"},"nodeType":"YulFunctionCall","src":"939:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:5"},"nodeType":"YulFunctionCall","src":"935:32:5"},"nodeType":"YulIf","src":"932:119:5"},{"nodeType":"YulBlock","src":"1061:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:5"},"nodeType":"YulFunctionCall","src":"1147:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:5"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:5"},"nodeType":"YulFunctionCall","src":"1115:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:5"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:5","type":""}],"src":"845:351:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610ac0380380610ac0833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6109a9806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063dbba0f0114610059575b600080fd5b610043610075565b60405161005091906104b7565b60405180910390f35b610073600480360381019061006e9190610577565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610627565b60405180910390fd5b61015783838373ffffffffffffffffffffffffffffffffffffffff1661015c9092919063ffffffff16565b505050565b6101dd8363a9059cbb60e01b848460405160240161017b929190610656565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506101e2565b505050565b6000610244826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166102a99092919063ffffffff16565b90506000815111156102a4578080602001905181019061026491906106b7565b6102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610756565b60405180910390fd5b5b505050565b60606102b884846000856102c1565b90509392505050565b606082471015610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd906107e8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161032f9190610879565b60006040518083038185875af1925050503d806000811461036c576040519150601f19603f3d011682016040523d82523d6000602084013e610371565b606091505b50915091506103828783838761038e565b92505050949350505050565b606083156103f05760008351036103e8576103a885610403565b6103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de906108dc565b60405180910390fd5b5b8290506103fb565b6103fa8383610426565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156104395781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d9190610951565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a182610476565b9050919050565b6104b181610496565b82525050565b60006020820190506104cc60008301846104a8565b92915050565b600080fd5b6104e081610496565b81146104eb57600080fd5b50565b6000813590506104fd816104d7565b92915050565b6000819050919050565b61051681610503565b811461052157600080fd5b50565b6000813590506105338161050d565b92915050565b600061054482610496565b9050919050565b61055481610539565b811461055f57600080fd5b50565b6000813590506105718161054b565b92915050565b6000806000606084860312156105905761058f6104d2565b5b600061059e868287016104ee565b93505060206105af86828701610524565b92505060406105c086828701610562565b9150509250925092565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572000000000000000000600082015250565b60006106116017836105ca565b915061061c826105db565b602082019050919050565b6000602082019050818103600083015261064081610604565b9050919050565b61065081610503565b82525050565b600060408201905061066b60008301856104a8565b6106786020830184610647565b9392505050565b60008115159050919050565b6106948161067f565b811461069f57600080fd5b50565b6000815190506106b18161068b565b92915050565b6000602082840312156106cd576106cc6104d2565b5b60006106db848285016106a2565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610740602a836105ca565b915061074b826106e4565b604082019050919050565b6000602082019050818103600083015261076f81610733565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006107d26026836105ca565b91506107dd82610776565b604082019050919050565b60006020820190508181036000830152610801816107c5565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561083c578082015181840152602081019050610821565b60008484015250505050565b600061085382610808565b61085d8185610813565b935061086d81856020860161081e565b80840191505092915050565b60006108858284610848565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006108c6601d836105ca565b91506108d182610890565b602082019050919050565b600060208201905081810360008301526108f5816108b9565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610923826108fc565b61092d81856105ca565b935061093d81856020860161081e565b61094681610907565b840191505092915050565b6000602082019050818103600083015261096b8184610918565b90509291505056fea264697066735822122035f92815476344f4f490bc949c278dd3a5817452e439ae86b15c8e442a276abc64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAC0 CODESIZE SUB DUP1 PUSH2 0xAC0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9A9 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDBBA0F01 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x157 DUP4 DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17B SWAP3 SWAP2 SWAP1 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2A4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A SWAP1 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x371 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x382 DUP8 DUP4 DUP4 DUP8 PUSH2 0x38E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x3E8 JUMPI PUSH2 0x3A8 DUP6 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x3FA DUP4 DUP4 PUSH2 0x426 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x439 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP3 PUSH2 0x476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B1 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E0 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP2 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FD DUP2 PUSH2 0x4D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP2 EQ PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x533 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x544 DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x539 JUMP JUMPDEST DUP2 EQ PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x571 DUP2 PUSH2 0x54B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59E DUP7 DUP3 DUP8 ADD PUSH2 0x4EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5AF DUP7 DUP3 DUP8 ADD PUSH2 0x524 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5C0 DUP7 DUP3 DUP8 ADD PUSH2 0x562 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x611 PUSH1 0x17 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x61C DUP3 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x640 DUP2 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x650 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x66B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x678 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B1 DUP2 PUSH2 0x68B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP5 DUP3 DUP6 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 PUSH1 0x2A DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x74B DUP3 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x76F DUP2 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH1 0x26 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP3 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x801 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x853 DUP3 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x85D DUP2 DUP6 PUSH2 0x813 JUMP JUMPDEST SWAP4 POP PUSH2 0x86D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP3 DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH1 0x1D DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x8D1 DUP3 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F5 DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x923 DUP3 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x92D DUP2 DUP6 PUSH2 0x5CA JUMP JUMPDEST SWAP4 POP PUSH2 0x93D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST PUSH2 0x946 DUP2 PUSH2 0x907 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96B DUP2 DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xF9 0x28 ISZERO SELFBALANCE PUSH4 0x44F4F490 0xBC SWAP5 SWAP13 0x27 DUP14 0xD3 0xA5 DUP2 PUSH21 0x52E439AE86B15C8E442A276ABC64736F6C63430008 SLT STOP CALLER ","sourceMap":"2411:418:4:-:0;;;2494:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2540:6;2532:5;;:14;;;;;;;;;;;;;;;;;;2494:59;2411:418;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;2411:418:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_callOptionalReturn_393":{"entryPoint":482,"id":393,"parameterSlots":2,"returnSlots":0},"@_revert_723":{"entryPoint":1062,"id":723,"parameterSlots":2,"returnSlots":0},"@functionCallWithValue_548":{"entryPoint":705,"id":548,"parameterSlots":4,"returnSlots":1},"@functionCall_484":{"entryPoint":681,"id":484,"parameterSlots":3,"returnSlots":1},"@getOwner_1010":{"entryPoint":117,"id":1010,"parameterSlots":0,"returnSlots":1},"@isContract_412":{"entryPoint":1027,"id":412,"parameterSlots":1,"returnSlots":1},"@safeTransfer_145":{"entryPoint":348,"id":145,"parameterSlots":3,"returnSlots":0},"@transfer_1002":{"entryPoint":158,"id":1002,"parameterSlots":3,"returnSlots":0},"@verifyCallResultFromTarget_679":{"entryPoint":910,"id":679,"parameterSlots":4,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1262,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":1698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$77":{"entryPoint":1378,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$77":{"entryPoint":1399,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":1989,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33_to_t_string_memory_ptr_fromStack":{"entryPoint":1540,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":2233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":1843,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1607,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1207,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":1622,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2024,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1575,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1878,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2056,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2300,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2067,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1482,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1174,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$77":{"entryPoint":1337,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1142,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1283,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2078,"id":null,"parameterSlots":3,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1234,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2311,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":1910,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33":{"entryPoint":1499,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":2192,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":1764,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1239,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":1675,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$77":{"entryPoint":1355,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1293,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10097:5","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:5","statements":[{"nodeType":"YulAssignment","src":"62:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:5"},"nodeType":"YulFunctionCall","src":"73:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:5","type":""}],"src":"7:126:5"},{"body":{"nodeType":"YulBlock","src":"184:51:5","statements":[{"nodeType":"YulAssignment","src":"194:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:5"},"nodeType":"YulFunctionCall","src":"205:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:5","type":""}],"src":"139:96:5"},{"body":{"nodeType":"YulBlock","src":"306:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:5"},"nodeType":"YulFunctionCall","src":"328:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:5"},"nodeType":"YulFunctionCall","src":"316:37:5"},"nodeType":"YulExpressionStatement","src":"316:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:5","type":""}],"src":"241:118:5"},{"body":{"nodeType":"YulBlock","src":"463:124:5","statements":[{"nodeType":"YulAssignment","src":"473:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:5"},"nodeType":"YulFunctionCall","src":"481:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:5"},"nodeType":"YulFunctionCall","src":"562:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:5"},"nodeType":"YulFunctionCall","src":"509:71:5"},"nodeType":"YulExpressionStatement","src":"509:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:5","type":""}],"src":"365:222:5"},{"body":{"nodeType":"YulBlock","src":"633:35:5","statements":[{"nodeType":"YulAssignment","src":"643:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:5"},"nodeType":"YulFunctionCall","src":"653:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:5","type":""}],"src":"593:75:5"},{"body":{"nodeType":"YulBlock","src":"763:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:5"},"nodeType":"YulFunctionCall","src":"773:12:5"},"nodeType":"YulExpressionStatement","src":"773:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:5"},{"body":{"nodeType":"YulBlock","src":"886:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:5"},"nodeType":"YulFunctionCall","src":"896:12:5"},"nodeType":"YulExpressionStatement","src":"896:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:5"},{"body":{"nodeType":"YulBlock","src":"963:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:5"},"nodeType":"YulFunctionCall","src":"1022:12:5"},"nodeType":"YulExpressionStatement","src":"1022:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:5"},"nodeType":"YulFunctionCall","src":"993:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:5"},"nodeType":"YulFunctionCall","src":"983:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:5"},"nodeType":"YulFunctionCall","src":"976:43:5"},"nodeType":"YulIf","src":"973:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:5","type":""}],"src":"920:122:5"},{"body":{"nodeType":"YulBlock","src":"1100:87:5","statements":[{"nodeType":"YulAssignment","src":"1110:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:5"},"nodeType":"YulFunctionCall","src":"1119:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:5"},"nodeType":"YulFunctionCall","src":"1148:33:5"},"nodeType":"YulExpressionStatement","src":"1148:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:5","type":""}],"src":"1048:139:5"},{"body":{"nodeType":"YulBlock","src":"1238:32:5","statements":[{"nodeType":"YulAssignment","src":"1248:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"1259:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1248:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1220:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1230:7:5","type":""}],"src":"1193:77:5"},{"body":{"nodeType":"YulBlock","src":"1319:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"1376:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1385:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1388:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1378:6:5"},"nodeType":"YulFunctionCall","src":"1378:12:5"},"nodeType":"YulExpressionStatement","src":"1378:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1342:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1367:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1349:17:5"},"nodeType":"YulFunctionCall","src":"1349:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1339:2:5"},"nodeType":"YulFunctionCall","src":"1339:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1332:6:5"},"nodeType":"YulFunctionCall","src":"1332:43:5"},"nodeType":"YulIf","src":"1329:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:5","type":""}],"src":"1276:122:5"},{"body":{"nodeType":"YulBlock","src":"1456:87:5","statements":[{"nodeType":"YulAssignment","src":"1466:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1475:12:5"},"nodeType":"YulFunctionCall","src":"1475:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1466:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1531:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1504:26:5"},"nodeType":"YulFunctionCall","src":"1504:33:5"},"nodeType":"YulExpressionStatement","src":"1504:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1434:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1442:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1450:5:5","type":""}],"src":"1404:139:5"},{"body":{"nodeType":"YulBlock","src":"1607:51:5","statements":[{"nodeType":"YulAssignment","src":"1617:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1646:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1628:17:5"},"nodeType":"YulFunctionCall","src":"1628:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1617:7:5"}]}]},"name":"cleanup_t_contract$_IERC20_$77","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1589:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1599:7:5","type":""}],"src":"1549:109:5"},{"body":{"nodeType":"YulBlock","src":"1720:92:5","statements":[{"body":{"nodeType":"YulBlock","src":"1790:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1799:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1802:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1792:6:5"},"nodeType":"YulFunctionCall","src":"1792:12:5"},"nodeType":"YulExpressionStatement","src":"1792:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1743:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1781:5:5"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$77","nodeType":"YulIdentifier","src":"1750:30:5"},"nodeType":"YulFunctionCall","src":"1750:37:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1740:2:5"},"nodeType":"YulFunctionCall","src":"1740:48:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1733:6:5"},"nodeType":"YulFunctionCall","src":"1733:56:5"},"nodeType":"YulIf","src":"1730:76:5"}]},"name":"validator_revert_t_contract$_IERC20_$77","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1713:5:5","type":""}],"src":"1664:148:5"},{"body":{"nodeType":"YulBlock","src":"1883:100:5","statements":[{"nodeType":"YulAssignment","src":"1893:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1915:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1902:12:5"},"nodeType":"YulFunctionCall","src":"1902:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1893:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1971:5:5"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$77","nodeType":"YulIdentifier","src":"1931:39:5"},"nodeType":"YulFunctionCall","src":"1931:46:5"},"nodeType":"YulExpressionStatement","src":"1931:46:5"}]},"name":"abi_decode_t_contract$_IERC20_$77","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1861:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1869:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1877:5:5","type":""}],"src":"1818:165:5"},{"body":{"nodeType":"YulBlock","src":"2102:532:5","statements":[{"body":{"nodeType":"YulBlock","src":"2148:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2150:77:5"},"nodeType":"YulFunctionCall","src":"2150:79:5"},"nodeType":"YulExpressionStatement","src":"2150:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2123:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"2132:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2119:3:5"},"nodeType":"YulFunctionCall","src":"2119:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"2144:2:5","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2115:3:5"},"nodeType":"YulFunctionCall","src":"2115:32:5"},"nodeType":"YulIf","src":"2112:119:5"},{"nodeType":"YulBlock","src":"2241:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2256:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"2270:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2260:6:5","type":""}]},{"nodeType":"YulAssignment","src":"2285:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2320:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"2331:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2316:3:5"},"nodeType":"YulFunctionCall","src":"2316:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2340:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2295:20:5"},"nodeType":"YulFunctionCall","src":"2295:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2285:6:5"}]}]},{"nodeType":"YulBlock","src":"2368:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2383:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"2397:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2387:6:5","type":""}]},{"nodeType":"YulAssignment","src":"2413:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2448:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"2459:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:5"},"nodeType":"YulFunctionCall","src":"2444:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2468:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2423:20:5"},"nodeType":"YulFunctionCall","src":"2423:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2413:6:5"}]}]},{"nodeType":"YulBlock","src":"2496:131:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2511:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"2525:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2515:6:5","type":""}]},{"nodeType":"YulAssignment","src":"2541:76:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2589:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"2600:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2585:3:5"},"nodeType":"YulFunctionCall","src":"2585:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2609:7:5"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$77","nodeType":"YulIdentifier","src":"2551:33:5"},"nodeType":"YulFunctionCall","src":"2551:66:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2541:6:5"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$77","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2056:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2067:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2079:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2087:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2095:6:5","type":""}],"src":"1989:645:5"},{"body":{"nodeType":"YulBlock","src":"2736:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2753:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2758:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2746:6:5"},"nodeType":"YulFunctionCall","src":"2746:19:5"},"nodeType":"YulExpressionStatement","src":"2746:19:5"},{"nodeType":"YulAssignment","src":"2774:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2793:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2798:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2789:3:5"},"nodeType":"YulFunctionCall","src":"2789:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2774:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2708:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"2713:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2724:11:5","type":""}],"src":"2640:169:5"},{"body":{"nodeType":"YulBlock","src":"2921:67:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2943:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2951:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2939:3:5"},"nodeType":"YulFunctionCall","src":"2939:14:5"},{"hexValue":"4f6e6c79206f776e65722063616e207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"2955:25:5","type":"","value":"Only owner can transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2932:6:5"},"nodeType":"YulFunctionCall","src":"2932:49:5"},"nodeType":"YulExpressionStatement","src":"2932:49:5"}]},"name":"store_literal_in_memory_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2913:6:5","type":""}],"src":"2815:173:5"},{"body":{"nodeType":"YulBlock","src":"3140:220:5","statements":[{"nodeType":"YulAssignment","src":"3150:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3216:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3221:2:5","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3157:58:5"},"nodeType":"YulFunctionCall","src":"3157:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3150:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3322:3:5"}],"functionName":{"name":"store_literal_in_memory_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33","nodeType":"YulIdentifier","src":"3233:88:5"},"nodeType":"YulFunctionCall","src":"3233:93:5"},"nodeType":"YulExpressionStatement","src":"3233:93:5"},{"nodeType":"YulAssignment","src":"3335:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3346:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3351:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3342:3:5"},"nodeType":"YulFunctionCall","src":"3342:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3335:3:5"}]}]},"name":"abi_encode_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3128:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3136:3:5","type":""}],"src":"2994:366:5"},{"body":{"nodeType":"YulBlock","src":"3537:248:5","statements":[{"nodeType":"YulAssignment","src":"3547:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3559:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3570:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3555:3:5"},"nodeType":"YulFunctionCall","src":"3555:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3547:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3594:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3590:3:5"},"nodeType":"YulFunctionCall","src":"3590:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3613:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"3619:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3609:3:5"},"nodeType":"YulFunctionCall","src":"3609:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3583:6:5"},"nodeType":"YulFunctionCall","src":"3583:47:5"},"nodeType":"YulExpressionStatement","src":"3583:47:5"},{"nodeType":"YulAssignment","src":"3639:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3773:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3647:124:5"},"nodeType":"YulFunctionCall","src":"3647:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3639:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3517:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3532:4:5","type":""}],"src":"3366:419:5"},{"body":{"nodeType":"YulBlock","src":"3856:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3873:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3896:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3878:17:5"},"nodeType":"YulFunctionCall","src":"3878:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3866:6:5"},"nodeType":"YulFunctionCall","src":"3866:37:5"},"nodeType":"YulExpressionStatement","src":"3866:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3844:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3851:3:5","type":""}],"src":"3791:118:5"},{"body":{"nodeType":"YulBlock","src":"4041:206:5","statements":[{"nodeType":"YulAssignment","src":"4051:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4063:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4074:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4059:3:5"},"nodeType":"YulFunctionCall","src":"4059:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4051:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4131:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4144:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4155:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4140:3:5"},"nodeType":"YulFunctionCall","src":"4140:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4087:43:5"},"nodeType":"YulFunctionCall","src":"4087:71:5"},"nodeType":"YulExpressionStatement","src":"4087:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4212:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4225:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4236:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4221:3:5"},"nodeType":"YulFunctionCall","src":"4221:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4168:43:5"},"nodeType":"YulFunctionCall","src":"4168:72:5"},"nodeType":"YulExpressionStatement","src":"4168:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4017:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4025:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4036:4:5","type":""}],"src":"3915:332:5"},{"body":{"nodeType":"YulBlock","src":"4295:48:5","statements":[{"nodeType":"YulAssignment","src":"4305:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4330:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4323:6:5"},"nodeType":"YulFunctionCall","src":"4323:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4316:6:5"},"nodeType":"YulFunctionCall","src":"4316:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4305:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4277:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4287:7:5","type":""}],"src":"4253:90:5"},{"body":{"nodeType":"YulBlock","src":"4389:76:5","statements":[{"body":{"nodeType":"YulBlock","src":"4443:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4452:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4455:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4445:6:5"},"nodeType":"YulFunctionCall","src":"4445:12:5"},"nodeType":"YulExpressionStatement","src":"4445:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4412:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4434:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4419:14:5"},"nodeType":"YulFunctionCall","src":"4419:21:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4409:2:5"},"nodeType":"YulFunctionCall","src":"4409:32:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4402:6:5"},"nodeType":"YulFunctionCall","src":"4402:40:5"},"nodeType":"YulIf","src":"4399:60:5"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4382:5:5","type":""}],"src":"4349:116:5"},{"body":{"nodeType":"YulBlock","src":"4531:77:5","statements":[{"nodeType":"YulAssignment","src":"4541:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4556:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4550:5:5"},"nodeType":"YulFunctionCall","src":"4550:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4541:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4596:5:5"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"4572:23:5"},"nodeType":"YulFunctionCall","src":"4572:30:5"},"nodeType":"YulExpressionStatement","src":"4572:30:5"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4509:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4517:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4525:5:5","type":""}],"src":"4471:137:5"},{"body":{"nodeType":"YulBlock","src":"4688:271:5","statements":[{"body":{"nodeType":"YulBlock","src":"4734:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4736:77:5"},"nodeType":"YulFunctionCall","src":"4736:79:5"},"nodeType":"YulExpressionStatement","src":"4736:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4709:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4705:3:5"},"nodeType":"YulFunctionCall","src":"4705:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4730:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4701:3:5"},"nodeType":"YulFunctionCall","src":"4701:32:5"},"nodeType":"YulIf","src":"4698:119:5"},{"nodeType":"YulBlock","src":"4827:125:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4842:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4856:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4846:6:5","type":""}]},{"nodeType":"YulAssignment","src":"4871:71:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4914:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4925:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4910:3:5"},"nodeType":"YulFunctionCall","src":"4910:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4934:7:5"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"4881:28:5"},"nodeType":"YulFunctionCall","src":"4881:61:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4871:6:5"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4658:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4669:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4681:6:5","type":""}],"src":"4614:345:5"},{"body":{"nodeType":"YulBlock","src":"5071:123:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5093:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5101:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5089:3:5"},"nodeType":"YulFunctionCall","src":"5089:14:5"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"5105:34:5","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5082:6:5"},"nodeType":"YulFunctionCall","src":"5082:58:5"},"nodeType":"YulExpressionStatement","src":"5082:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5161:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5169:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:5"},"nodeType":"YulFunctionCall","src":"5157:15:5"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"5174:12:5","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5150:6:5"},"nodeType":"YulFunctionCall","src":"5150:37:5"},"nodeType":"YulExpressionStatement","src":"5150:37:5"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5063:6:5","type":""}],"src":"4965:229:5"},{"body":{"nodeType":"YulBlock","src":"5346:220:5","statements":[{"nodeType":"YulAssignment","src":"5356:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5422:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5427:2:5","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5363:58:5"},"nodeType":"YulFunctionCall","src":"5363:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5356:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5528:3:5"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"5439:88:5"},"nodeType":"YulFunctionCall","src":"5439:93:5"},"nodeType":"YulExpressionStatement","src":"5439:93:5"},{"nodeType":"YulAssignment","src":"5541:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5552:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5557:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5548:3:5"},"nodeType":"YulFunctionCall","src":"5548:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5541:3:5"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5334:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5342:3:5","type":""}],"src":"5200:366:5"},{"body":{"nodeType":"YulBlock","src":"5743:248:5","statements":[{"nodeType":"YulAssignment","src":"5753:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5765:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5776:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5761:3:5"},"nodeType":"YulFunctionCall","src":"5761:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5753:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5800:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5811:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5796:3:5"},"nodeType":"YulFunctionCall","src":"5796:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5819:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"5825:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5815:3:5"},"nodeType":"YulFunctionCall","src":"5815:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5789:6:5"},"nodeType":"YulFunctionCall","src":"5789:47:5"},"nodeType":"YulExpressionStatement","src":"5789:47:5"},{"nodeType":"YulAssignment","src":"5845:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5979:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5853:124:5"},"nodeType":"YulFunctionCall","src":"5853:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5845:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5723:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5738:4:5","type":""}],"src":"5572:419:5"},{"body":{"nodeType":"YulBlock","src":"6103:119:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6125:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6133:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6121:3:5"},"nodeType":"YulFunctionCall","src":"6121:14:5"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"6137:34:5","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6114:6:5"},"nodeType":"YulFunctionCall","src":"6114:58:5"},"nodeType":"YulExpressionStatement","src":"6114:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6193:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6201:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6189:3:5"},"nodeType":"YulFunctionCall","src":"6189:15:5"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"6206:8:5","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6182:6:5"},"nodeType":"YulFunctionCall","src":"6182:33:5"},"nodeType":"YulExpressionStatement","src":"6182:33:5"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6095:6:5","type":""}],"src":"5997:225:5"},{"body":{"nodeType":"YulBlock","src":"6374:220:5","statements":[{"nodeType":"YulAssignment","src":"6384:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6450:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"6455:2:5","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6391:58:5"},"nodeType":"YulFunctionCall","src":"6391:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6384:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6556:3:5"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"6467:88:5"},"nodeType":"YulFunctionCall","src":"6467:93:5"},"nodeType":"YulExpressionStatement","src":"6467:93:5"},{"nodeType":"YulAssignment","src":"6569:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6580:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:5"},"nodeType":"YulFunctionCall","src":"6576:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6569:3:5"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6362:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6370:3:5","type":""}],"src":"6228:366:5"},{"body":{"nodeType":"YulBlock","src":"6771:248:5","statements":[{"nodeType":"YulAssignment","src":"6781:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6793:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6804:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:5"},"nodeType":"YulFunctionCall","src":"6789:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6781:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6828:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6839:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6824:3:5"},"nodeType":"YulFunctionCall","src":"6824:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6847:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"6853:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6843:3:5"},"nodeType":"YulFunctionCall","src":"6843:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6817:6:5"},"nodeType":"YulFunctionCall","src":"6817:47:5"},"nodeType":"YulExpressionStatement","src":"6817:47:5"},{"nodeType":"YulAssignment","src":"6873:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7007:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6881:124:5"},"nodeType":"YulFunctionCall","src":"6881:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6873:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6751:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6766:4:5","type":""}],"src":"6600:419:5"},{"body":{"nodeType":"YulBlock","src":"7083:40:5","statements":[{"nodeType":"YulAssignment","src":"7094:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7110:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7104:5:5"},"nodeType":"YulFunctionCall","src":"7104:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7094:6:5"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7066:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7076:6:5","type":""}],"src":"7025:98:5"},{"body":{"nodeType":"YulBlock","src":"7242:34:5","statements":[{"nodeType":"YulAssignment","src":"7252:18:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"7267:3:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7252:11:5"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7214:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"7219:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7230:11:5","type":""}],"src":"7129:147:5"},{"body":{"nodeType":"YulBlock","src":"7344:184:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7354:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7363:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7358:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7423:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7448:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"7453:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7444:3:5"},"nodeType":"YulFunctionCall","src":"7444:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7467:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"7472:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7463:3:5"},"nodeType":"YulFunctionCall","src":"7463:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7457:5:5"},"nodeType":"YulFunctionCall","src":"7457:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:5"},"nodeType":"YulFunctionCall","src":"7437:39:5"},"nodeType":"YulExpressionStatement","src":"7437:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7384:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"7387:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7381:2:5"},"nodeType":"YulFunctionCall","src":"7381:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7395:19:5","statements":[{"nodeType":"YulAssignment","src":"7397:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7406:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"7409:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7402:3:5"},"nodeType":"YulFunctionCall","src":"7402:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7397:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"7377:3:5","statements":[]},"src":"7373:113:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7506:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"7511:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7502:3:5"},"nodeType":"YulFunctionCall","src":"7502:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"7520:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7495:6:5"},"nodeType":"YulFunctionCall","src":"7495:27:5"},"nodeType":"YulExpressionStatement","src":"7495:27:5"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7326:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7331:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"7336:6:5","type":""}],"src":"7282:246:5"},{"body":{"nodeType":"YulBlock","src":"7642:278:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7652:52:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7698:5:5"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7666:31:5"},"nodeType":"YulFunctionCall","src":"7666:38:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7656:6:5","type":""}]},{"nodeType":"YulAssignment","src":"7713:95:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7796:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"7801:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7720:75:5"},"nodeType":"YulFunctionCall","src":"7720:88:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7713:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7856:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7863:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7852:3:5"},"nodeType":"YulFunctionCall","src":"7852:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"7870:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"7875:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7817:34:5"},"nodeType":"YulFunctionCall","src":"7817:65:5"},"nodeType":"YulExpressionStatement","src":"7817:65:5"},{"nodeType":"YulAssignment","src":"7891:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7902:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"7907:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7898:3:5"},"nodeType":"YulFunctionCall","src":"7898:16:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7891:3:5"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7623:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7630:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7638:3:5","type":""}],"src":"7534:386:5"},{"body":{"nodeType":"YulBlock","src":"8060:137:5","statements":[{"nodeType":"YulAssignment","src":"8071:100:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8158:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"8167:3:5"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8078:79:5"},"nodeType":"YulFunctionCall","src":"8078:93:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8071:3:5"}]},{"nodeType":"YulAssignment","src":"8181:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"8188:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8181:3:5"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8039:3:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8045:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8056:3:5","type":""}],"src":"7926:271:5"},{"body":{"nodeType":"YulBlock","src":"8309:73:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8331:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8339:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8327:3:5"},"nodeType":"YulFunctionCall","src":"8327:14:5"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"8343:31:5","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8320:6:5"},"nodeType":"YulFunctionCall","src":"8320:55:5"},"nodeType":"YulExpressionStatement","src":"8320:55:5"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8301:6:5","type":""}],"src":"8203:179:5"},{"body":{"nodeType":"YulBlock","src":"8534:220:5","statements":[{"nodeType":"YulAssignment","src":"8544:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8610:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8615:2:5","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8551:58:5"},"nodeType":"YulFunctionCall","src":"8551:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8544:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8716:3:5"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"8627:88:5"},"nodeType":"YulFunctionCall","src":"8627:93:5"},"nodeType":"YulExpressionStatement","src":"8627:93:5"},{"nodeType":"YulAssignment","src":"8729:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8740:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8736:3:5"},"nodeType":"YulFunctionCall","src":"8736:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8729:3:5"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8522:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8530:3:5","type":""}],"src":"8388:366:5"},{"body":{"nodeType":"YulBlock","src":"8931:248:5","statements":[{"nodeType":"YulAssignment","src":"8941:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8953:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8964:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8949:3:5"},"nodeType":"YulFunctionCall","src":"8949:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8941:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8988:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8999:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8984:3:5"},"nodeType":"YulFunctionCall","src":"8984:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9007:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"9013:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9003:3:5"},"nodeType":"YulFunctionCall","src":"9003:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8977:6:5"},"nodeType":"YulFunctionCall","src":"8977:47:5"},"nodeType":"YulExpressionStatement","src":"8977:47:5"},{"nodeType":"YulAssignment","src":"9033:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9167:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9041:124:5"},"nodeType":"YulFunctionCall","src":"9041:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9033:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8911:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8926:4:5","type":""}],"src":"8760:419:5"},{"body":{"nodeType":"YulBlock","src":"9244:40:5","statements":[{"nodeType":"YulAssignment","src":"9255:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9271:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9265:5:5"},"nodeType":"YulFunctionCall","src":"9265:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9255:6:5"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9227:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9237:6:5","type":""}],"src":"9185:99:5"},{"body":{"nodeType":"YulBlock","src":"9338:54:5","statements":[{"nodeType":"YulAssignment","src":"9348:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9366:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9373:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9362:3:5"},"nodeType":"YulFunctionCall","src":"9362:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9382:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9378:3:5"},"nodeType":"YulFunctionCall","src":"9378:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9358:3:5"},"nodeType":"YulFunctionCall","src":"9358:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9348:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9321:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9331:6:5","type":""}],"src":"9290:102:5"},{"body":{"nodeType":"YulBlock","src":"9490:285:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9500:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9547:5:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9514:32:5"},"nodeType":"YulFunctionCall","src":"9514:39:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9504:6:5","type":""}]},{"nodeType":"YulAssignment","src":"9562:78:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9628:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"9633:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9569:58:5"},"nodeType":"YulFunctionCall","src":"9569:71:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9562:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9688:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9695:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9684:3:5"},"nodeType":"YulFunctionCall","src":"9684:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"9702:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"9707:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9649:34:5"},"nodeType":"YulFunctionCall","src":"9649:65:5"},"nodeType":"YulExpressionStatement","src":"9649:65:5"},{"nodeType":"YulAssignment","src":"9723:46:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9734:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9761:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9739:21:5"},"nodeType":"YulFunctionCall","src":"9739:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9730:3:5"},"nodeType":"YulFunctionCall","src":"9730:39:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9723:3:5"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9471:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9478:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9486:3:5","type":""}],"src":"9398:377:5"},{"body":{"nodeType":"YulBlock","src":"9899:195:5","statements":[{"nodeType":"YulAssignment","src":"9909:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9921:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9932:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9917:3:5"},"nodeType":"YulFunctionCall","src":"9917:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9909:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9956:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9967:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9952:3:5"},"nodeType":"YulFunctionCall","src":"9952:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9975:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"9981:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9971:3:5"},"nodeType":"YulFunctionCall","src":"9971:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9945:6:5"},"nodeType":"YulFunctionCall","src":"9945:47:5"},"nodeType":"YulExpressionStatement","src":"9945:47:5"},{"nodeType":"YulAssignment","src":"10001:86:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10073:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"10082:4:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10009:63:5"},"nodeType":"YulFunctionCall","src":"10009:78:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10001:4:5"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9871:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9883:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9894:4:5","type":""}],"src":"9781:313:5"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_contract$_IERC20_$77(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$77(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3fb6ef7391eb6731357a0f25de8c147833f1ce49e14cdfb947e1ac3d27a1f33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063dbba0f0114610059575b600080fd5b610043610075565b60405161005091906104b7565b60405180910390f35b610073600480360381019061006e9190610577565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610627565b60405180910390fd5b61015783838373ffffffffffffffffffffffffffffffffffffffff1661015c9092919063ffffffff16565b505050565b6101dd8363a9059cbb60e01b848460405160240161017b929190610656565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506101e2565b505050565b6000610244826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166102a99092919063ffffffff16565b90506000815111156102a4578080602001905181019061026491906106b7565b6102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610756565b60405180910390fd5b5b505050565b60606102b884846000856102c1565b90509392505050565b606082471015610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd906107e8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161032f9190610879565b60006040518083038185875af1925050503d806000811461036c576040519150601f19603f3d011682016040523d82523d6000602084013e610371565b606091505b50915091506103828783838761038e565b92505050949350505050565b606083156103f05760008351036103e8576103a885610403565b6103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de906108dc565b60405180910390fd5b5b8290506103fb565b6103fa8383610426565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156104395781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d9190610951565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a182610476565b9050919050565b6104b181610496565b82525050565b60006020820190506104cc60008301846104a8565b92915050565b600080fd5b6104e081610496565b81146104eb57600080fd5b50565b6000813590506104fd816104d7565b92915050565b6000819050919050565b61051681610503565b811461052157600080fd5b50565b6000813590506105338161050d565b92915050565b600061054482610496565b9050919050565b61055481610539565b811461055f57600080fd5b50565b6000813590506105718161054b565b92915050565b6000806000606084860312156105905761058f6104d2565b5b600061059e868287016104ee565b93505060206105af86828701610524565b92505060406105c086828701610562565b9150509250925092565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e207472616e73666572000000000000000000600082015250565b60006106116017836105ca565b915061061c826105db565b602082019050919050565b6000602082019050818103600083015261064081610604565b9050919050565b61065081610503565b82525050565b600060408201905061066b60008301856104a8565b6106786020830184610647565b9392505050565b60008115159050919050565b6106948161067f565b811461069f57600080fd5b50565b6000815190506106b18161068b565b92915050565b6000602082840312156106cd576106cc6104d2565b5b60006106db848285016106a2565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610740602a836105ca565b915061074b826106e4565b604082019050919050565b6000602082019050818103600083015261076f81610733565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006107d26026836105ca565b91506107dd82610776565b604082019050919050565b60006020820190508181036000830152610801816107c5565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561083c578082015181840152602081019050610821565b60008484015250505050565b600061085382610808565b61085d8185610813565b935061086d81856020860161081e565b80840191505092915050565b60006108858284610848565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006108c6601d836105ca565b91506108d182610890565b602082019050919050565b600060208201905081810360008301526108f5816108b9565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610923826108fc565b61092d81856105ca565b935061093d81856020860161081e565b61094681610907565b840191505092915050565b6000602082019050818103600083015261096b8184610918565b90509291505056fea264697066735822122035f92815476344f4f490bc949c278dd3a5817452e439ae86b15c8e442a276abc64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xDBBA0F01 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x157 DUP4 DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DD DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17B SWAP3 SWAP2 SWAP1 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x244 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2A4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A SWAP1 PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2C1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x371 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x382 DUP8 DUP4 DUP4 DUP8 PUSH2 0x38E JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x3E8 JUMPI PUSH2 0x3A8 DUP6 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP1 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x3FA DUP4 DUP4 PUSH2 0x426 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x439 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP3 PUSH2 0x476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B1 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E0 DUP2 PUSH2 0x496 JUMP JUMPDEST DUP2 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FD DUP2 PUSH2 0x4D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP2 EQ PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x533 DUP2 PUSH2 0x50D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x544 DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x539 JUMP JUMPDEST DUP2 EQ PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x571 DUP2 PUSH2 0x54B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59E DUP7 DUP3 DUP8 ADD PUSH2 0x4EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5AF DUP7 DUP3 DUP8 ADD PUSH2 0x524 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5C0 DUP7 DUP3 DUP8 ADD PUSH2 0x562 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E207472616E73666572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x611 PUSH1 0x17 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x61C DUP3 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x640 DUP2 PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x650 DUP2 PUSH2 0x503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x66B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x678 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B1 DUP2 PUSH2 0x68B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x4D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP5 DUP3 DUP6 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x740 PUSH1 0x2A DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x74B DUP3 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x76F DUP2 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D2 PUSH1 0x26 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x7DD DUP3 PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x801 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x821 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x853 DUP3 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x85D DUP2 DUP6 PUSH2 0x813 JUMP JUMPDEST SWAP4 POP PUSH2 0x86D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP3 DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH1 0x1D DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x8D1 DUP3 PUSH2 0x890 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F5 DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x923 DUP3 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x92D DUP2 DUP6 PUSH2 0x5CA JUMP JUMPDEST SWAP4 POP PUSH2 0x93D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x81E JUMP JUMPDEST PUSH2 0x946 DUP2 PUSH2 0x907 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96B DUP2 DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xF9 0x28 ISZERO SELFBALANCE PUSH4 0x44F4F490 0xBC SWAP5 SWAP13 0x27 DUP14 0xD3 0xA5 DUP2 PUSH21 0x52E439AE86B15C8E442A276ABC64736F6C63430008 SLT STOP CALLER ","sourceMap":"2411:418:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2746:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2559:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2746:81;2789:7;2815:5;;;;;;;;;;;2808:12;;2746:81;:::o;2559:181::-;2660:5;;;;;;;;;;2646:19;;:10;:19;;;2638:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2703:30;2722:2;2726:6;2703:5;:18;;;;:30;;;;;:::i;:::-;2559:181;;;:::o;763:205:2:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:3:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:126:5;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:109::-;1599:7;1628:24;1646:5;1628:24;:::i;:::-;1617:35;;1549:109;;;:::o;1664:148::-;1750:37;1781:5;1750:37;:::i;:::-;1743:5;1740:48;1730:76;;1802:1;1799;1792:12;1730:76;1664:148;:::o;1818:165::-;1877:5;1915:6;1902:20;1893:29;;1931:46;1971:5;1931:46;:::i;:::-;1818:165;;;;:::o;1989:645::-;2079:6;2087;2095;2144:2;2132:9;2123:7;2119:23;2115:32;2112:119;;;2150:79;;:::i;:::-;2112:119;2270:1;2295:53;2340:7;2331:6;2320:9;2316:22;2295:53;:::i;:::-;2285:63;;2241:117;2397:2;2423:53;2468:7;2459:6;2448:9;2444:22;2423:53;:::i;:::-;2413:63;;2368:118;2525:2;2551:66;2609:7;2600:6;2589:9;2585:22;2551:66;:::i;:::-;2541:76;;2496:131;1989:645;;;;;:::o;2640:169::-;2724:11;2758:6;2753:3;2746:19;2798:4;2793:3;2789:14;2774:29;;2640:169;;;;:::o;2815:173::-;2955:25;2951:1;2943:6;2939:14;2932:49;2815:173;:::o;2994:366::-;3136:3;3157:67;3221:2;3216:3;3157:67;:::i;:::-;3150:74;;3233:93;3322:3;3233:93;:::i;:::-;3351:2;3346:3;3342:12;3335:19;;2994:366;;;:::o;3366:419::-;3532:4;3570:2;3559:9;3555:18;3547:26;;3619:9;3613:4;3609:20;3605:1;3594:9;3590:17;3583:47;3647:131;3773:4;3647:131;:::i;:::-;3639:139;;3366:419;;;:::o;3791:118::-;3878:24;3896:5;3878:24;:::i;:::-;3873:3;3866:37;3791:118;;:::o;3915:332::-;4036:4;4074:2;4063:9;4059:18;4051:26;;4087:71;4155:1;4144:9;4140:17;4131:6;4087:71;:::i;:::-;4168:72;4236:2;4225:9;4221:18;4212:6;4168:72;:::i;:::-;3915:332;;;;;:::o;4253:90::-;4287:7;4330:5;4323:13;4316:21;4305:32;;4253:90;;;:::o;4349:116::-;4419:21;4434:5;4419:21;:::i;:::-;4412:5;4409:32;4399:60;;4455:1;4452;4445:12;4399:60;4349:116;:::o;4471:137::-;4525:5;4556:6;4550:13;4541:22;;4572:30;4596:5;4572:30;:::i;:::-;4471:137;;;;:::o;4614:345::-;4681:6;4730:2;4718:9;4709:7;4705:23;4701:32;4698:119;;;4736:79;;:::i;:::-;4698:119;4856:1;4881:61;4934:7;4925:6;4914:9;4910:22;4881:61;:::i;:::-;4871:71;;4827:125;4614:345;;;;:::o;4965:229::-;5105:34;5101:1;5093:6;5089:14;5082:58;5174:12;5169:2;5161:6;5157:15;5150:37;4965:229;:::o;5200:366::-;5342:3;5363:67;5427:2;5422:3;5363:67;:::i;:::-;5356:74;;5439:93;5528:3;5439:93;:::i;:::-;5557:2;5552:3;5548:12;5541:19;;5200:366;;;:::o;5572:419::-;5738:4;5776:2;5765:9;5761:18;5753:26;;5825:9;5819:4;5815:20;5811:1;5800:9;5796:17;5789:47;5853:131;5979:4;5853:131;:::i;:::-;5845:139;;5572:419;;;:::o;5997:225::-;6137:34;6133:1;6125:6;6121:14;6114:58;6206:8;6201:2;6193:6;6189:15;6182:33;5997:225;:::o;6228:366::-;6370:3;6391:67;6455:2;6450:3;6391:67;:::i;:::-;6384:74;;6467:93;6556:3;6467:93;:::i;:::-;6585:2;6580:3;6576:12;6569:19;;6228:366;;;:::o;6600:419::-;6766:4;6804:2;6793:9;6789:18;6781:26;;6853:9;6847:4;6843:20;6839:1;6828:9;6824:17;6817:47;6881:131;7007:4;6881:131;:::i;:::-;6873:139;;6600:419;;;:::o;7025:98::-;7076:6;7110:5;7104:12;7094:22;;7025:98;;;:::o;7129:147::-;7230:11;7267:3;7252:18;;7129:147;;;;:::o;7282:246::-;7363:1;7373:113;7387:6;7384:1;7381:13;7373:113;;;7472:1;7467:3;7463:11;7457:18;7453:1;7448:3;7444:11;7437:39;7409:2;7406:1;7402:10;7397:15;;7373:113;;;7520:1;7511:6;7506:3;7502:16;7495:27;7344:184;7282:246;;;:::o;7534:386::-;7638:3;7666:38;7698:5;7666:38;:::i;:::-;7720:88;7801:6;7796:3;7720:88;:::i;:::-;7713:95;;7817:65;7875:6;7870:3;7863:4;7856:5;7852:16;7817:65;:::i;:::-;7907:6;7902:3;7898:16;7891:23;;7642:278;7534:386;;;;:::o;7926:271::-;8056:3;8078:93;8167:3;8158:6;8078:93;:::i;:::-;8071:100;;8188:3;8181:10;;7926:271;;;;:::o;8203:179::-;8343:31;8339:1;8331:6;8327:14;8320:55;8203:179;:::o;8388:366::-;8530:3;8551:67;8615:2;8610:3;8551:67;:::i;:::-;8544:74;;8627:93;8716:3;8627:93;:::i;:::-;8745:2;8740:3;8736:12;8729:19;;8388:366;;;:::o;8760:419::-;8926:4;8964:2;8953:9;8949:18;8941:26;;9013:9;9007:4;9003:20;8999:1;8988:9;8984:17;8977:47;9041:131;9167:4;9041:131;:::i;:::-;9033:139;;8760:419;;;:::o;9185:99::-;9237:6;9271:5;9265:12;9255:22;;9185:99;;;:::o;9290:102::-;9331:6;9382:2;9378:7;9373:2;9366:5;9362:14;9358:28;9348:38;;9290:102;;;:::o;9398:377::-;9486:3;9514:39;9547:5;9514:39;:::i;:::-;9569:71;9633:6;9628:3;9569:71;:::i;:::-;9562:78;;9649:65;9707:6;9702:3;9695:4;9688:5;9684:16;9649:65;:::i;:::-;9739:29;9761:6;9739:29;:::i;:::-;9734:3;9730:39;9723:46;;9490:285;9398:377;;;;:::o;9781:313::-;9894:4;9932:2;9921:9;9917:18;9909:26;;9981:9;9975:4;9971:20;9967:1;9956:9;9952:17;9945:47;10009:78;10082:4;10073:6;10009:78;:::i;:::-;10001:86;;9781:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"494600","executionCost":"infinite","totalCost":"infinite"},"external":{"getOwner()":"2500","transfer(address,uint256,address)":"infinite"}},"methodIdentifiers":{"getOwner()":"893d20e8","transfer(address,uint256,address)":"dbba0f01"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SSIDWithWallet.sol\":\"Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/SSIDWithWallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract SSIDWithWallet {\\n    struct Identity {\\n        uint256 id;\\n        string name;\\n        string email;\\n        uint256 dob;\\n        address wallet;\\n        uint256[] certificationIDs;\\n    }\\n\\n    struct Certification {\\n        uint256 id;\\n        string name;\\n        uint256 issueDate;\\n        bool verified;\\n    }\\n\\n    mapping(address => Identity) private identities;\\n    mapping(uint256 => Certification) private certifications;\\n\\n    event IdentityCreated(address indexed owner, uint256 id);\\n    event CertificationIssued(uint256 indexed certificationID, uint256 indexed identityID);\\n\\n    function createIdentity(string memory name, string memory email, uint256 dob) public {\\n        \\n        Identity storage newIdentity = identities[msg.sender];\\n        newIdentity.id = block.timestamp;\\n        newIdentity.name = name;\\n        newIdentity.email = email;\\n        newIdentity.dob = dob;\\n        newIdentity.wallet = address(new Wallet(msg.sender));\\n\\n        emit IdentityCreated(msg.sender, newIdentity.id);\\n    }\\n\\n    function issueCertification(\\n        uint256 identityID,\\n        string memory name,\\n        uint256 issueDate,\\n        bool verified\\n    ) public {\\n        Identity storage identity = identities[msg.sender];\\n        require(identity.id == identityID, \\\"Invalid Identity\\\");\\n\\n        uint256 certificationID = block.timestamp;\\n        Certification storage certification = certifications[certificationID];\\n        certification.id = certificationID;\\n        certification.name = name;\\n        certification.issueDate = issueDate;\\n        certification.verified = verified;\\n\\n        identity.certificationIDs.push(certificationID);\\n\\n        emit CertificationIssued(certificationID, identityID);\\n    }\\n\\n    function verifyCertification(uint256 certificationID) public view returns (bool) {\\n        Certification memory certification = certifications[certificationID];\\n        return certification.verified;\\n    }\\n\\n    function getIdentity(uint256 providedId) public view returns (Identity memory) {\\n        Identity memory storedIdentity = identities[msg.sender];\\n        require(storedIdentity.id == providedId, \\\"Provided SSID does not match the stored SSID\\\");\\n        return storedIdentity;\\n    }\\n}\\n\\ncontract Wallet {\\n    using SafeERC20 for IERC20;\\n\\n    address private owner;\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n    }\\n\\n    function transfer(address to, uint256 amount, IERC20 token) external {\\n        require(msg.sender == owner, \\\"Only owner can transfer\\\");\\n        token.safeTransfer(to, amount);\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return owner;\\n    }\\n}\\n\",\"keccak256\":\"0xff849fa7722716d0ccd881d062bea717c750c9097fb1ba24f1b3ca0769aa89f7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":966,"contract":"contracts/SSIDWithWallet.sol:Wallet","label":"owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}